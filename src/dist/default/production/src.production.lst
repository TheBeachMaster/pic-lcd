

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 18 02:41:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	idataBANK1
   200  08F8                     __pidataBANK1:	
   201                           
   202                           ;initializer for main@F1471
   203  08F8  3407               	retlw	7
   204  08F9  3400               	retlw	0
   205  08FA  341A               	retlw	26
   206  08FB  342C               	retlw	44
   207  08FC  343E               	retlw	62
   208                           
   209                           ;initializer for main@F1461
   210  08FD  3430               	retlw	48
   211  08FE  342E               	retlw	46
   212  08FF  3430               	retlw	48
   213  0900  3430               	retlw	48
   214  0901  3400               	retlw	0
   215                           
   216                           	psect	idataBANK3
   217  0902                     __pidataBANK3:	
   218                           
   219                           ;initializer for main@F1459
   220  0902  3450               	retlw	80
   221  0903  346F               	retlw	111
   222  0904  3477               	retlw	119
   223  0905  3465               	retlw	101
   224  0906  3472               	retlw	114
   225  0907  3420               	retlw	32
   226  0908  3446               	retlw	70
   227  0909  3461               	retlw	97
   228  090A  3463               	retlw	99
   229  090B  3474               	retlw	116
   230  090C  346F               	retlw	111
   231  090D  3472               	retlw	114
   232  090E  3400               	retlw	0
   233                           
   234                           	psect	strings
   235  0800                     __pstrings:	
   236  0800                     stringtab:	
   237  0800                     __stringtab:	
   238  0800                     stringcode:	
   239                           ;	String table - string pointers are 1 byte each
   240                           
   241  0800                     stringdir:	
   242  0800  3008               	movlw	high stringdir
   243  0801  008A               	movwf	10
   244  0802  0804               	movf	4,w
   245  0803  0A84               	incf	4,f
   246  0804  0782               	addwf	2,f
   247  0805                     __stringbase:	
   248  0805  3400               	retlw	0
   249  0806                     __end_of__stringtab:	
   250  0806                     sin@coeff_a:	
   251  0806  34F4               	retlw	244
   252  0807  344A               	retlw	74
   253  0808  3448               	retlw	72
   254  0809  3495               	retlw	149
   255  080A  3495               	retlw	149
   256  080B  34C7               	retlw	199
   257  080C  34C1               	retlw	193
   258  080D  34DC               	retlw	220
   259  080E  3445               	retlw	69
   260  080F  34DC               	retlw	220
   261  0810  346D               	retlw	109
   262  0811  34C3               	retlw	195
   263  0812  34B3               	retlw	179
   264  0813  3433               	retlw	51
   265  0814  3440               	retlw	64
   266  0815                     __end_ofsin@coeff_a:	
   267  0815                     sin@coeff_b:	
   268  0815  3434               	retlw	52
   269  0816  3401               	retlw	1
   270  0817  3448               	retlw	72
   271  0818  349D               	retlw	157
   272  0819  34B0               	retlw	176
   273  081A  3445               	retlw	69
   274  081B  3400               	retlw	0
   275  081C  34DA               	retlw	218
   276  081D  3442               	retlw	66
   277  081E  3400               	retlw	0
   278  081F  3480               	retlw	128
   279  0820  343F               	retlw	63
   280  0821                     __end_ofsin@coeff_b:	
   281  0009                     _PORTE	set	9
   282  0008                     _PORTD	set	8
   283  0006                     _PORTB	set	6
   284  0005                     _PORTA	set	5
   285  000F                     _TMR1H	set	15
   286  000E                     _TMR1L	set	14
   287  0007                     _PORTC	set	7
   288  0040                     _RD0	set	64
   289  0029                     _RA1	set	41
   290  0080                     _TMR1ON	set	128
   291  0028                     _RA0	set	40
   292  0089                     _TRISE	set	137
   293  0088                     _TRISD	set	136
   294  0087                     _TRISC	set	135
   295  0086                     _TRISB	set	134
   296  0085                     _TRISA	set	133
   297  009F                     _ADCON1	set	159
   298  0441                     _TRISD1	set	1089
   299  0440                     _TRISD0	set	1088
   300  0429                     _TRISA1	set	1065
   301  0428                     _TRISA0	set	1064
   302  0821                     STR_1:	
   303  0821  3450               	retlw	80	;'P'
   304  0822  346F               	retlw	111	;'o'
   305  0823  3477               	retlw	119	;'w'
   306  0824  3465               	retlw	101	;'e'
   307  0825  3472               	retlw	114	;'r'
   308  0826  3420               	retlw	32	;' '
   309  0827  3446               	retlw	70	;'F'
   310  0828  3461               	retlw	97	;'a'
   311  0829  3463               	retlw	99	;'c'
   312  082A  3474               	retlw	116	;'t'
   313  082B  346F               	retlw	111	;'o'
   314  082C  3472               	retlw	114	;'r'
   315  082D  3400               	retlw	0
   316                           
   317                           ; #config settings
   318  0000                     
   319                           	psect	cinit
   320  07D9                     start_initialization:	
   321  07D9                     __initialization:	
   322                           
   323                           ; Initialize objects allocated to BANK3
   324  07D9  1783               	bsf	3,7	;select IRP bank2
   325  07DA  309D               	movlw	low (__pdataBANK3+13)
   326  07DB  00FD               	movwf	btemp+-1
   327  07DC  3009               	movlw	high __pidataBANK3
   328  07DD  00FE               	movwf	btemp
   329  07DE  3002               	movlw	low __pidataBANK3
   330  07DF  00FF               	movwf	btemp+1
   331  07E0  3090               	movlw	low __pdataBANK3
   332  07E1  0084               	movwf	4
   333  07E2  120A  158A  2124  120A  118A  	fcall	init_ram0
   334                           
   335                           ; Initialize objects allocated to BANK1
   336  07E7  1383               	bcf	3,7	;select IRP bank0
   337  07E8  30E1               	movlw	low (__pdataBANK1+10)
   338  07E9  00FD               	movwf	btemp+-1
   339  07EA  3008               	movlw	high __pidataBANK1
   340  07EB  00FE               	movwf	btemp
   341  07EC  30F8               	movlw	low __pidataBANK1
   342  07ED  00FF               	movwf	btemp+1
   343  07EE  30D7               	movlw	low __pdataBANK1
   344  07EF  0084               	movwf	4
   345  07F0  120A  158A  2124   	fcall	init_ram0
   346                           
   347                           ; Clear objects allocated to BANK1
   348  07F3  1683               	bsf	3,5	;RP0=1, select bank1
   349  07F4  1303               	bcf	3,6	;RP1=0, select bank1
   350  07F5  01E1               	clrf	__pbssBANK1& (0+127)
   351  07F6  01E2               	clrf	(__pbssBANK1+1)& (0+127)
   352  07F7  01E3               	clrf	(__pbssBANK1+2)& (0+127)
   353  07F8  01E4               	clrf	(__pbssBANK1+3)& (0+127)
   354  07F9  01E5               	clrf	(__pbssBANK1+4)& (0+127)
   355  07FA  01E6               	clrf	(__pbssBANK1+5)& (0+127)
   356  07FB  01E7               	clrf	(__pbssBANK1+6)& (0+127)
   357  07FC                     end_of_initialization:	
   358                           ;End of C runtime variable initialization code
   359                           
   360  07FC                     __end_of__initialization:	
   361  07FC  0183               	clrf	3
   362  07FD  120A  118A  2E04   	ljmp	_main	;jump to C main() function
   363                           
   364                           	psect	bssBANK1
   365  00E1                     __pbssBANK1:	
   366  00E1                     _lcd:	
   367  00E1                     	ds	5
   368  00E6                     _errno:	
   369  00E6                     	ds	2
   370                           
   371                           	psect	dataBANK1
   372  00D7                     __pdataBANK1:	
   373  00D7                     main@F1471:	
   374  00D7                     	ds	5
   375  00DC                     main@F1461:	
   376  00DC                     	ds	5
   377                           
   378                           	psect	dataBANK3
   379  0190                     __pdataBANK3:	
   380  0190                     main@F1459:	
   381  0190                     	ds	13
   382                           
   383                           	psect	inittext
   384  0920                     init_fetch0:	
   385                           ;	Called with low address in FSR and high address in W
   386                           
   387  0920  087E               	movf	126,w
   388  0921  008A               	movwf	10
   389  0922  087F               	movf	127,w
   390  0923  0082               	movwf	2
   391  0924                     init_ram0:	
   392                           ;Called with:
   393                           ;	high address of idata address in btemp 
   394                           ;	low address of idata address in btemp+1 
   395                           ;	low address of data in FSR
   396                           ;	high address + 1 of data in btemp-1
   397                           
   398  0924  2120  120A  158A   	fcall	init_fetch0
   399  0927  0080               	movwf	0
   400  0928  0A84               	incf	4,f
   401  0929  0804               	movf	4,w
   402  092A  067D               	xorwf	125,w
   403  092B  1903               	btfsc	3,2
   404  092C  3400               	retlw	0
   405  092D  0AFF               	incf	127,f
   406  092E  1903               	btfsc	3,2
   407  092F  0AFE               	incf	126,f
   408  0930  2924               	goto	init_ram0
   409                           
   410                           	psect	cstackBANK1
   411  00A0                     __pcstackBANK1:	
   412  00A0                     powerFactor@t:	
   413                           
   414                           ; 2 bytes @ 0x0
   415  00A0                     	ds	2
   416  00A2                     powerFactor@tm:	
   417                           
   418                           ; 3 bytes @ 0x2
   419  00A2                     	ds	3
   420  00A5                     powerFactor@pf:	
   421                           
   422                           ; 3 bytes @ 0x5
   423  00A5                     	ds	3
   424  00A8                     _powerFactor$638:	
   425                           
   426                           ; 3 bytes @ 0x8
   427  00A8                     	ds	3
   428  00AB                     _powerFactor$639:	
   429                           
   430                           ; 3 bytes @ 0xB
   431  00AB                     	ds	3
   432  00AE                     powerFactor@a:	
   433                           
   434                           ; 2 bytes @ 0xE
   435  00AE                     	ds	2
   436  00B0                     powerFactor@b:	
   437                           
   438                           ; 2 bytes @ 0x10
   439  00B0                     	ds	2
   440  00B2                     powerFactor@x:	
   441                           
   442                           ; 2 bytes @ 0x12
   443  00B2                     	ds	2
   444  00B4                     main@payload:	
   445                           
   446                           ; 13 bytes @ 0x14
   447  00B4                     	ds	13
   448  00C1                     main@c:	
   449                           
   450                           ; 5 bytes @ 0x21
   451  00C1                     	ds	5
   452  00C6                     main@lcd:	
   453                           
   454                           ; 5 bytes @ 0x26
   455  00C6                     	ds	5
   456  00CB                     main@a:	
   457                           
   458                           ; 2 bytes @ 0x2B
   459  00CB                     	ds	2
   460  00CD                     main@b:	
   461                           
   462                           ; 2 bytes @ 0x2D
   463  00CD                     	ds	2
   464  00CF                     main@d:	
   465                           
   466                           ; 2 bytes @ 0x2F
   467  00CF                     	ds	2
   468  00D1                     main@f:	
   469                           
   470                           ; 2 bytes @ 0x31
   471  00D1                     	ds	2
   472  00D3                     main@e:	
   473                           
   474                           ; 2 bytes @ 0x33
   475  00D3                     	ds	2
   476  00D5                     main@x:	
   477                           
   478                           ; 2 bytes @ 0x35
   479  00D5                     	ds	2
   480                           
   481                           	psect	cstackCOMMON
   482  0070                     __pcstackCOMMON:	
   483  0070                     ?___ftge:	
   484  0070                     ?_LCD_Write:	
   485                           ; 1 bit 
   486                           
   487  0070                     ?_LCD_putrs:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_LCD_putc:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_LCD_Out:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_LCD_Out:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?___bmul:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?___awdiv:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?___awmod:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0070                     ?___ftpack:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0070                     ?_frexp:	
   515                           ; 3 bytes @ 0x0
   516                           
   517  0070                     ?___ftneg:	
   518                           ; 3 bytes @ 0x0
   519                           
   520  0070                     ___bmul@multiplicand:	
   521                           ; 3 bytes @ 0x0
   522                           
   523  0070                     ___awdiv@divisor:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ___awmod@divisor:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0070                     ___ftpack@arg:	
   530                           ; 2 bytes @ 0x0
   531                           
   532  0070                     frexp@value:	
   533                           ; 3 bytes @ 0x0
   534                           
   535  0070                     ___ftge@ff1:	
   536                           ; 3 bytes @ 0x0
   537                           
   538  0070                     ___ftneg@f1:	
   539                           ; 3 bytes @ 0x0
   540                           
   541                           
   542                           ; 3 bytes @ 0x0
   543  0070                     	ds	1
   544  0071                     ??___bmul:	
   545                           
   546                           ; 1 bytes @ 0x1
   547  0071                     	ds	1
   548  0072                     ___bmul@product:	
   549  0072                     ___awdiv@dividend:	
   550                           ; 1 bytes @ 0x2
   551                           
   552  0072                     ___awmod@dividend:	
   553                           ; 2 bytes @ 0x2
   554                           
   555                           
   556                           ; 2 bytes @ 0x2
   557  0072                     	ds	1
   558  0073                     ??___ftneg:	
   559  0073                     LCD_Out@c:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0073                     ___bmul@multiplier:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     ___ftpack@exp:	
   566                           ; 1 bytes @ 0x3
   567                           
   568  0073                     frexp@eptr:	
   569                           ; 1 bytes @ 0x3
   570                           
   571  0073                     ___ftge@ff2:	
   572                           ; 1 bytes @ 0x3
   573                           
   574                           
   575                           ; 3 bytes @ 0x3
   576  0073                     	ds	1
   577  0074                     ??_LCD_Write:	
   578  0074                     ??_LCD_putc:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0074                     ??_frexp:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0074                     ??___awdiv:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0074                     ??___awmod:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0074                     ___ftpack@sign:	
   591                           ; 1 bytes @ 0x4
   592                           
   593                           
   594                           ; 1 bytes @ 0x4
   595  0074                     	ds	1
   596  0075                     ??___ftpack:	
   597  0075                     ___awdiv@counter:	
   598                           ; 1 bytes @ 0x5
   599                           
   600  0075                     ___awmod@counter:	
   601                           ; 1 bytes @ 0x5
   602                           
   603                           
   604                           ; 1 bytes @ 0x5
   605  0075                     	ds	1
   606  0076                     ??___ftge:	
   607  0076                     ___awdiv@sign:	
   608                           ; 1 bytes @ 0x6
   609                           
   610  0076                     ___awmod@sign:	
   611                           ; 1 bytes @ 0x6
   612                           
   613                           
   614                           ; 1 bytes @ 0x6
   615  0076                     	ds	1
   616  0077                     LCD_Write@c:	
   617  0077                     LCD_putc@c:	
   618                           ; 1 bytes @ 0x7
   619                           
   620  0077                     ___awdiv@quotient:	
   621                           ; 1 bytes @ 0x7
   622                           
   623                           
   624                           ; 2 bytes @ 0x7
   625  0077                     	ds	1
   626  0078                     ?_LCD_Init:	
   627  0078                     ??_LCD_putrs:	
   628                           ; 1 bytes @ 0x8
   629                           
   630  0078                     ?___awtoft:	
   631                           ; 1 bytes @ 0x8
   632                           
   633  0078                     ?___ftmul:	
   634                           ; 3 bytes @ 0x8
   635                           
   636  0078                     LCD_putrs@i:	
   637                           ; 3 bytes @ 0x8
   638                           
   639  0078                     ___awtoft@c:	
   640                           ; 2 bytes @ 0x8
   641                           
   642  0078                     ___ftmul@f1:	
   643                           ; 2 bytes @ 0x8
   644                           
   645  0078                     LCD_Init@display:	
   646                           ; 3 bytes @ 0x8
   647                           
   648                           
   649                           ; 5 bytes @ 0x8
   650  0078                     	ds	2
   651  007A                     LCD_putrs@a:	
   652                           
   653                           ; 1 bytes @ 0xA
   654  007A                     	ds	1
   655  007B                     ??___awtoft:	
   656  007B                     ___ftmul@f2:	
   657                           ; 1 bytes @ 0xB
   658                           
   659                           
   660                           ; 3 bytes @ 0xB
   661  007B                     	ds	2
   662  007D                     LCD_Init@cmd:	
   663  007D                     ___awtoft@sign:	
   664                           ; 1 bytes @ 0xD
   665                           
   666                           
   667                           ; 1 bytes @ 0xD
   668  007D                     	ds	1
   669  007E                     ??_cos:	
   670  007E                     ??_fabs:	
   671                           ; 1 bytes @ 0xE
   672                           
   673  007E                     ??___ftsub:	
   674                           ; 1 bytes @ 0xE
   675                           
   676                           
   677                           	psect	cstackBANK0
   678  0020                     __pcstackBANK0:	
   679                           ; 1 bytes @ 0xE
   680                           
   681  0020                     ??_LCD_Init:	
   682  0020                     ??___ftmul:	
   683                           ; 1 bytes @ 0x0
   684                           
   685                           
   686                           ; 1 bytes @ 0x0
   687  0020                     	ds	4
   688  0024                     ___ftmul@exp:	
   689                           
   690                           ; 1 bytes @ 0x4
   691  0024                     	ds	1
   692  0025                     ___ftmul@f3_as_product:	
   693                           
   694                           ; 3 bytes @ 0x5
   695  0025                     	ds	3
   696  0028                     ___ftmul@cntr:	
   697                           
   698                           ; 1 bytes @ 0x8
   699  0028                     	ds	1
   700  0029                     ___ftmul@sign:	
   701                           
   702                           ; 1 bytes @ 0x9
   703  0029                     	ds	1
   704  002A                     ?___ftadd:	
   705  002A                     ?___fttol:	
   706                           ; 3 bytes @ 0xA
   707                           
   708  002A                     ___ftadd@f1:	
   709                           ; 4 bytes @ 0xA
   710                           
   711  002A                     ___fttol@f1:	
   712                           ; 3 bytes @ 0xA
   713                           
   714                           
   715                           ; 3 bytes @ 0xA
   716  002A                     	ds	3
   717  002D                     ___ftadd@f2:	
   718                           
   719                           ; 3 bytes @ 0xD
   720  002D                     	ds	1
   721  002E                     ??___fttol:	
   722                           
   723                           ; 1 bytes @ 0xE
   724  002E                     	ds	2
   725  0030                     ??___ftadd:	
   726                           
   727                           ; 1 bytes @ 0x10
   728  0030                     	ds	2
   729  0032                     ___fttol@sign1:	
   730                           
   731                           ; 1 bytes @ 0x12
   732  0032                     	ds	1
   733  0033                     ___fttol@lval:	
   734                           
   735                           ; 4 bytes @ 0x13
   736  0033                     	ds	1
   737  0034                     ___ftadd@sign:	
   738                           
   739                           ; 1 bytes @ 0x14
   740  0034                     	ds	1
   741  0035                     ___ftadd@exp2:	
   742                           
   743                           ; 1 bytes @ 0x15
   744  0035                     	ds	1
   745  0036                     ___ftadd@exp1:	
   746                           
   747                           ; 1 bytes @ 0x16
   748  0036                     	ds	1
   749  0037                     ?_eval_poly:	
   750  0037                     ___fttol@exp1:	
   751                           ; 3 bytes @ 0x17
   752                           
   753  0037                     eval_poly@x:	
   754                           ; 1 bytes @ 0x17
   755                           
   756                           
   757                           ; 3 bytes @ 0x17
   758  0037                     	ds	1
   759  0038                     ?___altoft:	
   760  0038                     ___altoft@c:	
   761                           ; 3 bytes @ 0x18
   762                           
   763                           
   764                           ; 4 bytes @ 0x18
   765  0038                     	ds	2
   766  003A                     eval_poly@d:	
   767                           
   768                           ; 1 bytes @ 0x1A
   769  003A                     	ds	1
   770  003B                     eval_poly@n:	
   771                           
   772                           ; 2 bytes @ 0x1B
   773  003B                     	ds	1
   774  003C                     ??___altoft:	
   775                           
   776                           ; 1 bytes @ 0x1C
   777  003C                     	ds	1
   778  003D                     ??_eval_poly:	
   779                           
   780                           ; 1 bytes @ 0x1D
   781  003D                     	ds	1
   782  003E                     ___altoft@exp:	
   783  003E                     eval_poly@res:	
   784                           ; 1 bytes @ 0x1E
   785                           
   786                           
   787                           ; 3 bytes @ 0x1E
   788  003E                     	ds	1
   789  003F                     ___altoft@sign:	
   790                           
   791                           ; 1 bytes @ 0x1F
   792  003F                     	ds	1
   793  0040                     ?_ceil:	
   794  0040                     ?_floor:	
   795                           ; 3 bytes @ 0x20
   796                           
   797  0040                     ceil@x:	
   798                           ; 3 bytes @ 0x20
   799                           
   800  0040                     floor@x:	
   801                           ; 3 bytes @ 0x20
   802                           
   803                           
   804                           ; 3 bytes @ 0x20
   805  0040                     	ds	1
   806  0041                     ?___ftdiv:	
   807  0041                     ___ftdiv@f2:	
   808                           ; 3 bytes @ 0x21
   809                           
   810                           
   811                           ; 3 bytes @ 0x21
   812  0041                     	ds	2
   813  0043                     ??_ceil:	
   814  0043                     ??_floor:	
   815                           ; 1 bytes @ 0x23
   816                           
   817                           
   818                           ; 1 bytes @ 0x23
   819  0043                     	ds	1
   820  0044                     ceil@i:	
   821  0044                     ___ftdiv@f1:	
   822                           ; 3 bytes @ 0x24
   823                           
   824  0044                     floor@i:	
   825                           ; 3 bytes @ 0x24
   826                           
   827                           
   828                           ; 3 bytes @ 0x24
   829  0044                     	ds	3
   830  0047                     ??___ftdiv:	
   831  0047                     ceil@expon:	
   832                           ; 1 bytes @ 0x27
   833                           
   834  0047                     floor@expon:	
   835                           ; 2 bytes @ 0x27
   836                           
   837                           
   838                           ; 2 bytes @ 0x27
   839  0047                     	ds	2
   840  0049                     ?_fabs:	
   841  0049                     ?___ftsub:	
   842                           ; 3 bytes @ 0x29
   843                           
   844  0049                     fabs@d:	
   845                           ; 3 bytes @ 0x29
   846                           
   847  0049                     ___ftsub@f2:	
   848                           ; 3 bytes @ 0x29
   849                           
   850                           
   851                           ; 3 bytes @ 0x29
   852  0049                     	ds	2
   853  004B                     ___ftdiv@cntr:	
   854                           
   855                           ; 1 bytes @ 0x2B
   856  004B                     	ds	1
   857  004C                     ___ftdiv@f3:	
   858  004C                     ___ftsub@f1:	
   859                           ; 3 bytes @ 0x2C
   860                           
   861                           
   862                           ; 3 bytes @ 0x2C
   863  004C                     	ds	3
   864  004F                     ___ftdiv@exp:	
   865                           
   866                           ; 1 bytes @ 0x2F
   867  004F                     	ds	1
   868  0050                     ___ftdiv@sign:	
   869                           
   870                           ; 1 bytes @ 0x30
   871  0050                     	ds	1
   872  0051                     ?_sin:	
   873  0051                     sin@f:	
   874                           ; 3 bytes @ 0x31
   875                           
   876                           
   877                           ; 3 bytes @ 0x31
   878  0051                     	ds	3
   879  0054                     ??_sin:	
   880                           
   881                           ; 1 bytes @ 0x34
   882  0054                     	ds	1
   883  0055                     sin@y:	
   884                           
   885                           ; 3 bytes @ 0x35
   886  0055                     	ds	3
   887  0058                     _sin$641:	
   888                           
   889                           ; 3 bytes @ 0x38
   890  0058                     	ds	3
   891  005B                     sin@x2:	
   892                           
   893                           ; 3 bytes @ 0x3B
   894  005B                     	ds	3
   895  005E                     sin@sgn:	
   896                           
   897                           ; 1 bytes @ 0x3E
   898  005E                     	ds	1
   899  005F                     ?_cos:	
   900  005F                     cos@f:	
   901                           ; 3 bytes @ 0x3F
   902                           
   903                           
   904                           ; 3 bytes @ 0x3F
   905  005F                     	ds	3
   906  0062                     _cos$640:	
   907                           
   908                           ; 3 bytes @ 0x42
   909  0062                     	ds	3
   910  0065                     ?_powerFactor:	
   911                           
   912                           ; 2 bytes @ 0x45
   913  0065                     	ds	2
   914  0067                     ??_powerFactor:	
   915                           
   916                           ; 1 bytes @ 0x47
   917  0067                     	ds	2
   918  0069                     ??_main:	
   919                           
   920                           ; 1 bytes @ 0x49
   921  0069                     	ds	6
   922                           
   923                           	psect	maintext
   924  0604                     __pmaintext:	
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   927 ;;
   928 ;; *************** function _main *****************
   929 ;; Defined at:
   930 ;;		line 75 in file "main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  payload        13   20[BANK1 ] unsigned char [13]
   935 ;;  c               5   33[BANK1 ] unsigned char [5]
   936 ;;  lcd             5   38[BANK1 ] struct .
   937 ;;  pf              3    0        float 
   938 ;;  tm              3    0        float 
   939 ;;  x               2   53[BANK1 ] int 
   940 ;;  e               2   51[BANK1 ] int 
   941 ;;  f               2   49[BANK1 ] int 
   942 ;;  d               2   47[BANK1 ] int 
   943 ;;  b               2   45[BANK1 ] int 
   944 ;;  a               2   43[BANK1 ] int 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : B00/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0      35       0       0
   956 ;;      Temps:          0       6       0       0       0
   957 ;;      Totals:         0       6      35       0       0
   958 ;;Total ram usage:       41 bytes
   959 ;; Hardware stack levels required when called:    6
   960 ;; This function calls:
   961 ;;		_LCD_Init
   962 ;;		_LCD_Write
   963 ;;		_LCD_putc
   964 ;;		_LCD_putrs
   965 ;;		___awdiv
   966 ;;		___awmod
   967 ;;		_powerFactor
   968 ;; This function is called by:
   969 ;;		Startup code after reset
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _main
   975  0604                     _main:	
   976                           
   977                           ;main.c: 77: char payload[] = "Power Factor";
   978                           
   979                           ;incstack = 0
   980                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   981  0604  30B4               	movlw	main@payload& (0+255)
   982  0605  0084               	movwf	4
   983  0606  3090               	movlw	low main@F1459
   984  0607  1283               	bcf	3,5	;RP0=0, select bank0
   985  0608  1303               	bcf	3,6	;RP1=0, select bank0
   986  0609  00E9               	movwf	??_main
   987  060A  0804               	movf	4,w
   988  060B  00EA               	movwf	??_main+1
   989  060C  300D               	movlw	13
   990  060D  00EB               	movwf	??_main+2
   991  060E                     u3070:	
   992  060E  0869               	movf	??_main,w
   993  060F  0084               	movwf	4
   994  0610  1783               	bsf	3,7	;select IRP bank3
   995  0611  0800               	movf	0,w
   996  0612  00EC               	movwf	??_main+3
   997  0613  0AE9               	incf	??_main,f
   998  0614  086A               	movf	??_main+1,w
   999  0615  0084               	movwf	4
  1000  0616  1383               	bcf	3,7	;select IRP bank1
  1001  0617  086C               	movf	??_main+3,w
  1002  0618  0080               	movwf	0
  1003  0619  0AEA               	incf	??_main+1,f
  1004  061A  0BEB               	decfsz	??_main+2,f
  1005  061B  2E0E               	goto	u3070
  1006                           
  1007                           ;main.c: 78: char c[]="0.00";
  1008  061C  30C1               	movlw	main@c& (0+255)
  1009  061D  0084               	movwf	4
  1010  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1011  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0620  085C               	movf	main@F1461^(0+128),w
  1013  0621  0080               	movwf	0
  1014  0622  0A84               	incf	4,f
  1015  0623  085D               	movf	(main@F1461^(0+128)+1),w
  1016  0624  0080               	movwf	0
  1017  0625  0A84               	incf	4,f
  1018  0626  085E               	movf	(main@F1461^(0+128)+2),w
  1019  0627  0080               	movwf	0
  1020  0628  0A84               	incf	4,f
  1021  0629  085F               	movf	(main@F1461^(0+128)+3),w
  1022  062A  0080               	movwf	0
  1023  062B  0A84               	incf	4,f
  1024  062C  0860               	movf	(main@F1461^(0+128)+4),w
  1025  062D  0080               	movwf	0
  1026                           
  1027                           ;main.c: 79: int a,b,d,x,f,e;
  1028                           ;main.c: 80: float tm,pf;
  1029                           ;main.c: 82: LCD lcd = { &PORTC, 2, 3, 4, 5, 6, 7 };
  1030  062E  30C6               	movlw	main@lcd& (0+255)
  1031  062F  0084               	movwf	4
  1032  0630  0857               	movf	main@F1471^(0+128),w
  1033  0631  0080               	movwf	0
  1034  0632  0A84               	incf	4,f
  1035  0633  0858               	movf	(main@F1471^(0+128)+1),w
  1036  0634  0080               	movwf	0
  1037  0635  0A84               	incf	4,f
  1038  0636  0859               	movf	(main@F1471^(0+128)+2),w
  1039  0637  0080               	movwf	0
  1040  0638  0A84               	incf	4,f
  1041  0639  085A               	movf	(main@F1471^(0+128)+3),w
  1042  063A  0080               	movwf	0
  1043  063B  0A84               	incf	4,f
  1044  063C  085B               	movf	(main@F1471^(0+128)+4),w
  1045  063D  0080               	movwf	0
  1046                           
  1047                           ;main.c: 84: LCD_Init(lcd);
  1048  063E  3078               	movlw	LCD_Init@display& (0+255)
  1049  063F  0084               	movwf	4
  1050  0640  0846               	movf	main@lcd^(0+128),w
  1051  0641  0080               	movwf	0
  1052  0642  0A84               	incf	4,f
  1053  0643  0847               	movf	(main@lcd^(0+128)+1),w
  1054  0644  0080               	movwf	0
  1055  0645  0A84               	incf	4,f
  1056  0646  0848               	movf	(main@lcd^(0+128)+2),w
  1057  0647  0080               	movwf	0
  1058  0648  0A84               	incf	4,f
  1059  0649  0849               	movf	(main@lcd^(0+128)+3),w
  1060  064A  0080               	movwf	0
  1061  064B  0A84               	incf	4,f
  1062  064C  084A               	movf	(main@lcd^(0+128)+4),w
  1063  064D  0080               	movwf	0
  1064  064E  120A  118A  2004  120A  118A  	fcall	_LCD_Init
  1065                           
  1066                           ;main.c: 86: ADCON1 = 0x08;
  1067  0653  3008               	movlw	8
  1068  0654  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0655  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0656  009F               	movwf	31	;volatile
  1071                           
  1072                           ;main.c: 87: TRISA0 = 1;
  1073  0657  1405               	bsf	5,0	;volatile
  1074                           
  1075                           ;main.c: 88: TRISA1 = 1;
  1076  0658  1485               	bsf	5,1	;volatile
  1077                           
  1078                           ;main.c: 89: TRISD0 = 0;
  1079  0659  1008               	bcf	8,0	;volatile
  1080                           
  1081                           ;main.c: 90: TRISD1 = 0;
  1082  065A  1088               	bcf	8,1	;volatile
  1083  065B                     l2189:	
  1084                           ;main.c: 92: while(1)
  1085                           
  1086                           
  1087                           ;main.c: 93: {
  1088                           ;main.c: 94: a = powerFactor();
  1089  065B  120A  118A  235A  120A  118A  	fcall	_powerFactor
  1090  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0662  0866               	movf	?_powerFactor+1,w
  1093  0663  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0664  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0665  00CC               	movwf	(main@a+1)^(0+128)
  1096  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0668  0865               	movf	?_powerFactor,w
  1099  0669  1683               	bsf	3,5	;RP0=1, select bank1
  1100  066A  1303               	bcf	3,6	;RP1=0, select bank1
  1101  066B  00CB               	movwf	main@a^(0+128)
  1102                           
  1103                           ;main.c: 95: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1104  066C  3020               	movlw	32
  1105  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1106  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1107  066F  00E9               	movwf	??_main
  1108  0670                     u3107:	
  1109  0670  0BE9               	decfsz	??_main,f
  1110  0671  2E70               	goto	u3107
  1111  0672  0000               	nop
  1112                           
  1113                           ;main.c: 96: b = powerFactor();
  1114  0673  120A  118A  235A  120A  118A  	fcall	_powerFactor
  1115  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1117  067A  0866               	movf	?_powerFactor+1,w
  1118  067B  1683               	bsf	3,5	;RP0=1, select bank1
  1119  067C  1303               	bcf	3,6	;RP1=0, select bank1
  1120  067D  00CE               	movwf	(main@b+1)^(0+128)
  1121  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1122  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0680  0865               	movf	?_powerFactor,w
  1124  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0683  00CD               	movwf	main@b^(0+128)
  1127                           
  1128                           ;main.c: 97: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1129  0684  3020               	movlw	32
  1130  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0687  00E9               	movwf	??_main
  1133  0688                     u3117:	
  1134  0688  0BE9               	decfsz	??_main,f
  1135  0689  2E88               	goto	u3117
  1136  068A  0000               	nop
  1137                           
  1138                           ;main.c: 98: d = powerFactor();
  1139  068B  120A  118A  235A  120A  118A  	fcall	_powerFactor
  1140  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0692  0866               	movf	?_powerFactor+1,w
  1143  0693  1683               	bsf	3,5	;RP0=1, select bank1
  1144  0694  1303               	bcf	3,6	;RP1=0, select bank1
  1145  0695  00D0               	movwf	(main@d+1)^(0+128)
  1146  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0698  0865               	movf	?_powerFactor,w
  1149  0699  1683               	bsf	3,5	;RP0=1, select bank1
  1150  069A  1303               	bcf	3,6	;RP1=0, select bank1
  1151  069B  00CF               	movwf	main@d^(0+128)
  1152                           
  1153                           ;main.c: 99: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1154  069C  3020               	movlw	32
  1155  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1156  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1157  069F  00E9               	movwf	??_main
  1158  06A0                     u3127:	
  1159  06A0  0BE9               	decfsz	??_main,f
  1160  06A1  2EA0               	goto	u3127
  1161  06A2  0000               	nop
  1162                           
  1163                           ;main.c: 100: e = powerFactor();
  1164  06A3  120A  118A  235A  120A  118A  	fcall	_powerFactor
  1165  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1166  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1167  06AA  0866               	movf	?_powerFactor+1,w
  1168  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  1169  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  1170  06AD  00D4               	movwf	(main@e+1)^(0+128)
  1171  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1172  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1173  06B0  0865               	movf	?_powerFactor,w
  1174  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  1175  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  1176  06B3  00D3               	movwf	main@e^(0+128)
  1177                           
  1178                           ;main.c: 101: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1179  06B4  3020               	movlw	32
  1180  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1181  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1182  06B7  00E9               	movwf	??_main
  1183  06B8                     u3137:	
  1184  06B8  0BE9               	decfsz	??_main,f
  1185  06B9  2EB8               	goto	u3137
  1186  06BA  0000               	nop
  1187                           
  1188                           ;main.c: 102: f = powerFactor();
  1189  06BB  120A  118A  235A  120A  118A  	fcall	_powerFactor
  1190  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1191  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1192  06C2  0866               	movf	?_powerFactor+1,w
  1193  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  1194  06C4  1303               	bcf	3,6	;RP1=0, select bank1
  1195  06C5  00D2               	movwf	(main@f+1)^(0+128)
  1196  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1197  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1198  06C8  0865               	movf	?_powerFactor,w
  1199  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  1200  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  1201  06CB  00D1               	movwf	main@f^(0+128)
  1202                           
  1203                           ;main.c: 104: x = (a+b+d+f+e)/5;
  1204  06CC  3005               	movlw	5
  1205  06CD  00F0               	movwf	___awdiv@divisor
  1206  06CE  3000               	movlw	0
  1207  06CF  00F1               	movwf	___awdiv@divisor+1
  1208  06D0  084D               	movf	main@b^(0+128),w
  1209  06D1  074B               	addwf	main@a^(0+128),w
  1210  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1211  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1212  06D4  00E9               	movwf	??_main
  1213  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1214  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1215  06D7  084E               	movf	(main@b+1)^(0+128),w
  1216  06D8  1803               	skipnc
  1217  06D9  0A4E               	incf	(main@b+1)^(0+128),w
  1218  06DA  074C               	addwf	(main@a+1)^(0+128),w
  1219  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1220  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1221  06DD  00EA               	movwf	??_main+1
  1222  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  1223  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  1224  06E0  084F               	movf	main@d^(0+128),w
  1225  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1226  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1227  06E3  0769               	addwf	??_main,w
  1228  06E4  00EB               	movwf	??_main+2
  1229  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1230  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1231  06E7  0850               	movf	(main@d+1)^(0+128),w
  1232  06E8  1803               	skipnc
  1233  06E9  0A50               	incf	(main@d+1)^(0+128),w
  1234  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1235  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1236  06EC  076A               	addwf	??_main+1,w
  1237  06ED  00EC               	movwf	??_main+3
  1238  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  1239  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  1240  06F0  0851               	movf	main@f^(0+128),w
  1241  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1242  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1243  06F3  076B               	addwf	??_main+2,w
  1244  06F4  00ED               	movwf	??_main+4
  1245  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  1246  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  1247  06F7  0852               	movf	(main@f+1)^(0+128),w
  1248  06F8  1803               	skipnc
  1249  06F9  0A52               	incf	(main@f+1)^(0+128),w
  1250  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1251  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1252  06FC  076C               	addwf	??_main+3,w
  1253  06FD  00EE               	movwf	??_main+5
  1254  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  1255  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0700  0853               	movf	main@e^(0+128),w
  1257  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0703  076D               	addwf	??_main+4,w
  1260  0704  00F2               	movwf	___awdiv@dividend
  1261  0705  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0706  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0707  0854               	movf	(main@e+1)^(0+128),w
  1264  0708  1803               	skipnc
  1265  0709  0A54               	incf	(main@e+1)^(0+128),w
  1266  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1267  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1268  070C  076E               	addwf	??_main+5,w
  1269  070D  00F3               	movwf	___awdiv@dividend+1
  1270  070E  120A  158A  2285  120A  118A  	fcall	___awdiv
  1271  0713  0871               	movf	?___awdiv+1,w
  1272  0714  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0715  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0716  00D6               	movwf	(main@x+1)^(0+128)
  1275  0717  0870               	movf	?___awdiv,w
  1276  0718  00D5               	movwf	main@x^(0+128)
  1277                           
  1278                           ;main.c: 105: c[3]=x%10 + 0x30;
  1279  0719  300A               	movlw	10
  1280  071A  00F0               	movwf	___awmod@divisor
  1281  071B  3000               	movlw	0
  1282  071C  00F1               	movwf	___awmod@divisor+1
  1283  071D  0856               	movf	(main@x+1)^(0+128),w
  1284  071E  00F3               	movwf	___awmod@dividend+1
  1285  071F  0855               	movf	main@x^(0+128),w
  1286  0720  00F2               	movwf	___awmod@dividend
  1287  0721  120A  158A  223A  120A  118A  	fcall	___awmod
  1288  0726  0870               	movf	?___awmod,w
  1289  0727  3E30               	addlw	48
  1290  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1292  072A  00E9               	movwf	??_main
  1293  072B  0869               	movf	??_main,w
  1294  072C  1683               	bsf	3,5	;RP0=1, select bank1
  1295  072D  1303               	bcf	3,6	;RP1=0, select bank1
  1296  072E  00C4               	movwf	(main@c^(0+128)+3)
  1297                           
  1298                           ;main.c: 106: x=x/10;
  1299  072F  300A               	movlw	10
  1300  0730  00F0               	movwf	___awdiv@divisor
  1301  0731  3000               	movlw	0
  1302  0732  00F1               	movwf	___awdiv@divisor+1
  1303  0733  0856               	movf	(main@x+1)^(0+128),w
  1304  0734  00F3               	movwf	___awdiv@dividend+1
  1305  0735  0855               	movf	main@x^(0+128),w
  1306  0736  00F2               	movwf	___awdiv@dividend
  1307  0737  120A  158A  2285  120A  118A  	fcall	___awdiv
  1308  073C  0871               	movf	?___awdiv+1,w
  1309  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1310  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1311  073F  00D6               	movwf	(main@x+1)^(0+128)
  1312  0740  0870               	movf	?___awdiv,w
  1313  0741  00D5               	movwf	main@x^(0+128)
  1314                           
  1315                           ;main.c: 107: c[2]=x%10 + 0x30;
  1316  0742  300A               	movlw	10
  1317  0743  00F0               	movwf	___awmod@divisor
  1318  0744  3000               	movlw	0
  1319  0745  00F1               	movwf	___awmod@divisor+1
  1320  0746  0856               	movf	(main@x+1)^(0+128),w
  1321  0747  00F3               	movwf	___awmod@dividend+1
  1322  0748  0855               	movf	main@x^(0+128),w
  1323  0749  00F2               	movwf	___awmod@dividend
  1324  074A  120A  158A  223A  120A  118A  	fcall	___awmod
  1325  074F  0870               	movf	?___awmod,w
  1326  0750  3E30               	addlw	48
  1327  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0753  00E9               	movwf	??_main
  1330  0754  0869               	movf	??_main,w
  1331  0755  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0756  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0757  00C3               	movwf	(main@c^(0+128)+2)
  1334                           
  1335                           ;main.c: 108: x=x/10;
  1336  0758  300A               	movlw	10
  1337  0759  00F0               	movwf	___awdiv@divisor
  1338  075A  3000               	movlw	0
  1339  075B  00F1               	movwf	___awdiv@divisor+1
  1340  075C  0856               	movf	(main@x+1)^(0+128),w
  1341  075D  00F3               	movwf	___awdiv@dividend+1
  1342  075E  0855               	movf	main@x^(0+128),w
  1343  075F  00F2               	movwf	___awdiv@dividend
  1344  0760  120A  158A  2285  120A  118A  	fcall	___awdiv
  1345  0765  0871               	movf	?___awdiv+1,w
  1346  0766  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0767  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0768  00D6               	movwf	(main@x+1)^(0+128)
  1349  0769  0870               	movf	?___awdiv,w
  1350  076A  00D5               	movwf	main@x^(0+128)
  1351                           
  1352                           ;main.c: 109: c[0]=x%10 + 0x30;
  1353  076B  300A               	movlw	10
  1354  076C  00F0               	movwf	___awmod@divisor
  1355  076D  3000               	movlw	0
  1356  076E  00F1               	movwf	___awmod@divisor+1
  1357  076F  0856               	movf	(main@x+1)^(0+128),w
  1358  0770  00F3               	movwf	___awmod@dividend+1
  1359  0771  0855               	movf	main@x^(0+128),w
  1360  0772  00F2               	movwf	___awmod@dividend
  1361  0773  120A  158A  223A  120A  118A  	fcall	___awmod
  1362  0778  0870               	movf	?___awmod,w
  1363  0779  3E30               	addlw	48
  1364  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1365  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1366  077C  00E9               	movwf	??_main
  1367  077D  0869               	movf	??_main,w
  1368  077E  1683               	bsf	3,5	;RP0=1, select bank1
  1369  077F  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0780  00C1               	movwf	main@c^(0+128)
  1371                           
  1372                           ;main.c: 111: do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 
      +                          0x80 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0
      +                          ) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD_Wr
  1373  0781  300C               	movlw	12
  1374  0782  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  1375  0787  3000               	movlw	0
  1376  0788  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  1377                           
  1378                           ;main.c: 112: LCD_putrs("Power Factor");
  1379  078D  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1380  078E  120A  158A  2173  120A  118A  	fcall	_LCD_putrs
  1381                           
  1382                           ;main.c: 113: do { if ( 2 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 
      +                          0x80 + 0 & 0x0F); } while ( 0 ); } else if ( 2 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0
      +                          ) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 2 == 2 ) { do { LCD_Wr
  1383  0793  3009               	movlw	9
  1384  0794  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  1385  0799  3004               	movlw	4
  1386  079A  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  1387                           
  1388                           ;main.c: 114: LCD_putc(c);
  1389  079F  30C1               	movlw	(low main@c)& (0+255)
  1390  07A0  120A  158A  26AA  120A  118A  	fcall	_LCD_putc
  1391                           
  1392                           ;main.c: 116: if(x<90)
  1393  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  1394  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  1395  07A7  0856               	movf	(main@x+1)^(0+128),w
  1396  07A8  3A80               	xorlw	128
  1397  07A9  00FF               	movwf	127
  1398  07AA  3080               	movlw	128
  1399  07AB  027F               	subwf	127,w
  1400  07AC  1D03               	skipz
  1401  07AD  2FB0               	goto	u3085
  1402  07AE  305A               	movlw	90
  1403  07AF  0255               	subwf	main@x^(0+128),w
  1404  07B0                     u3085:	
  1405  07B0  1803               	skipnc
  1406  07B1  2FC6               	goto	l98
  1407                           
  1408                           ;main.c: 117: {
  1409                           ;main.c: 118: RD0 = 1;
  1410  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1411  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1412  07B4  1408               	bsf	8,0	;volatile
  1413                           
  1414                           ;main.c: 119: RD0 = 1;
  1415  07B5  1408               	bsf	8,0	;volatile
  1416                           
  1417                           ;main.c: 120: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1418  07B6  3015               	movlw	21
  1419  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1420  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1421  07B9  00EB               	movwf	??_main+2
  1422  07BA  304B               	movlw	75
  1423  07BB  00EA               	movwf	??_main+1
  1424  07BC  30BD               	movlw	189
  1425  07BD  00E9               	movwf	??_main
  1426  07BE                     u3147:	
  1427  07BE  0BE9               	decfsz	??_main,f
  1428  07BF  2FBE               	goto	u3147
  1429  07C0  0BEA               	decfsz	??_main+1,f
  1430  07C1  2FBE               	goto	u3147
  1431  07C2  0BEB               	decfsz	??_main+2,f
  1432  07C3  2FBE               	goto	u3147
  1433  07C4  2FC5               	nop2
  1434                           
  1435                           ;main.c: 121: }
  1436  07C5  2FCA               	goto	l2241
  1437  07C6                     l98:	
  1438                           
  1439                           ;main.c: 122: else
  1440                           ;main.c: 123: {
  1441                           ;main.c: 124: RD0 = 0;
  1442  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1443  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1444  07C8  1008               	bcf	8,0	;volatile
  1445                           
  1446                           ;main.c: 125: RD0 = 0;
  1447  07C9  1008               	bcf	8,0	;volatile
  1448  07CA                     l2241:	
  1449                           
  1450                           ;main.c: 126: }
  1451                           ;main.c: 127: _delay((unsigned long)((250)*(8000000/4000.0)));
  1452  07CA  3003               	movlw	3
  1453  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1454  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1455  07CD  00EB               	movwf	??_main+2
  1456  07CE  308A               	movlw	138
  1457  07CF  00EA               	movwf	??_main+1
  1458  07D0  3055               	movlw	85
  1459  07D1  00E9               	movwf	??_main
  1460  07D2                     u3157:	
  1461  07D2  0BE9               	decfsz	??_main,f
  1462  07D3  2FD2               	goto	u3157
  1463  07D4  0BEA               	decfsz	??_main+1,f
  1464  07D5  2FD2               	goto	u3157
  1465  07D6  0BEB               	decfsz	??_main+2,f
  1466  07D7  2FD2               	goto	u3157
  1467  07D8  2E5B               	goto	l2189
  1468  07D9                     __end_of_main:	
  1469                           
  1470                           	psect	text1
  1471  035A                     __ptext1:	
  1472 ;; *************** function _powerFactor *****************
  1473 ;; Defined at:
  1474 ;;		line 35 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  pf              3    5[BANK1 ] float 
  1479 ;;  tm              3    2[BANK1 ] float 
  1480 ;;  x               2   18[BANK1 ] int 
  1481 ;;  b               2   16[BANK1 ] int 
  1482 ;;  a               2   14[BANK1 ] int 
  1483 ;;  t               2    0[BANK1 ] int 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2   69[BANK0 ] int 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       2       0       0       0
  1494 ;;      Locals:         0       0      20       0       0
  1495 ;;      Temps:          0       2       0       0       0
  1496 ;;      Totals:         0       4      20       0       0
  1497 ;;Total ram usage:       24 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    5
  1500 ;; This function calls:
  1501 ;;		___awtoft
  1502 ;;		___ftdiv
  1503 ;;		___ftmul
  1504 ;;		___fttol
  1505 ;;		_ceil
  1506 ;;		_cos
  1507 ;;		_fabs
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _powerFactor
  1515  035A                     _powerFactor:	
  1516                           
  1517                           ;main.c: 37: int a=0,b=0,t=0,x=0;
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _powerFactor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1521  035A  1683               	bsf	3,5	;RP0=1, select bank1
  1522  035B  1303               	bcf	3,6	;RP1=0, select bank1
  1523  035C  01AE               	clrf	powerFactor@a^(0+128)
  1524  035D  01AF               	clrf	(powerFactor@a+1)^(0+128)
  1525  035E  01B0               	clrf	powerFactor@b^(0+128)
  1526  035F  01B1               	clrf	(powerFactor@b+1)^(0+128)
  1527  0360  01A0               	clrf	powerFactor@t^(0+128)
  1528  0361  01A1               	clrf	(powerFactor@t+1)^(0+128)
  1529  0362  01B2               	clrf	powerFactor@x^(0+128)
  1530  0363  01B3               	clrf	(powerFactor@x+1)^(0+128)
  1531                           
  1532                           ;main.c: 38: float tm,pf;
  1533                           ;main.c: 39: TMR1L=0;
  1534  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0366  018E               	clrf	14	;volatile
  1537                           
  1538                           ;main.c: 40: TMR1H=0;
  1539  0367  018F               	clrf	15	;volatile
  1540  0368  2B6A               	goto	l1991
  1541  0369                     l1993:	
  1542                           
  1543                           ;main.c: 44: TMR1ON = 1;
  1544  0369  1410               	bsf	16,0	;volatile
  1545  036A                     l1991:	
  1546                           ;main.c: 41: do
  1547                           
  1548                           
  1549                           ;main.c: 42: {
  1550                           ;main.c: 43: if(RA0 == 1)
  1551  036A  1805               	btfsc	5,0	;volatile
  1552  036B  2B69               	goto	l1993
  1553                           
  1554                           ;main.c: 45: else if(RA0 == 0 && TMR1ON == 1)
  1555  036C  1C05               	btfss	5,0	;volatile
  1556  036D  1C10               	btfss	16,0	;volatile
  1557  036E  2B6A               	goto	l1991
  1558                           
  1559                           ;main.c: 46: {
  1560                           ;main.c: 47: TMR1ON = 0;
  1561  036F  1010               	bcf	16,0	;volatile
  1562                           
  1563                           ;main.c: 51: a = (TMR1L | (TMR1H<<8)) * 2;
  1564                           
  1565                           ;main.c: 49: }
  1566                           ;main.c: 50: }while(1);
  1567                           
  1568                           ;main.c: 48: break;
  1569  0370  080F               	movf	15,w	;volatile
  1570  0371  00E8               	movwf	??_powerFactor+1
  1571  0372  080E               	movf	14,w	;volatile
  1572  0373  00E7               	movwf	??_powerFactor
  1573  0374  1003               	clrc
  1574  0375  0DE7               	rlf	??_powerFactor,f
  1575  0376  0DE8               	rlf	??_powerFactor+1,f
  1576  0377  0867               	movf	??_powerFactor,w
  1577  0378  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0379  1303               	bcf	3,6	;RP1=0, select bank1
  1579  037A  00AE               	movwf	powerFactor@a^(0+128)
  1580  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1581  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1582  037D  0868               	movf	??_powerFactor+1,w
  1583  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1584  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0380  00AF               	movwf	(powerFactor@a+1)^(0+128)
  1586                           
  1587                           ;main.c: 52: TMR1L=0;
  1588  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0383  018E               	clrf	14	;volatile
  1591                           
  1592                           ;main.c: 53: TMR1H=0;
  1593  0384  018F               	clrf	15	;volatile
  1594  0385                     l2005:	
  1595                           ;main.c: 54: do
  1596                           
  1597                           
  1598                           ;main.c: 55: {
  1599                           ;main.c: 56: if(RA0 == 1)
  1600  0385  1C05               	btfss	5,0	;volatile
  1601  0386  2B85               	goto	l2005
  1602                           
  1603                           ;main.c: 57: {
  1604                           ;main.c: 58: TMR1ON=1;
  1605  0387  1410               	bsf	16,0	;volatile
  1606                           
  1607                           ;main.c: 59: if(RA1==1)
  1608  0388  1C85               	btfss	5,1	;volatile
  1609  0389  2B85               	goto	l2005
  1610                           
  1611                           ;main.c: 60: {
  1612                           ;main.c: 61: TMR1ON=0;
  1613  038A  1010               	bcf	16,0	;volatile
  1614                           
  1615                           ;main.c: 67: b = TMR1L | (TMR1H<<8);
  1616                           
  1617                           ;main.c: 63: }
  1618                           ;main.c: 64: }
  1619                           ;main.c: 65: }while(1);
  1620                           
  1621                           ;main.c: 62: break;
  1622  038B  080F               	movf	15,w	;volatile
  1623  038C  1683               	bsf	3,5	;RP0=1, select bank1
  1624  038D  1303               	bcf	3,6	;RP1=0, select bank1
  1625  038E  00B1               	movwf	(powerFactor@b+1)^(0+128)
  1626  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0391  080E               	movf	14,w	;volatile
  1629  0392  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0393  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0394  00B0               	movwf	powerFactor@b^(0+128)
  1632                           
  1633                           ;main.c: 68: tm = (float)b/a;
  1634  0395  082F               	movf	(powerFactor@a+1)^(0+128),w
  1635  0396  00F9               	movwf	___awtoft@c+1
  1636  0397  082E               	movf	powerFactor@a^(0+128),w
  1637  0398  00F8               	movwf	___awtoft@c
  1638  0399  120A  158A  2131  120A  118A  	fcall	___awtoft
  1639  039E  0878               	movf	?___awtoft,w
  1640  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1641  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1642  03A1  00C1               	movwf	___ftdiv@f2
  1643  03A2  0879               	movf	?___awtoft+1,w
  1644  03A3  00C2               	movwf	___ftdiv@f2+1
  1645  03A4  087A               	movf	?___awtoft+2,w
  1646  03A5  00C3               	movwf	___ftdiv@f2+2
  1647  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1648  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1649  03A8  0831               	movf	(powerFactor@b+1)^(0+128),w
  1650  03A9  00F9               	movwf	___awtoft@c+1
  1651  03AA  0830               	movf	powerFactor@b^(0+128),w
  1652  03AB  00F8               	movwf	___awtoft@c
  1653  03AC  120A  158A  2131  120A  118A  	fcall	___awtoft
  1654  03B1  0878               	movf	?___awtoft,w
  1655  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1656  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1657  03B4  00C4               	movwf	___ftdiv@f1
  1658  03B5  0879               	movf	?___awtoft+1,w
  1659  03B6  00C5               	movwf	___ftdiv@f1+1
  1660  03B7  087A               	movf	?___awtoft+2,w
  1661  03B8  00C6               	movwf	___ftdiv@f1+2
  1662  03B9  120A  158A  2748  120A  118A  	fcall	___ftdiv
  1663  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1664  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1665  03C0  0841               	movf	?___ftdiv,w
  1666  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1667  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1668  03C3  00A2               	movwf	powerFactor@tm^(0+128)
  1669  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1670  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1671  03C6  0842               	movf	?___ftdiv+1,w
  1672  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1673  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1674  03C9  00A3               	movwf	(powerFactor@tm+1)^(0+128)
  1675  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1676  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1677  03CC  0843               	movf	?___ftdiv+2,w
  1678  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1679  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  1680  03CF  00A4               	movwf	(powerFactor@tm+2)^(0+128)
  1681                           
  1682                           ;main.c: 69: pf = cos(tm * 2 * 3.14);
  1683  03D0  30F6               	movlw	246
  1684  03D1  00F8               	movwf	___ftmul@f1
  1685  03D2  30C8               	movlw	200
  1686  03D3  00F9               	movwf	___ftmul@f1+1
  1687  03D4  3040               	movlw	64
  1688  03D5  00FA               	movwf	___ftmul@f1+2
  1689  03D6  0822               	movf	powerFactor@tm^(0+128),w
  1690  03D7  00FB               	movwf	___ftmul@f2
  1691  03D8  0823               	movf	(powerFactor@tm+1)^(0+128),w
  1692  03D9  00FC               	movwf	___ftmul@f2+1
  1693  03DA  0824               	movf	(powerFactor@tm+2)^(0+128),w
  1694  03DB  00FD               	movwf	___ftmul@f2+2
  1695  03DC  120A  118A  2180  120A  118A  	fcall	___ftmul
  1696  03E1  0878               	movf	?___ftmul,w
  1697  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1698  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1699  03E4  00A8               	movwf	_powerFactor$638^(0+128)
  1700  03E5  0879               	movf	?___ftmul+1,w
  1701  03E6  00A9               	movwf	(_powerFactor$638+1)^(0+128)
  1702  03E7  087A               	movf	?___ftmul+2,w
  1703  03E8  00AA               	movwf	(_powerFactor$638+2)^(0+128)
  1704                           
  1705                           ;main.c: 69: pf = cos(tm * 2 * 3.14);
  1706  03E9  0828               	movf	_powerFactor$638^(0+128),w
  1707  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1708  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1709  03EC  00DF               	movwf	cos@f
  1710  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  1711  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  1712  03EF  0829               	movf	(_powerFactor$638+1)^(0+128),w
  1713  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1714  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1715  03F2  00E0               	movwf	cos@f+1
  1716  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  1717  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  1718  03F5  082A               	movf	(_powerFactor$638+2)^(0+128),w
  1719  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1720  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1721  03F8  00E1               	movwf	cos@f+2
  1722  03F9  120A  158A  2402  120A  118A  	fcall	_cos
  1723  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1724  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0400  085F               	movf	?_cos,w
  1726  0401  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0402  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0403  00A5               	movwf	powerFactor@pf^(0+128)
  1729  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0405  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0406  0860               	movf	?_cos+1,w
  1732  0407  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0408  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0409  00A6               	movwf	(powerFactor@pf+1)^(0+128)
  1735  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1736  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1737  040C  0861               	movf	?_cos+2,w
  1738  040D  1683               	bsf	3,5	;RP0=1, select bank1
  1739  040E  1303               	bcf	3,6	;RP1=0, select bank1
  1740  040F  00A7               	movwf	(powerFactor@pf+2)^(0+128)
  1741                           
  1742                           ;main.c: 70: x = (int)(fabs(ceil(pf * 100)));
  1743  0410  0825               	movf	powerFactor@pf^(0+128),w
  1744  0411  00FB               	movwf	___ftmul@f2
  1745  0412  0826               	movf	(powerFactor@pf+1)^(0+128),w
  1746  0413  00FC               	movwf	___ftmul@f2+1
  1747  0414  0827               	movf	(powerFactor@pf+2)^(0+128),w
  1748  0415  00FD               	movwf	___ftmul@f2+2
  1749  0416  3000               	movlw	0
  1750  0417  00F8               	movwf	___ftmul@f1
  1751  0418  30C8               	movlw	200
  1752  0419  00F9               	movwf	___ftmul@f1+1
  1753  041A  3042               	movlw	66
  1754  041B  00FA               	movwf	___ftmul@f1+2
  1755  041C  120A  118A  2180  120A  118A  	fcall	___ftmul
  1756  0421  0878               	movf	?___ftmul,w
  1757  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0424  00C0               	movwf	ceil@x
  1760  0425  0879               	movf	?___ftmul+1,w
  1761  0426  00C1               	movwf	ceil@x+1
  1762  0427  087A               	movf	?___ftmul+2,w
  1763  0428  00C2               	movwf	ceil@x+2
  1764  0429  120A  158A  2578  120A  118A  	fcall	_ceil
  1765  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1766  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0430  0840               	movf	?_ceil,w
  1768  0431  00C9               	movwf	fabs@d
  1769  0432  0841               	movf	?_ceil+1,w
  1770  0433  00CA               	movwf	fabs@d+1
  1771  0434  0842               	movf	?_ceil+2,w
  1772  0435  00CB               	movwf	fabs@d+2
  1773  0436  120A  158A  2195  120A  118A  	fcall	_fabs
  1774  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1775  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1776  043D  0849               	movf	?_fabs,w
  1777  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1778  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0440  00AB               	movwf	_powerFactor$639^(0+128)
  1780  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0443  084A               	movf	?_fabs+1,w
  1783  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0446  00AC               	movwf	(_powerFactor$639+1)^(0+128)
  1786  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0449  084B               	movf	?_fabs+2,w
  1789  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1790  044B  1303               	bcf	3,6	;RP1=0, select bank1
  1791  044C  00AD               	movwf	(_powerFactor$639+2)^(0+128)
  1792                           
  1793                           ;main.c: 70: x = (int)(fabs(ceil(pf * 100)));
  1794  044D  082B               	movf	_powerFactor$639^(0+128),w
  1795  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1796  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0450  00AA               	movwf	___fttol@f1
  1798  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1800  0453  082C               	movf	(_powerFactor$639+1)^(0+128),w
  1801  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0456  00AB               	movwf	___fttol@f1+1
  1804  0457  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1806  0459  082D               	movf	(_powerFactor$639+2)^(0+128),w
  1807  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1808  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1809  045C  00AC               	movwf	___fttol@f1+2
  1810  045D  120A  158A  24EA   	fcall	___fttol
  1811  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0462  082B               	movf	?___fttol+1,w
  1814  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1816  0465  00B3               	movwf	(powerFactor@x+1)^(0+128)
  1817  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0468  082A               	movf	?___fttol,w
  1820  0469  1683               	bsf	3,5	;RP0=1, select bank1
  1821  046A  1303               	bcf	3,6	;RP1=0, select bank1
  1822  046B  00B2               	movwf	powerFactor@x^(0+128)
  1823                           
  1824                           ;main.c: 72: return x;
  1825  046C  0833               	movf	(powerFactor@x+1)^(0+128),w
  1826  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1827  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1828  046F  00E6               	movwf	?_powerFactor+1
  1829  0470  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0471  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0472  0832               	movf	powerFactor@x^(0+128),w
  1832  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0475  00E5               	movwf	?_powerFactor
  1835  0476  0008               	return
  1836  0477                     __end_of_powerFactor:	
  1837                           
  1838                           	psect	text2
  1839  0995                     __ptext2:	
  1840 ;; *************** function _fabs *****************
  1841 ;; Defined at:
  1842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  d               3   41[BANK0 ] int 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  3   41[BANK0 ] int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       3       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         0       3       0       0       0
  1860 ;;Total ram usage:        3 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		___ftge
  1865 ;;		___ftneg
  1866 ;; This function is called by:
  1867 ;;		_powerFactor
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _fabs
  1873  0995                     _fabs:	
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
  1877  0995  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0996  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0997  0849               	movf	fabs@d,w
  1880  0998  00F0               	movwf	___ftge@ff1
  1881  0999  084A               	movf	fabs@d+1,w
  1882  099A  00F1               	movwf	___ftge@ff1+1
  1883  099B  084B               	movf	fabs@d+2,w
  1884  099C  00F2               	movwf	___ftge@ff1+2
  1885  099D  3000               	movlw	0
  1886  099E  00F3               	movwf	___ftge@ff2
  1887  099F  3000               	movlw	0
  1888  09A0  00F4               	movwf	___ftge@ff2+1
  1889  09A1  3000               	movlw	0
  1890  09A2  00F5               	movwf	___ftge@ff2+2
  1891  09A3  120A  158A  2339  120A  158A  	fcall	___ftge
  1892  09A8  1803               	btfsc	3,0
  1893  09A9  0008               	return
  1894  09AA  1283               	bcf	3,5	;RP0=0, select bank0
  1895  09AB  1303               	bcf	3,6	;RP1=0, select bank0
  1896  09AC  0849               	movf	fabs@d,w
  1897  09AD  00F0               	movwf	___ftneg@f1
  1898  09AE  084A               	movf	fabs@d+1,w
  1899  09AF  00F1               	movwf	___ftneg@f1+1
  1900  09B0  084B               	movf	fabs@d+2,w
  1901  09B1  00F2               	movwf	___ftneg@f1+2
  1902  09B2  120A  158A  20F0   	fcall	___ftneg
  1903  09B5  0870               	movf	?___ftneg,w
  1904  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  1905  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  1906  09B8  00C9               	movwf	?_fabs
  1907  09B9  0871               	movf	?___ftneg+1,w
  1908  09BA  00CA               	movwf	?_fabs+1
  1909  09BB  0872               	movf	?___ftneg+2,w
  1910  09BC  00CB               	movwf	?_fabs+2
  1911  09BD  0008               	return
  1912  09BE                     __end_of_fabs:	
  1913                           
  1914                           	psect	text3
  1915  0C02                     __ptext3:	
  1916 ;; *************** function _cos *****************
  1917 ;; Defined at:
  1918 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\cos.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  f               3   63[BANK0 ] int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  3   63[BANK0 ] int 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1932 ;;      Params:         0       3       0       0       0
  1933 ;;      Locals:         0       3       0       0       0
  1934 ;;      Temps:          0       0       0       0       0
  1935 ;;      Totals:         0       6       0       0       0
  1936 ;;Total ram usage:        6 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    4
  1939 ;; This function calls:
  1940 ;;		___ftadd
  1941 ;;		___ftge
  1942 ;;		_sin
  1943 ;; This function is called by:
  1944 ;;		_powerFactor
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _cos
  1950  0C02                     _cos:	
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _cos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1954  0C02  3010               	movlw	16
  1955  0C03  00F0               	movwf	___ftge@ff1
  1956  0C04  3049               	movlw	73
  1957  0C05  00F1               	movwf	___ftge@ff1+1
  1958  0C06  3040               	movlw	64
  1959  0C07  00F2               	movwf	___ftge@ff1+2
  1960  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0C0A  085F               	movf	cos@f,w
  1963  0C0B  00F3               	movwf	___ftge@ff2
  1964  0C0C  0860               	movf	cos@f+1,w
  1965  0C0D  00F4               	movwf	___ftge@ff2+1
  1966  0C0E  0861               	movf	cos@f+2,w
  1967  0C0F  00F5               	movwf	___ftge@ff2+2
  1968  0C10  120A  158A  2339  120A  158A  	fcall	___ftge
  1969  0C15  1803               	btfsc	3,0
  1970  0C16  2C44               	goto	l1909
  1971  0C17  30CC               	movlw	204
  1972  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0C1A  00AA               	movwf	___ftadd@f1
  1975  0C1B  3096               	movlw	150
  1976  0C1C  00AB               	movwf	___ftadd@f1+1
  1977  0C1D  30C0               	movlw	192
  1978  0C1E  00AC               	movwf	___ftadd@f1+2
  1979  0C1F  085F               	movf	cos@f,w
  1980  0C20  00AD               	movwf	___ftadd@f2
  1981  0C21  0860               	movf	cos@f+1,w
  1982  0C22  00AE               	movwf	___ftadd@f2+1
  1983  0C23  0861               	movf	cos@f+2,w
  1984  0C24  00AF               	movwf	___ftadd@f2+2
  1985  0C25  120A  118A  2251  120A  158A  	fcall	___ftadd
  1986  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0C2C  082A               	movf	?___ftadd,w
  1989  0C2D  00E2               	movwf	_cos$640
  1990  0C2E  082B               	movf	?___ftadd+1,w
  1991  0C2F  00E3               	movwf	_cos$640+1
  1992  0C30  082C               	movf	?___ftadd+2,w
  1993  0C31  00E4               	movwf	_cos$640+2
  1994  0C32  0862               	movf	_cos$640,w
  1995  0C33  00D1               	movwf	sin@f
  1996  0C34  0863               	movf	_cos$640+1,w
  1997  0C35  00D2               	movwf	sin@f+1
  1998  0C36  0864               	movf	_cos$640+2,w
  1999  0C37  00D3               	movwf	sin@f+2
  2000  0C38  120A  118A  2477   	fcall	_sin
  2001  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0C3D  0851               	movf	?_sin,w
  2004  0C3E  00DF               	movwf	?_cos
  2005  0C3F  0852               	movf	?_sin+1,w
  2006  0C40  00E0               	movwf	?_cos+1
  2007  0C41  0853               	movf	?_sin+2,w
  2008  0C42  00E1               	movwf	?_cos+2
  2009  0C43  0008               	return
  2010  0C44                     l1909:	
  2011  0C44  3010               	movlw	16
  2012  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0C47  00AA               	movwf	___ftadd@f1
  2015  0C48  30C9               	movlw	201
  2016  0C49  00AB               	movwf	___ftadd@f1+1
  2017  0C4A  303F               	movlw	63
  2018  0C4B  00AC               	movwf	___ftadd@f1+2
  2019  0C4C  085F               	movf	cos@f,w
  2020  0C4D  00AD               	movwf	___ftadd@f2
  2021  0C4E  0860               	movf	cos@f+1,w
  2022  0C4F  00AE               	movwf	___ftadd@f2+1
  2023  0C50  0861               	movf	cos@f+2,w
  2024  0C51  00AF               	movwf	___ftadd@f2+2
  2025  0C52  120A  118A  2251  120A  158A  	fcall	___ftadd
  2026  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0C59  082A               	movf	?___ftadd,w
  2029  0C5A  00E2               	movwf	_cos$640
  2030  0C5B  082B               	movf	?___ftadd+1,w
  2031  0C5C  00E3               	movwf	_cos$640+1
  2032  0C5D  082C               	movf	?___ftadd+2,w
  2033  0C5E  00E4               	movwf	_cos$640+2
  2034  0C5F  0862               	movf	_cos$640,w
  2035  0C60  00D1               	movwf	sin@f
  2036  0C61  0863               	movf	_cos$640+1,w
  2037  0C62  00D2               	movwf	sin@f+1
  2038  0C63  0864               	movf	_cos$640+2,w
  2039  0C64  00D3               	movwf	sin@f+2
  2040  0C65  120A  118A  2477   	fcall	_sin
  2041  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0C6A  0851               	movf	?_sin,w
  2044  0C6B  00DF               	movwf	?_cos
  2045  0C6C  0852               	movf	?_sin+1,w
  2046  0C6D  00E0               	movwf	?_cos+1
  2047  0C6E  0853               	movf	?_sin+2,w
  2048  0C6F  00E1               	movwf	?_cos+2
  2049  0C70  0008               	return
  2050  0C71                     __end_of_cos:	
  2051                           
  2052                           	psect	text4
  2053  0477                     __ptext4:	
  2054 ;; *************** function _sin *****************
  2055 ;; Defined at:
  2056 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  f               3   49[BANK0 ] int 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  x2              3   59[BANK0 ] int 
  2061 ;;  y               3   53[BANK0 ] int 
  2062 ;;  sgn             1   62[BANK0 ] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  3   49[BANK0 ] unsigned char 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       3       0       0       0
  2073 ;;      Locals:         0      10       0       0       0
  2074 ;;      Temps:          0       1       0       0       0
  2075 ;;      Totals:         0      14       0       0       0
  2076 ;;Total ram usage:       14 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    3
  2079 ;; This function calls:
  2080 ;;		___ftadd
  2081 ;;		___ftdiv
  2082 ;;		___ftge
  2083 ;;		___ftmul
  2084 ;;		___ftneg
  2085 ;;		___ftsub
  2086 ;;		_eval_poly
  2087 ;;		_floor
  2088 ;; This function is called by:
  2089 ;;		_cos
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _sin
  2095  0477                     _sin:	
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _sin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2099  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0479  01DE               	clrf	sin@sgn
  2102  047A  0851               	movf	sin@f,w
  2103  047B  00F0               	movwf	___ftge@ff1
  2104  047C  0852               	movf	sin@f+1,w
  2105  047D  00F1               	movwf	___ftge@ff1+1
  2106  047E  0853               	movf	sin@f+2,w
  2107  047F  00F2               	movwf	___ftge@ff1+2
  2108  0480  3000               	movlw	0
  2109  0481  00F3               	movwf	___ftge@ff2
  2110  0482  3000               	movlw	0
  2111  0483  00F4               	movwf	___ftge@ff2+1
  2112  0484  3000               	movlw	0
  2113  0485  00F5               	movwf	___ftge@ff2+2
  2114  0486  120A  158A  2339  120A  118A  	fcall	___ftge
  2115  048B  1803               	btfsc	3,0
  2116  048C  2CA4               	goto	l1875
  2117  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2118  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2119  048F  0851               	movf	sin@f,w
  2120  0490  00F0               	movwf	___ftneg@f1
  2121  0491  0852               	movf	sin@f+1,w
  2122  0492  00F1               	movwf	___ftneg@f1+1
  2123  0493  0853               	movf	sin@f+2,w
  2124  0494  00F2               	movwf	___ftneg@f1+2
  2125  0495  120A  158A  20F0  120A  118A  	fcall	___ftneg
  2126  049A  0870               	movf	?___ftneg,w
  2127  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2128  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2129  049D  00D1               	movwf	sin@f
  2130  049E  0871               	movf	?___ftneg+1,w
  2131  049F  00D2               	movwf	sin@f+1
  2132  04A0  0872               	movf	?___ftneg+2,w
  2133  04A1  00D3               	movwf	sin@f+2
  2134  04A2  01DE               	clrf	sin@sgn
  2135  04A3  0ADE               	incf	sin@sgn,f
  2136  04A4                     l1875:	
  2137  04A4  30FA               	movlw	250
  2138  04A5  00F8               	movwf	___ftmul@f1
  2139  04A6  3022               	movlw	34
  2140  04A7  00F9               	movwf	___ftmul@f1+1
  2141  04A8  303E               	movlw	62
  2142  04A9  00FA               	movwf	___ftmul@f1+2
  2143  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2144  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2145  04AC  0851               	movf	sin@f,w
  2146  04AD  00FB               	movwf	___ftmul@f2
  2147  04AE  0852               	movf	sin@f+1,w
  2148  04AF  00FC               	movwf	___ftmul@f2+1
  2149  04B0  0853               	movf	sin@f+2,w
  2150  04B1  00FD               	movwf	___ftmul@f2+2
  2151  04B2  120A  118A  2180  120A  118A  	fcall	___ftmul
  2152  04B7  0878               	movf	?___ftmul,w
  2153  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2154  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2155  04BA  00D1               	movwf	sin@f
  2156  04BB  0879               	movf	?___ftmul+1,w
  2157  04BC  00D2               	movwf	sin@f+1
  2158  04BD  087A               	movf	?___ftmul+2,w
  2159  04BE  00D3               	movwf	sin@f+2
  2160  04BF  0851               	movf	sin@f,w
  2161  04C0  00C0               	movwf	floor@x
  2162  04C1  0852               	movf	sin@f+1,w
  2163  04C2  00C1               	movwf	floor@x+1
  2164  04C3  0853               	movf	sin@f+2,w
  2165  04C4  00C2               	movwf	floor@x+2
  2166  04C5  120A  158A  2611  120A  118A  	fcall	_floor
  2167  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2168  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2169  04CC  0840               	movf	?_floor,w
  2170  04CD  00C9               	movwf	___ftsub@f2
  2171  04CE  0841               	movf	?_floor+1,w
  2172  04CF  00CA               	movwf	___ftsub@f2+1
  2173  04D0  0842               	movf	?_floor+2,w
  2174  04D1  00CB               	movwf	___ftsub@f2+2
  2175  04D2  0851               	movf	sin@f,w
  2176  04D3  00CC               	movwf	___ftsub@f1
  2177  04D4  0852               	movf	sin@f+1,w
  2178  04D5  00CD               	movwf	___ftsub@f1+1
  2179  04D6  0853               	movf	sin@f+2,w
  2180  04D7  00CE               	movwf	___ftsub@f1+2
  2181  04D8  120A  158A  2152  120A  118A  	fcall	___ftsub
  2182  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2183  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2184  04DF  0849               	movf	?___ftsub,w
  2185  04E0  00D1               	movwf	sin@f
  2186  04E1  084A               	movf	?___ftsub+1,w
  2187  04E2  00D2               	movwf	sin@f+1
  2188  04E3  084B               	movf	?___ftsub+2,w
  2189  04E4  00D3               	movwf	sin@f+2
  2190  04E5  3000               	movlw	0
  2191  04E6  00F8               	movwf	___ftmul@f1
  2192  04E7  3080               	movlw	128
  2193  04E8  00F9               	movwf	___ftmul@f1+1
  2194  04E9  3040               	movlw	64
  2195  04EA  00FA               	movwf	___ftmul@f1+2
  2196  04EB  0851               	movf	sin@f,w
  2197  04EC  00FB               	movwf	___ftmul@f2
  2198  04ED  0852               	movf	sin@f+1,w
  2199  04EE  00FC               	movwf	___ftmul@f2+1
  2200  04EF  0853               	movf	sin@f+2,w
  2201  04F0  00FD               	movwf	___ftmul@f2+2
  2202  04F1  120A  118A  2180  120A  118A  	fcall	___ftmul
  2203  04F6  0878               	movf	?___ftmul,w
  2204  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2205  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2206  04F9  00D1               	movwf	sin@f
  2207  04FA  0879               	movf	?___ftmul+1,w
  2208  04FB  00D2               	movwf	sin@f+1
  2209  04FC  087A               	movf	?___ftmul+2,w
  2210  04FD  00D3               	movwf	sin@f+2
  2211  04FE  3000               	movlw	0
  2212  04FF  00F0               	movwf	___ftge@ff1
  2213  0500  3000               	movlw	0
  2214  0501  00F1               	movwf	___ftge@ff1+1
  2215  0502  3040               	movlw	64
  2216  0503  00F2               	movwf	___ftge@ff1+2
  2217  0504  0851               	movf	sin@f,w
  2218  0505  00F3               	movwf	___ftge@ff2
  2219  0506  0852               	movf	sin@f+1,w
  2220  0507  00F4               	movwf	___ftge@ff2+1
  2221  0508  0853               	movf	sin@f+2,w
  2222  0509  00F5               	movwf	___ftge@ff2+2
  2223  050A  120A  158A  2339  120A  118A  	fcall	___ftge
  2224  050F  1803               	btfsc	3,0
  2225  0510  2D35               	goto	l1887
  2226  0511  3000               	movlw	0
  2227  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0514  00C9               	movwf	___ftsub@f2
  2230  0515  3000               	movlw	0
  2231  0516  00CA               	movwf	___ftsub@f2+1
  2232  0517  3040               	movlw	64
  2233  0518  00CB               	movwf	___ftsub@f2+2
  2234  0519  0851               	movf	sin@f,w
  2235  051A  00CC               	movwf	___ftsub@f1
  2236  051B  0852               	movf	sin@f+1,w
  2237  051C  00CD               	movwf	___ftsub@f1+1
  2238  051D  0853               	movf	sin@f+2,w
  2239  051E  00CE               	movwf	___ftsub@f1+2
  2240  051F  120A  158A  2152  120A  118A  	fcall	___ftsub
  2241  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0526  0849               	movf	?___ftsub,w
  2244  0527  00D1               	movwf	sin@f
  2245  0528  084A               	movf	?___ftsub+1,w
  2246  0529  00D2               	movwf	sin@f+1
  2247  052A  084B               	movf	?___ftsub+2,w
  2248  052B  00D3               	movwf	sin@f+2
  2249  052C  085E               	movf	sin@sgn,w
  2250  052D  1D03               	btfss	3,2
  2251  052E  2D31               	goto	u2560
  2252  052F  3001               	movlw	1
  2253  0530  2D32               	goto	u2570
  2254  0531                     u2560:	
  2255  0531  3000               	movlw	0
  2256  0532                     u2570:	
  2257  0532  00D4               	movwf	??_sin
  2258  0533  0854               	movf	??_sin,w
  2259  0534  00DE               	movwf	sin@sgn
  2260  0535                     l1887:	
  2261  0535  3000               	movlw	0
  2262  0536  00F0               	movwf	___ftge@ff1
  2263  0537  3080               	movlw	128
  2264  0538  00F1               	movwf	___ftge@ff1+1
  2265  0539  303F               	movlw	63
  2266  053A  00F2               	movwf	___ftge@ff1+2
  2267  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2268  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2269  053D  0851               	movf	sin@f,w
  2270  053E  00F3               	movwf	___ftge@ff2
  2271  053F  0852               	movf	sin@f+1,w
  2272  0540  00F4               	movwf	___ftge@ff2+1
  2273  0541  0853               	movf	sin@f+2,w
  2274  0542  00F5               	movwf	___ftge@ff2+2
  2275  0543  120A  158A  2339  120A  118A  	fcall	___ftge
  2276  0548  1803               	btfsc	3,0
  2277  0549  2D72               	goto	l668
  2278  054A  3000               	movlw	0
  2279  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2280  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2281  054D  00AA               	movwf	___ftadd@f1
  2282  054E  3000               	movlw	0
  2283  054F  00AB               	movwf	___ftadd@f1+1
  2284  0550  3040               	movlw	64
  2285  0551  00AC               	movwf	___ftadd@f1+2
  2286  0552  0851               	movf	sin@f,w
  2287  0553  00F0               	movwf	___ftneg@f1
  2288  0554  0852               	movf	sin@f+1,w
  2289  0555  00F1               	movwf	___ftneg@f1+1
  2290  0556  0853               	movf	sin@f+2,w
  2291  0557  00F2               	movwf	___ftneg@f1+2
  2292  0558  120A  158A  20F0  120A  118A  	fcall	___ftneg
  2293  055D  0870               	movf	?___ftneg,w
  2294  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2295  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0560  00AD               	movwf	___ftadd@f2
  2297  0561  0871               	movf	?___ftneg+1,w
  2298  0562  00AE               	movwf	___ftadd@f2+1
  2299  0563  0872               	movf	?___ftneg+2,w
  2300  0564  00AF               	movwf	___ftadd@f2+2
  2301  0565  120A  118A  2251  120A  118A  	fcall	___ftadd
  2302  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2303  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2304  056C  082A               	movf	?___ftadd,w
  2305  056D  00D1               	movwf	sin@f
  2306  056E  082B               	movf	?___ftadd+1,w
  2307  056F  00D2               	movwf	sin@f+1
  2308  0570  082C               	movf	?___ftadd+2,w
  2309  0571  00D3               	movwf	sin@f+2
  2310  0572                     l668:	
  2311  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0574  0851               	movf	sin@f,w
  2314  0575  00F8               	movwf	___ftmul@f1
  2315  0576  0852               	movf	sin@f+1,w
  2316  0577  00F9               	movwf	___ftmul@f1+1
  2317  0578  0853               	movf	sin@f+2,w
  2318  0579  00FA               	movwf	___ftmul@f1+2
  2319  057A  0851               	movf	sin@f,w
  2320  057B  00FB               	movwf	___ftmul@f2
  2321  057C  0852               	movf	sin@f+1,w
  2322  057D  00FC               	movwf	___ftmul@f2+1
  2323  057E  0853               	movf	sin@f+2,w
  2324  057F  00FD               	movwf	___ftmul@f2+2
  2325  0580  120A  118A  2180  120A  118A  	fcall	___ftmul
  2326  0585  0878               	movf	?___ftmul,w
  2327  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0588  00DB               	movwf	sin@x2
  2330  0589  0879               	movf	?___ftmul+1,w
  2331  058A  00DC               	movwf	sin@x2+1
  2332  058B  087A               	movf	?___ftmul+2,w
  2333  058C  00DD               	movwf	sin@x2+2
  2334  058D  085B               	movf	sin@x2,w
  2335  058E  00B7               	movwf	eval_poly@x
  2336  058F  085C               	movf	sin@x2+1,w
  2337  0590  00B8               	movwf	eval_poly@x+1
  2338  0591  085D               	movf	sin@x2+2,w
  2339  0592  00B9               	movwf	eval_poly@x+2
  2340  0593  3010               	movlw	(low ((sin@coeff_b-__stringbase)| (0+32768)))& (0+255)
  2341  0594  00D4               	movwf	??_sin
  2342  0595  0854               	movf	??_sin,w
  2343  0596  00BA               	movwf	eval_poly@d
  2344  0597  3003               	movlw	3
  2345  0598  00BB               	movwf	eval_poly@n
  2346  0599  3000               	movlw	0
  2347  059A  00BC               	movwf	eval_poly@n+1
  2348  059B  120A  158A  2471  120A  118A  	fcall	_eval_poly
  2349  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2350  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2351  05A2  0837               	movf	?_eval_poly,w
  2352  05A3  00D5               	movwf	sin@y
  2353  05A4  0838               	movf	?_eval_poly+1,w
  2354  05A5  00D6               	movwf	sin@y+1
  2355  05A6  0839               	movf	?_eval_poly+2,w
  2356  05A7  00D7               	movwf	sin@y+2
  2357  05A8  3004               	movlw	4
  2358  05A9  00BB               	movwf	eval_poly@n
  2359  05AA  3000               	movlw	0
  2360  05AB  00BC               	movwf	eval_poly@n+1
  2361  05AC  3001               	movlw	(low ((sin@coeff_a-__stringbase)| (0+32768)))& (0+255)
  2362  05AD  00D4               	movwf	??_sin
  2363  05AE  0854               	movf	??_sin,w
  2364  05AF  00BA               	movwf	eval_poly@d
  2365  05B0  085B               	movf	sin@x2,w
  2366  05B1  00B7               	movwf	eval_poly@x
  2367  05B2  085C               	movf	sin@x2+1,w
  2368  05B3  00B8               	movwf	eval_poly@x+1
  2369  05B4  085D               	movf	sin@x2+2,w
  2370  05B5  00B9               	movwf	eval_poly@x+2
  2371  05B6  120A  158A  2471  120A  118A  	fcall	_eval_poly
  2372  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2373  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2374  05BD  0837               	movf	?_eval_poly,w
  2375  05BE  00C4               	movwf	___ftdiv@f1
  2376  05BF  0838               	movf	?_eval_poly+1,w
  2377  05C0  00C5               	movwf	___ftdiv@f1+1
  2378  05C1  0839               	movf	?_eval_poly+2,w
  2379  05C2  00C6               	movwf	___ftdiv@f1+2
  2380  05C3  0855               	movf	sin@y,w
  2381  05C4  00C1               	movwf	___ftdiv@f2
  2382  05C5  0856               	movf	sin@y+1,w
  2383  05C6  00C2               	movwf	___ftdiv@f2+1
  2384  05C7  0857               	movf	sin@y+2,w
  2385  05C8  00C3               	movwf	___ftdiv@f2+2
  2386  05C9  120A  158A  2748  120A  118A  	fcall	___ftdiv
  2387  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2388  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2389  05D0  0841               	movf	?___ftdiv,w
  2390  05D1  00D8               	movwf	_sin$641
  2391  05D2  0842               	movf	?___ftdiv+1,w
  2392  05D3  00D9               	movwf	_sin$641+1
  2393  05D4  0843               	movf	?___ftdiv+2,w
  2394  05D5  00DA               	movwf	_sin$641+2
  2395  05D6  0858               	movf	_sin$641,w
  2396  05D7  00F8               	movwf	___ftmul@f1
  2397  05D8  0859               	movf	_sin$641+1,w
  2398  05D9  00F9               	movwf	___ftmul@f1+1
  2399  05DA  085A               	movf	_sin$641+2,w
  2400  05DB  00FA               	movwf	___ftmul@f1+2
  2401  05DC  0851               	movf	sin@f,w
  2402  05DD  00FB               	movwf	___ftmul@f2
  2403  05DE  0852               	movf	sin@f+1,w
  2404  05DF  00FC               	movwf	___ftmul@f2+1
  2405  05E0  0853               	movf	sin@f+2,w
  2406  05E1  00FD               	movwf	___ftmul@f2+2
  2407  05E2  120A  118A  2180  120A  118A  	fcall	___ftmul
  2408  05E7  0878               	movf	?___ftmul,w
  2409  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2410  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2411  05EA  00D1               	movwf	sin@f
  2412  05EB  0879               	movf	?___ftmul+1,w
  2413  05EC  00D2               	movwf	sin@f+1
  2414  05ED  087A               	movf	?___ftmul+2,w
  2415  05EE  00D3               	movwf	sin@f+2
  2416  05EF  085E               	movf	sin@sgn,w
  2417  05F0  1903               	btfsc	3,2
  2418  05F1  0008               	return
  2419  05F2  0851               	movf	sin@f,w
  2420  05F3  00F0               	movwf	___ftneg@f1
  2421  05F4  0852               	movf	sin@f+1,w
  2422  05F5  00F1               	movwf	___ftneg@f1+1
  2423  05F6  0853               	movf	sin@f+2,w
  2424  05F7  00F2               	movwf	___ftneg@f1+2
  2425  05F8  120A  158A  20F0   	fcall	___ftneg
  2426  05FB  0870               	movf	?___ftneg,w
  2427  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2428  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2429  05FE  00D1               	movwf	?_sin
  2430  05FF  0871               	movf	?___ftneg+1,w
  2431  0600  00D2               	movwf	?_sin+1
  2432  0601  0872               	movf	?___ftneg+2,w
  2433  0602  00D3               	movwf	?_sin+2
  2434  0603  0008               	return
  2435  0604                     __end_of_sin:	
  2436                           
  2437                           	psect	text5
  2438  0E11                     __ptext5:	
  2439 ;; *************** function _floor *****************
  2440 ;; Defined at:
  2441 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  x               3   32[BANK0 ] unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  i               3   36[BANK0 ] unsigned char 
  2446 ;;  expon           2   39[BANK0 ] int 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  3   32[BANK0 ] int 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         0       3       0       0       0
  2457 ;;      Locals:         0       5       0       0       0
  2458 ;;      Temps:          0       1       0       0       0
  2459 ;;      Totals:         0       9       0       0       0
  2460 ;;Total ram usage:        9 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    2
  2463 ;; This function calls:
  2464 ;;		___altoft
  2465 ;;		___ftadd
  2466 ;;		___ftge
  2467 ;;		___fttol
  2468 ;;		_frexp
  2469 ;; This function is called by:
  2470 ;;		_sin
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           
  2475                           ;psect for function _floor
  2476  0E11                     _floor:	
  2477                           
  2478                           ;incstack = 0
  2479                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2480  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0E13  0840               	movf	floor@x,w
  2483  0E14  00F0               	movwf	frexp@value
  2484  0E15  0841               	movf	floor@x+1,w
  2485  0E16  00F1               	movwf	frexp@value+1
  2486  0E17  0842               	movf	floor@x+2,w
  2487  0E18  00F2               	movwf	frexp@value+2
  2488  0E19  3047               	movlw	(low (floor@expon| 0))& (0+255)
  2489  0E1A  00C3               	movwf	??_floor
  2490  0E1B  0843               	movf	??_floor,w
  2491  0E1C  00F3               	movwf	frexp@eptr
  2492  0E1D  120A  158A  21BE  120A  158A  	fcall	_frexp
  2493  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0E24  1FC8               	btfss	floor@expon+1,7
  2496  0E25  2E4B               	goto	l1819
  2497  0E26  0840               	movf	floor@x,w
  2498  0E27  00F0               	movwf	___ftge@ff1
  2499  0E28  0841               	movf	floor@x+1,w
  2500  0E29  00F1               	movwf	___ftge@ff1+1
  2501  0E2A  0842               	movf	floor@x+2,w
  2502  0E2B  00F2               	movwf	___ftge@ff1+2
  2503  0E2C  3000               	movlw	0
  2504  0E2D  00F3               	movwf	___ftge@ff2
  2505  0E2E  3000               	movlw	0
  2506  0E2F  00F4               	movwf	___ftge@ff2+1
  2507  0E30  3000               	movlw	0
  2508  0E31  00F5               	movwf	___ftge@ff2+2
  2509  0E32  120A  158A  2339  120A  158A  	fcall	___ftge
  2510  0E37  1803               	btfsc	3,0
  2511  0E38  2E42               	goto	l1815
  2512  0E39  3000               	movlw	0
  2513  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0E3C  00C0               	movwf	?_floor
  2516  0E3D  3080               	movlw	128
  2517  0E3E  00C1               	movwf	?_floor+1
  2518  0E3F  30BF               	movlw	191
  2519  0E40  00C2               	movwf	?_floor+2
  2520  0E41  0008               	return
  2521  0E42                     l1815:	
  2522  0E42  3000               	movlw	0
  2523  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0E45  00C0               	movwf	?_floor
  2526  0E46  3000               	movlw	0
  2527  0E47  00C1               	movwf	?_floor+1
  2528  0E48  3000               	movlw	0
  2529  0E49  00C2               	movwf	?_floor+2
  2530  0E4A  0008               	return
  2531  0E4B                     l1819:	
  2532  0E4B  3000               	movlw	0
  2533  0E4C  0248               	subwf	floor@expon+1,w
  2534  0E4D  3015               	movlw	21
  2535  0E4E  1903               	skipnz
  2536  0E4F  0247               	subwf	floor@expon,w
  2537  0E50  1803               	btfsc	3,0
  2538  0E51  0008               	return
  2539  0E52  0840               	movf	floor@x,w
  2540  0E53  00AA               	movwf	___fttol@f1
  2541  0E54  0841               	movf	floor@x+1,w
  2542  0E55  00AB               	movwf	___fttol@f1+1
  2543  0E56  0842               	movf	floor@x+2,w
  2544  0E57  00AC               	movwf	___fttol@f1+2
  2545  0E58  120A  158A  24EA  120A  158A  	fcall	___fttol
  2546  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0E5F  082D               	movf	?___fttol+3,w
  2549  0E60  00BB               	movwf	___altoft@c+3
  2550  0E61  082C               	movf	?___fttol+2,w
  2551  0E62  00BA               	movwf	___altoft@c+2
  2552  0E63  082B               	movf	?___fttol+1,w
  2553  0E64  00B9               	movwf	___altoft@c+1
  2554  0E65  082A               	movf	?___fttol,w
  2555  0E66  00B8               	movwf	___altoft@c
  2556  0E67  120A  158A  21F8  120A  158A  	fcall	___altoft
  2557  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0E6E  0838               	movf	?___altoft,w
  2560  0E6F  00C4               	movwf	floor@i
  2561  0E70  0839               	movf	?___altoft+1,w
  2562  0E71  00C5               	movwf	floor@i+1
  2563  0E72  083A               	movf	?___altoft+2,w
  2564  0E73  00C6               	movwf	floor@i+2
  2565  0E74  0840               	movf	floor@x,w
  2566  0E75  00F0               	movwf	___ftge@ff1
  2567  0E76  0841               	movf	floor@x+1,w
  2568  0E77  00F1               	movwf	___ftge@ff1+1
  2569  0E78  0842               	movf	floor@x+2,w
  2570  0E79  00F2               	movwf	___ftge@ff1+2
  2571  0E7A  0844               	movf	floor@i,w
  2572  0E7B  00F3               	movwf	___ftge@ff2
  2573  0E7C  0845               	movf	floor@i+1,w
  2574  0E7D  00F4               	movwf	___ftge@ff2+1
  2575  0E7E  0846               	movf	floor@i+2,w
  2576  0E7F  00F5               	movwf	___ftge@ff2+2
  2577  0E80  120A  158A  2339  120A  158A  	fcall	___ftge
  2578  0E85  1803               	btfsc	3,0
  2579  0E86  2EA1               	goto	l1829
  2580  0E87  3000               	movlw	0
  2581  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0E8A  00AA               	movwf	___ftadd@f1
  2584  0E8B  3080               	movlw	128
  2585  0E8C  00AB               	movwf	___ftadd@f1+1
  2586  0E8D  30BF               	movlw	191
  2587  0E8E  00AC               	movwf	___ftadd@f1+2
  2588  0E8F  0844               	movf	floor@i,w
  2589  0E90  00AD               	movwf	___ftadd@f2
  2590  0E91  0845               	movf	floor@i+1,w
  2591  0E92  00AE               	movwf	___ftadd@f2+1
  2592  0E93  0846               	movf	floor@i+2,w
  2593  0E94  00AF               	movwf	___ftadd@f2+2
  2594  0E95  120A  118A  2251   	fcall	___ftadd
  2595  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0E9A  082A               	movf	?___ftadd,w
  2598  0E9B  00C0               	movwf	?_floor
  2599  0E9C  082B               	movf	?___ftadd+1,w
  2600  0E9D  00C1               	movwf	?_floor+1
  2601  0E9E  082C               	movf	?___ftadd+2,w
  2602  0E9F  00C2               	movwf	?_floor+2
  2603  0EA0  0008               	return
  2604  0EA1                     l1829:	
  2605  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0EA3  0844               	movf	floor@i,w
  2608  0EA4  00C0               	movwf	?_floor
  2609  0EA5  0845               	movf	floor@i+1,w
  2610  0EA6  00C1               	movwf	?_floor+1
  2611  0EA7  0846               	movf	floor@i+2,w
  2612  0EA8  00C2               	movwf	?_floor+2
  2613  0EA9  0008               	return
  2614  0EAA                     __end_of_floor:	
  2615                           
  2616                           	psect	text6
  2617  0C71                     __ptext6:	
  2618 ;; *************** function _eval_poly *****************
  2619 ;; Defined at:
  2620 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  x               3   23[BANK0 ] int 
  2623 ;;  d               1   26[BANK0 ] PTR const 
  2624 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  2625 ;;  n               2   27[BANK0 ] int 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  res             3   30[BANK0 ] int 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  3   23[BANK0 ] int 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       6       0       0       0
  2638 ;;      Locals:         0       3       0       0       0
  2639 ;;      Temps:          0       1       0       0       0
  2640 ;;      Totals:         0      10       0       0       0
  2641 ;;Total ram usage:       10 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    2
  2644 ;; This function calls:
  2645 ;;		___bmul
  2646 ;;		___ftadd
  2647 ;;		___ftmul
  2648 ;; This function is called by:
  2649 ;;		_sin
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _eval_poly
  2655  0C71                     _eval_poly:	
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2659  0C71  3003               	movlw	3
  2660  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0C74  00BD               	movwf	??_eval_poly
  2663  0C75  083D               	movf	??_eval_poly,w
  2664  0C76  00F0               	movwf	___bmul@multiplicand
  2665  0C77  083B               	movf	eval_poly@n,w
  2666  0C78  120A  158A  210F  120A  158A  	fcall	___bmul
  2667  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0C7F  073A               	addwf	eval_poly@d,w
  2670  0C80  0084               	movwf	4
  2671  0C81  120A  158A  2000  120A  158A  	fcall	stringdir
  2672  0C86  00BE               	movwf	eval_poly@res
  2673  0C87  120A  158A  2000  120A  158A  	fcall	stringdir
  2674  0C8C  00BF               	movwf	eval_poly@res+1
  2675  0C8D  120A  158A  2000  120A  158A  	fcall	stringdir
  2676  0C92                     L1:	
  2677  0C92  00C0               	movwf	eval_poly@res+2
  2678  0C93  083B               	movf	eval_poly@n,w
  2679  0C94  043C               	iorwf	eval_poly@n+1,w
  2680  0C95  1903               	btfsc	3,2
  2681  0C96  2CE3               	goto	l1839
  2682  0C97  3003               	movlw	3
  2683  0C98  00BD               	movwf	??_eval_poly
  2684  0C99  083D               	movf	??_eval_poly,w
  2685  0C9A  00F0               	movwf	___bmul@multiplicand
  2686  0C9B  30FF               	movlw	255
  2687  0C9C  07BB               	addwf	eval_poly@n,f
  2688  0C9D  1803               	skipnc
  2689  0C9E  0ABC               	incf	eval_poly@n+1,f
  2690  0C9F  30FF               	movlw	255
  2691  0CA0  07BC               	addwf	eval_poly@n+1,f
  2692  0CA1  083B               	movf	eval_poly@n,w
  2693  0CA2  120A  158A  210F  120A  158A  	fcall	___bmul
  2694  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0CA9  073A               	addwf	eval_poly@d,w
  2697  0CAA  0084               	movwf	4
  2698  0CAB  120A  158A  2000  120A  158A  	fcall	stringdir
  2699  0CB0  00AA               	movwf	___ftadd@f1
  2700  0CB1  120A  158A  2000  120A  158A  	fcall	stringdir
  2701  0CB6  00AB               	movwf	___ftadd@f1+1
  2702  0CB7  120A  158A  2000  120A  158A  	fcall	stringdir
  2703  0CBC  00AC               	movwf	___ftadd@f1+2
  2704  0CBD  083E               	movf	eval_poly@res,w
  2705  0CBE  00F8               	movwf	___ftmul@f1
  2706  0CBF  083F               	movf	eval_poly@res+1,w
  2707  0CC0  00F9               	movwf	___ftmul@f1+1
  2708  0CC1  0840               	movf	eval_poly@res+2,w
  2709  0CC2  00FA               	movwf	___ftmul@f1+2
  2710  0CC3  0837               	movf	eval_poly@x,w
  2711  0CC4  00FB               	movwf	___ftmul@f2
  2712  0CC5  0838               	movf	eval_poly@x+1,w
  2713  0CC6  00FC               	movwf	___ftmul@f2+1
  2714  0CC7  0839               	movf	eval_poly@x+2,w
  2715  0CC8  00FD               	movwf	___ftmul@f2+2
  2716  0CC9  120A  118A  2180  120A  158A  	fcall	___ftmul
  2717  0CCE  0878               	movf	?___ftmul,w
  2718  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0CD1  00AD               	movwf	___ftadd@f2
  2721  0CD2  0879               	movf	?___ftmul+1,w
  2722  0CD3  00AE               	movwf	___ftadd@f2+1
  2723  0CD4  087A               	movf	?___ftmul+2,w
  2724  0CD5  00AF               	movwf	___ftadd@f2+2
  2725  0CD6  120A  118A  2251  120A  158A  	fcall	___ftadd
  2726  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0CDD  082A               	movf	?___ftadd,w
  2729  0CDE  00BE               	movwf	eval_poly@res
  2730  0CDF  082B               	movf	?___ftadd+1,w
  2731  0CE0  00BF               	movwf	eval_poly@res+1
  2732  0CE1  082C               	movf	?___ftadd+2,w
  2733  0CE2  2C92               	goto	L1
  2734  0CE3                     l1839:	
  2735  0CE3  083E               	movf	eval_poly@res,w
  2736  0CE4  00B7               	movwf	?_eval_poly
  2737  0CE5  083F               	movf	eval_poly@res+1,w
  2738  0CE6  00B8               	movwf	?_eval_poly+1
  2739  0CE7  0840               	movf	eval_poly@res+2,w
  2740  0CE8  00B9               	movwf	?_eval_poly+2
  2741  0CE9  0008               	return
  2742  0CEA                     __end_of_eval_poly:	
  2743                           
  2744                           	psect	text7
  2745  0180                     __ptext7:	
  2746 ;; *************** function ___ftmul *****************
  2747 ;; Defined at:
  2748 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  f1              3    8[COMMON] float 
  2751 ;;  f2              3   11[COMMON] float 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  2754 ;;  sign            1    9[BANK0 ] unsigned char 
  2755 ;;  cntr            1    8[BANK0 ] unsigned char 
  2756 ;;  exp             1    4[BANK0 ] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  3    8[COMMON] float 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         6       0       0       0       0
  2767 ;;      Locals:         0       6       0       0       0
  2768 ;;      Temps:          0       4       0       0       0
  2769 ;;      Totals:         6      10       0       0       0
  2770 ;;Total ram usage:       16 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    1
  2773 ;; This function calls:
  2774 ;;		___ftpack
  2775 ;; This function is called by:
  2776 ;;		_powerFactor
  2777 ;;		_sin
  2778 ;;		_eval_poly
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function ___ftmul
  2784  0180                     ___ftmul:	
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2788  0180  0878               	movf	___ftmul@f1,w
  2789  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0183  00A0               	movwf	??___ftmul
  2792  0184  0879               	movf	___ftmul@f1+1,w
  2793  0185  00A1               	movwf	??___ftmul+1
  2794  0186  087A               	movf	___ftmul@f1+2,w
  2795  0187  00A2               	movwf	??___ftmul+2
  2796  0188  1003               	clrc
  2797  0189  0D21               	rlf	??___ftmul+1,w
  2798  018A  0D22               	rlf	??___ftmul+2,w
  2799  018B  00A3               	movwf	??___ftmul+3
  2800  018C  0823               	movf	??___ftmul+3,w
  2801  018D  00A4               	movwf	___ftmul@exp
  2802  018E  0824               	movf	___ftmul@exp,w
  2803  018F  1D03               	btfss	3,2
  2804  0190  2998               	goto	l1661
  2805  0191  3000               	movlw	0
  2806  0192  00F8               	movwf	?___ftmul
  2807  0193  3000               	movlw	0
  2808  0194  00F9               	movwf	?___ftmul+1
  2809  0195  3000               	movlw	0
  2810  0196  00FA               	movwf	?___ftmul+2
  2811  0197  0008               	return
  2812  0198                     l1661:	
  2813  0198  087B               	movf	___ftmul@f2,w
  2814  0199  00A0               	movwf	??___ftmul
  2815  019A  087C               	movf	___ftmul@f2+1,w
  2816  019B  00A1               	movwf	??___ftmul+1
  2817  019C  087D               	movf	___ftmul@f2+2,w
  2818  019D  00A2               	movwf	??___ftmul+2
  2819  019E  1003               	clrc
  2820  019F  0D21               	rlf	??___ftmul+1,w
  2821  01A0  0D22               	rlf	??___ftmul+2,w
  2822  01A1  00A3               	movwf	??___ftmul+3
  2823  01A2  0823               	movf	??___ftmul+3,w
  2824  01A3  00A9               	movwf	___ftmul@sign
  2825  01A4  0829               	movf	___ftmul@sign,w
  2826  01A5  1D03               	btfss	3,2
  2827  01A6  29AE               	goto	l1667
  2828  01A7  3000               	movlw	0
  2829  01A8  00F8               	movwf	?___ftmul
  2830  01A9  3000               	movlw	0
  2831  01AA  00F9               	movwf	?___ftmul+1
  2832  01AB  3000               	movlw	0
  2833  01AC  00FA               	movwf	?___ftmul+2
  2834  01AD  0008               	return
  2835  01AE                     l1667:	
  2836  01AE  0829               	movf	___ftmul@sign,w
  2837  01AF  3E7B               	addlw	123
  2838  01B0  00A0               	movwf	??___ftmul
  2839  01B1  0820               	movf	??___ftmul,w
  2840  01B2  07A4               	addwf	___ftmul@exp,f
  2841  01B3  0878               	movf	___ftmul@f1,w
  2842  01B4  00A0               	movwf	??___ftmul
  2843  01B5  0879               	movf	___ftmul@f1+1,w
  2844  01B6  00A1               	movwf	??___ftmul+1
  2845  01B7  087A               	movf	___ftmul@f1+2,w
  2846  01B8  00A2               	movwf	??___ftmul+2
  2847  01B9  3010               	movlw	16
  2848  01BA                     u2055:	
  2849  01BA  1003               	clrc
  2850  01BB  0CA2               	rrf	??___ftmul+2,f
  2851  01BC  0CA1               	rrf	??___ftmul+1,f
  2852  01BD  0CA0               	rrf	??___ftmul,f
  2853  01BE  3EFF               	addlw	-1
  2854  01BF  1D03               	skipz
  2855  01C0  29BA               	goto	u2055
  2856  01C1  0820               	movf	??___ftmul,w
  2857  01C2  00A3               	movwf	??___ftmul+3
  2858  01C3  0823               	movf	??___ftmul+3,w
  2859  01C4  00A9               	movwf	___ftmul@sign
  2860  01C5  087B               	movf	___ftmul@f2,w
  2861  01C6  00A0               	movwf	??___ftmul
  2862  01C7  087C               	movf	___ftmul@f2+1,w
  2863  01C8  00A1               	movwf	??___ftmul+1
  2864  01C9  087D               	movf	___ftmul@f2+2,w
  2865  01CA  00A2               	movwf	??___ftmul+2
  2866  01CB  3010               	movlw	16
  2867  01CC                     u2065:	
  2868  01CC  1003               	clrc
  2869  01CD  0CA2               	rrf	??___ftmul+2,f
  2870  01CE  0CA1               	rrf	??___ftmul+1,f
  2871  01CF  0CA0               	rrf	??___ftmul,f
  2872  01D0  3EFF               	addlw	-1
  2873  01D1  1D03               	skipz
  2874  01D2  29CC               	goto	u2065
  2875  01D3  0820               	movf	??___ftmul,w
  2876  01D4  00A3               	movwf	??___ftmul+3
  2877  01D5  0823               	movf	??___ftmul+3,w
  2878  01D6  06A9               	xorwf	___ftmul@sign,f
  2879  01D7  3080               	movlw	128
  2880  01D8  00A0               	movwf	??___ftmul
  2881  01D9  0820               	movf	??___ftmul,w
  2882  01DA  05A9               	andwf	___ftmul@sign,f
  2883  01DB  17F9               	bsf	___ftmul@f1+1,7
  2884  01DC  17FC               	bsf	___ftmul@f2+1,7
  2885  01DD  30FF               	movlw	255
  2886  01DE  05FB               	andwf	___ftmul@f2,f
  2887  01DF  30FF               	movlw	255
  2888  01E0  05FC               	andwf	___ftmul@f2+1,f
  2889  01E1  3000               	movlw	0
  2890  01E2  05FD               	andwf	___ftmul@f2+2,f
  2891  01E3  3000               	movlw	0
  2892  01E4  00A5               	movwf	___ftmul@f3_as_product
  2893  01E5  3000               	movlw	0
  2894  01E6  00A6               	movwf	___ftmul@f3_as_product+1
  2895  01E7  3000               	movlw	0
  2896  01E8  00A7               	movwf	___ftmul@f3_as_product+2
  2897  01E9  3007               	movlw	7
  2898  01EA  00A0               	movwf	??___ftmul
  2899  01EB  0820               	movf	??___ftmul,w
  2900  01EC  00A8               	movwf	___ftmul@cntr
  2901  01ED                     l1679:	
  2902  01ED  1C78               	btfss	___ftmul@f1,0
  2903  01EE  29FD               	goto	l1683
  2904  01EF  087B               	movf	___ftmul@f2,w
  2905  01F0  07A5               	addwf	___ftmul@f3_as_product,f
  2906  01F1  087C               	movf	___ftmul@f2+1,w
  2907  01F2  1103               	clrz
  2908  01F3  1803               	skipnc
  2909  01F4  0A7C               	incf	___ftmul@f2+1,w
  2910  01F5  1D03               	btfss	3,2
  2911  01F6  07A6               	addwf	___ftmul@f3_as_product+1,f
  2912  01F7  087D               	movf	___ftmul@f2+2,w
  2913  01F8  1103               	clrz
  2914  01F9  1803               	skipnc
  2915  01FA  0A7D               	incf	___ftmul@f2+2,w
  2916  01FB  1D03               	btfss	3,2
  2917  01FC  07A7               	addwf	___ftmul@f3_as_product+2,f
  2918  01FD                     l1683:	
  2919  01FD  3001               	movlw	1
  2920  01FE                     u2095:	
  2921  01FE  1003               	clrc
  2922  01FF  0CFA               	rrf	___ftmul@f1+2,f
  2923  0200  0CF9               	rrf	___ftmul@f1+1,f
  2924  0201  0CF8               	rrf	___ftmul@f1,f
  2925  0202  3EFF               	addlw	-1
  2926  0203  1D03               	skipz
  2927  0204  29FE               	goto	u2095
  2928  0205  3001               	movlw	1
  2929  0206                     u2105:	
  2930  0206  1003               	clrc
  2931  0207  0DFB               	rlf	___ftmul@f2,f
  2932  0208  0DFC               	rlf	___ftmul@f2+1,f
  2933  0209  0DFD               	rlf	___ftmul@f2+2,f
  2934  020A  3EFF               	addlw	-1
  2935  020B  1D03               	skipz
  2936  020C  2A06               	goto	u2105
  2937  020D  3001               	movlw	1
  2938  020E  02A8               	subwf	___ftmul@cntr,f
  2939  020F  1D03               	btfss	3,2
  2940  0210  29ED               	goto	l1679
  2941  0211  3009               	movlw	9
  2942  0212  00A0               	movwf	??___ftmul
  2943  0213  0820               	movf	??___ftmul,w
  2944  0214  00A8               	movwf	___ftmul@cntr
  2945  0215                     l1691:	
  2946  0215  1C78               	btfss	___ftmul@f1,0
  2947  0216  2A25               	goto	l1695
  2948  0217  087B               	movf	___ftmul@f2,w
  2949  0218  07A5               	addwf	___ftmul@f3_as_product,f
  2950  0219  087C               	movf	___ftmul@f2+1,w
  2951  021A  1103               	clrz
  2952  021B  1803               	skipnc
  2953  021C  0A7C               	incf	___ftmul@f2+1,w
  2954  021D  1D03               	btfss	3,2
  2955  021E  07A6               	addwf	___ftmul@f3_as_product+1,f
  2956  021F  087D               	movf	___ftmul@f2+2,w
  2957  0220  1103               	clrz
  2958  0221  1803               	skipnc
  2959  0222  0A7D               	incf	___ftmul@f2+2,w
  2960  0223  1D03               	btfss	3,2
  2961  0224  07A7               	addwf	___ftmul@f3_as_product+2,f
  2962  0225                     l1695:	
  2963  0225  3001               	movlw	1
  2964  0226                     u2145:	
  2965  0226  1003               	clrc
  2966  0227  0CFA               	rrf	___ftmul@f1+2,f
  2967  0228  0CF9               	rrf	___ftmul@f1+1,f
  2968  0229  0CF8               	rrf	___ftmul@f1,f
  2969  022A  3EFF               	addlw	-1
  2970  022B  1D03               	skipz
  2971  022C  2A26               	goto	u2145
  2972  022D  3001               	movlw	1
  2973  022E                     u2155:	
  2974  022E  1003               	clrc
  2975  022F  0CA7               	rrf	___ftmul@f3_as_product+2,f
  2976  0230  0CA6               	rrf	___ftmul@f3_as_product+1,f
  2977  0231  0CA5               	rrf	___ftmul@f3_as_product,f
  2978  0232  3EFF               	addlw	-1
  2979  0233  1D03               	skipz
  2980  0234  2A2E               	goto	u2155
  2981  0235  3001               	movlw	1
  2982  0236  02A8               	subwf	___ftmul@cntr,f
  2983  0237  1D03               	btfss	3,2
  2984  0238  2A15               	goto	l1691
  2985  0239  0825               	movf	___ftmul@f3_as_product,w
  2986  023A  00F0               	movwf	___ftpack@arg
  2987  023B  0826               	movf	___ftmul@f3_as_product+1,w
  2988  023C  00F1               	movwf	___ftpack@arg+1
  2989  023D  0827               	movf	___ftmul@f3_as_product+2,w
  2990  023E  00F2               	movwf	___ftpack@arg+2
  2991  023F  0824               	movf	___ftmul@exp,w
  2992  0240  00A0               	movwf	??___ftmul
  2993  0241  0820               	movf	??___ftmul,w
  2994  0242  00F3               	movwf	___ftpack@exp
  2995  0243  0829               	movf	___ftmul@sign,w
  2996  0244  00A1               	movwf	??___ftmul+1
  2997  0245  0821               	movf	??___ftmul+1,w
  2998  0246  00F4               	movwf	___ftpack@sign
  2999  0247  120A  158A  2396   	fcall	___ftpack
  3000  024A  0870               	movf	?___ftpack,w
  3001  024B  00F8               	movwf	?___ftmul
  3002  024C  0871               	movf	?___ftpack+1,w
  3003  024D  00F9               	movwf	?___ftmul+1
  3004  024E  0872               	movf	?___ftpack+2,w
  3005  024F  00FA               	movwf	?___ftmul+2
  3006  0250  0008               	return
  3007  0251                     __end_of___ftmul:	
  3008                           
  3009                           	psect	text8
  3010  090F                     __ptext8:	
  3011 ;; *************** function ___bmul *****************
  3012 ;; Defined at:
  3013 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  multiplier      1    wreg     unsigned char 
  3016 ;;  multiplicand    1    0[COMMON] unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  multiplier      1    3[COMMON] unsigned char 
  3019 ;;  product         1    2[COMMON] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         1       0       0       0       0
  3030 ;;      Locals:         2       0       0       0       0
  3031 ;;      Temps:          1       0       0       0       0
  3032 ;;      Totals:         4       0       0       0       0
  3033 ;;Total ram usage:        4 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_eval_poly
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function ___bmul
  3044  090F                     ___bmul:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3048                           ;___bmul@multiplier stored from wreg
  3049  090F  00F3               	movwf	___bmul@multiplier
  3050  0910  01F2               	clrf	___bmul@product
  3051  0911                     l1521:	
  3052  0911  1C73               	btfss	___bmul@multiplier,0
  3053  0912  2917               	goto	l1525
  3054  0913  0870               	movf	___bmul@multiplicand,w
  3055  0914  00F1               	movwf	??___bmul
  3056  0915  0871               	movf	??___bmul,w
  3057  0916  07F2               	addwf	___bmul@product,f
  3058  0917                     l1525:	
  3059  0917  1003               	clrc
  3060  0918  0DF0               	rlf	___bmul@multiplicand,f
  3061  0919  1003               	clrc
  3062  091A  0CF3               	rrf	___bmul@multiplier,f
  3063  091B  0873               	movf	___bmul@multiplier,w
  3064  091C  1D03               	btfss	3,2
  3065  091D  2911               	goto	l1521
  3066  091E  0872               	movf	___bmul@product,w
  3067  091F  0008               	return
  3068  0920                     __end_of___bmul:	
  3069                           
  3070                           	psect	text9
  3071  0952                     __ptext9:	
  3072 ;; *************** function ___ftsub *****************
  3073 ;; Defined at:
  3074 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  f2              3   41[BANK0 ] float 
  3077 ;;  f1              3   44[BANK0 ] float 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  3   41[BANK0 ] float 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         0       6       0       0       0
  3090 ;;      Locals:         0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0
  3092 ;;      Totals:         0       6       0       0       0
  3093 ;;Total ram usage:        6 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		___ftadd
  3098 ;; This function is called by:
  3099 ;;		_sin
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function ___ftsub
  3105  0952                     ___ftsub:	
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3109  0952  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0953  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0954  084B               	movf	___ftsub@f2+2,w
  3112  0955  044A               	iorwf	___ftsub@f2+1,w
  3113  0956  0449               	iorwf	___ftsub@f2,w
  3114  0957  1903               	skipnz
  3115  0958  295B               	goto	l1801
  3116  0959  3080               	movlw	128
  3117  095A  06CB               	xorwf	___ftsub@f2+2,f
  3118  095B                     l1801:	
  3119  095B  084C               	movf	___ftsub@f1,w
  3120  095C  00AA               	movwf	___ftadd@f1
  3121  095D  084D               	movf	___ftsub@f1+1,w
  3122  095E  00AB               	movwf	___ftadd@f1+1
  3123  095F  084E               	movf	___ftsub@f1+2,w
  3124  0960  00AC               	movwf	___ftadd@f1+2
  3125  0961  0849               	movf	___ftsub@f2,w
  3126  0962  00AD               	movwf	___ftadd@f2
  3127  0963  084A               	movf	___ftsub@f2+1,w
  3128  0964  00AE               	movwf	___ftadd@f2+1
  3129  0965  084B               	movf	___ftsub@f2+2,w
  3130  0966  00AF               	movwf	___ftadd@f2+2
  3131  0967  120A  118A  2251   	fcall	___ftadd
  3132  096A  1283               	bcf	3,5	;RP0=0, select bank0
  3133  096B  1303               	bcf	3,6	;RP1=0, select bank0
  3134  096C  082A               	movf	?___ftadd,w
  3135  096D  00C9               	movwf	?___ftsub
  3136  096E  082B               	movf	?___ftadd+1,w
  3137  096F  00CA               	movwf	?___ftsub+1
  3138  0970  082C               	movf	?___ftadd+2,w
  3139  0971  00CB               	movwf	?___ftsub+2
  3140  0972  0008               	return
  3141  0973                     __end_of___ftsub:	
  3142                           
  3143                           	psect	text10
  3144  08F0                     __ptext10:	
  3145 ;; *************** function ___ftneg *****************
  3146 ;; Defined at:
  3147 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  f1              3    0[COMMON] float 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  3    0[COMMON] float 
  3154 ;; Registers used:
  3155 ;;		wreg
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         3       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         3       0       0       0       0
  3165 ;;Total ram usage:        3 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_fabs
  3171 ;;		_sin
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function ___ftneg
  3177  08F0                     ___ftneg:	
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in ___ftneg: [wreg]
  3181  08F0  0872               	movf	___ftneg@f1+2,w
  3182  08F1  0471               	iorwf	___ftneg@f1+1,w
  3183  08F2  0470               	iorwf	___ftneg@f1,w
  3184  08F3  1903               	skipnz
  3185  08F4  0008               	return
  3186  08F5  3080               	movlw	128
  3187  08F6  06F2               	xorwf	___ftneg@f1+2,f
  3188  08F7  0008               	return
  3189  08F8                     __end_of___ftneg:	
  3190                           
  3191                           	psect	text11
  3192  0F48                     __ptext11:	
  3193 ;; *************** function ___ftdiv *****************
  3194 ;; Defined at:
  3195 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  f2              3   33[BANK0 ] float 
  3198 ;;  f1              3   36[BANK0 ] float 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  f3              3   44[BANK0 ] float 
  3201 ;;  sign            1   48[BANK0 ] unsigned char 
  3202 ;;  exp             1   47[BANK0 ] unsigned char 
  3203 ;;  cntr            1   43[BANK0 ] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  3   33[BANK0 ] float 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       6       0       0       0
  3214 ;;      Locals:         0       6       0       0       0
  3215 ;;      Temps:          0       4       0       0       0
  3216 ;;      Totals:         0      16       0       0       0
  3217 ;;Total ram usage:       16 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    1
  3220 ;; This function calls:
  3221 ;;		___ftpack
  3222 ;; This function is called by:
  3223 ;;		_powerFactor
  3224 ;;		_sin
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function ___ftdiv
  3230  0F48                     ___ftdiv:	
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3234  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0F4A  0844               	movf	___ftdiv@f1,w
  3237  0F4B  00C7               	movwf	??___ftdiv
  3238  0F4C  0845               	movf	___ftdiv@f1+1,w
  3239  0F4D  00C8               	movwf	??___ftdiv+1
  3240  0F4E  0846               	movf	___ftdiv@f1+2,w
  3241  0F4F  00C9               	movwf	??___ftdiv+2
  3242  0F50  1003               	clrc
  3243  0F51  0D48               	rlf	??___ftdiv+1,w
  3244  0F52  0D49               	rlf	??___ftdiv+2,w
  3245  0F53  00CA               	movwf	??___ftdiv+3
  3246  0F54  084A               	movf	??___ftdiv+3,w
  3247  0F55  00CF               	movwf	___ftdiv@exp
  3248  0F56  084F               	movf	___ftdiv@exp,w
  3249  0F57  1D03               	btfss	3,2
  3250  0F58  2F60               	goto	l1753
  3251  0F59  3000               	movlw	0
  3252  0F5A  00C1               	movwf	?___ftdiv
  3253  0F5B  3000               	movlw	0
  3254  0F5C  00C2               	movwf	?___ftdiv+1
  3255  0F5D  3000               	movlw	0
  3256  0F5E  00C3               	movwf	?___ftdiv+2
  3257  0F5F  0008               	return
  3258  0F60                     l1753:	
  3259  0F60  0841               	movf	___ftdiv@f2,w
  3260  0F61  00C7               	movwf	??___ftdiv
  3261  0F62  0842               	movf	___ftdiv@f2+1,w
  3262  0F63  00C8               	movwf	??___ftdiv+1
  3263  0F64  0843               	movf	___ftdiv@f2+2,w
  3264  0F65  00C9               	movwf	??___ftdiv+2
  3265  0F66  1003               	clrc
  3266  0F67  0D48               	rlf	??___ftdiv+1,w
  3267  0F68  0D49               	rlf	??___ftdiv+2,w
  3268  0F69  00CA               	movwf	??___ftdiv+3
  3269  0F6A  084A               	movf	??___ftdiv+3,w
  3270  0F6B  00D0               	movwf	___ftdiv@sign
  3271  0F6C  0850               	movf	___ftdiv@sign,w
  3272  0F6D  1D03               	btfss	3,2
  3273  0F6E  2F76               	goto	l1759
  3274  0F6F  3000               	movlw	0
  3275  0F70  00C1               	movwf	?___ftdiv
  3276  0F71  3000               	movlw	0
  3277  0F72  00C2               	movwf	?___ftdiv+1
  3278  0F73  3000               	movlw	0
  3279  0F74  00C3               	movwf	?___ftdiv+2
  3280  0F75  0008               	return
  3281  0F76                     l1759:	
  3282  0F76  3000               	movlw	0
  3283  0F77  00CC               	movwf	___ftdiv@f3
  3284  0F78  3000               	movlw	0
  3285  0F79  00CD               	movwf	___ftdiv@f3+1
  3286  0F7A  3000               	movlw	0
  3287  0F7B  00CE               	movwf	___ftdiv@f3+2
  3288  0F7C  3089               	movlw	137
  3289  0F7D  0750               	addwf	___ftdiv@sign,w
  3290  0F7E  00C7               	movwf	??___ftdiv
  3291  0F7F  0847               	movf	??___ftdiv,w
  3292  0F80  02CF               	subwf	___ftdiv@exp,f
  3293  0F81  0844               	movf	___ftdiv@f1,w
  3294  0F82  00C7               	movwf	??___ftdiv
  3295  0F83  0845               	movf	___ftdiv@f1+1,w
  3296  0F84  00C8               	movwf	??___ftdiv+1
  3297  0F85  0846               	movf	___ftdiv@f1+2,w
  3298  0F86  00C9               	movwf	??___ftdiv+2
  3299  0F87  3010               	movlw	16
  3300  0F88                     u2295:	
  3301  0F88  1003               	clrc
  3302  0F89  0CC9               	rrf	??___ftdiv+2,f
  3303  0F8A  0CC8               	rrf	??___ftdiv+1,f
  3304  0F8B  0CC7               	rrf	??___ftdiv,f
  3305  0F8C  3EFF               	addlw	-1
  3306  0F8D  1D03               	skipz
  3307  0F8E  2F88               	goto	u2295
  3308  0F8F  0847               	movf	??___ftdiv,w
  3309  0F90  00CA               	movwf	??___ftdiv+3
  3310  0F91  084A               	movf	??___ftdiv+3,w
  3311  0F92  00D0               	movwf	___ftdiv@sign
  3312  0F93  0841               	movf	___ftdiv@f2,w
  3313  0F94  00C7               	movwf	??___ftdiv
  3314  0F95  0842               	movf	___ftdiv@f2+1,w
  3315  0F96  00C8               	movwf	??___ftdiv+1
  3316  0F97  0843               	movf	___ftdiv@f2+2,w
  3317  0F98  00C9               	movwf	??___ftdiv+2
  3318  0F99  3010               	movlw	16
  3319  0F9A                     u2305:	
  3320  0F9A  1003               	clrc
  3321  0F9B  0CC9               	rrf	??___ftdiv+2,f
  3322  0F9C  0CC8               	rrf	??___ftdiv+1,f
  3323  0F9D  0CC7               	rrf	??___ftdiv,f
  3324  0F9E  3EFF               	addlw	-1
  3325  0F9F  1D03               	skipz
  3326  0FA0  2F9A               	goto	u2305
  3327  0FA1  0847               	movf	??___ftdiv,w
  3328  0FA2  00CA               	movwf	??___ftdiv+3
  3329  0FA3  084A               	movf	??___ftdiv+3,w
  3330  0FA4  06D0               	xorwf	___ftdiv@sign,f
  3331  0FA5  3080               	movlw	128
  3332  0FA6  00C7               	movwf	??___ftdiv
  3333  0FA7  0847               	movf	??___ftdiv,w
  3334  0FA8  05D0               	andwf	___ftdiv@sign,f
  3335  0FA9  17C5               	bsf	___ftdiv@f1+1,7
  3336  0FAA  30FF               	movlw	255
  3337  0FAB  05C4               	andwf	___ftdiv@f1,f
  3338  0FAC  30FF               	movlw	255
  3339  0FAD  05C5               	andwf	___ftdiv@f1+1,f
  3340  0FAE  3000               	movlw	0
  3341  0FAF  05C6               	andwf	___ftdiv@f1+2,f
  3342  0FB0  17C2               	bsf	___ftdiv@f2+1,7
  3343  0FB1  30FF               	movlw	255
  3344  0FB2  05C1               	andwf	___ftdiv@f2,f
  3345  0FB3  30FF               	movlw	255
  3346  0FB4  05C2               	andwf	___ftdiv@f2+1,f
  3347  0FB5  3000               	movlw	0
  3348  0FB6  05C3               	andwf	___ftdiv@f2+2,f
  3349  0FB7  3018               	movlw	24
  3350  0FB8  00C7               	movwf	??___ftdiv
  3351  0FB9  0847               	movf	??___ftdiv,w
  3352  0FBA  00CB               	movwf	___ftdiv@cntr
  3353  0FBB                     l1773:	
  3354  0FBB  3001               	movlw	1
  3355  0FBC                     u2315:	
  3356  0FBC  1003               	clrc
  3357  0FBD  0DCC               	rlf	___ftdiv@f3,f
  3358  0FBE  0DCD               	rlf	___ftdiv@f3+1,f
  3359  0FBF  0DCE               	rlf	___ftdiv@f3+2,f
  3360  0FC0  3EFF               	addlw	-1
  3361  0FC1  1D03               	skipz
  3362  0FC2  2FBC               	goto	u2315
  3363  0FC3  0843               	movf	___ftdiv@f2+2,w
  3364  0FC4  0246               	subwf	___ftdiv@f1+2,w
  3365  0FC5  1D03               	skipz
  3366  0FC6  2FCD               	goto	u2325
  3367  0FC7  0842               	movf	___ftdiv@f2+1,w
  3368  0FC8  0245               	subwf	___ftdiv@f1+1,w
  3369  0FC9  1D03               	skipz
  3370  0FCA  2FCD               	goto	u2325
  3371  0FCB  0841               	movf	___ftdiv@f2,w
  3372  0FCC  0244               	subwf	___ftdiv@f1,w
  3373  0FCD                     u2325:	
  3374  0FCD  1C03               	skipc
  3375  0FCE  2FDA               	goto	l1781
  3376  0FCF  0841               	movf	___ftdiv@f2,w
  3377  0FD0  02C4               	subwf	___ftdiv@f1,f
  3378  0FD1  0842               	movf	___ftdiv@f2+1,w
  3379  0FD2  1C03               	skipc
  3380  0FD3  0F42               	incfsz	___ftdiv@f2+1,w
  3381  0FD4  02C5               	subwf	___ftdiv@f1+1,f
  3382  0FD5  0843               	movf	___ftdiv@f2+2,w
  3383  0FD6  1C03               	skipc
  3384  0FD7  0A43               	incf	___ftdiv@f2+2,w
  3385  0FD8  02C6               	subwf	___ftdiv@f1+2,f
  3386  0FD9  144C               	bsf	___ftdiv@f3,0
  3387  0FDA                     l1781:	
  3388  0FDA  3001               	movlw	1
  3389  0FDB                     u2335:	
  3390  0FDB  1003               	clrc
  3391  0FDC  0DC4               	rlf	___ftdiv@f1,f
  3392  0FDD  0DC5               	rlf	___ftdiv@f1+1,f
  3393  0FDE  0DC6               	rlf	___ftdiv@f1+2,f
  3394  0FDF  3EFF               	addlw	-1
  3395  0FE0  1D03               	skipz
  3396  0FE1  2FDB               	goto	u2335
  3397  0FE2  3001               	movlw	1
  3398  0FE3  02CB               	subwf	___ftdiv@cntr,f
  3399  0FE4  1D03               	btfss	3,2
  3400  0FE5  2FBB               	goto	l1773
  3401  0FE6  084C               	movf	___ftdiv@f3,w
  3402  0FE7  00F0               	movwf	___ftpack@arg
  3403  0FE8  084D               	movf	___ftdiv@f3+1,w
  3404  0FE9  00F1               	movwf	___ftpack@arg+1
  3405  0FEA  084E               	movf	___ftdiv@f3+2,w
  3406  0FEB  00F2               	movwf	___ftpack@arg+2
  3407  0FEC  084F               	movf	___ftdiv@exp,w
  3408  0FED  00C7               	movwf	??___ftdiv
  3409  0FEE  0847               	movf	??___ftdiv,w
  3410  0FEF  00F3               	movwf	___ftpack@exp
  3411  0FF0  0850               	movf	___ftdiv@sign,w
  3412  0FF1  00C8               	movwf	??___ftdiv+1
  3413  0FF2  0848               	movf	??___ftdiv+1,w
  3414  0FF3  00F4               	movwf	___ftpack@sign
  3415  0FF4  120A  158A  2396   	fcall	___ftpack
  3416  0FF7  0870               	movf	?___ftpack,w
  3417  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0FFA  00C1               	movwf	?___ftdiv
  3420  0FFB  0871               	movf	?___ftpack+1,w
  3421  0FFC  00C2               	movwf	?___ftdiv+1
  3422  0FFD  0872               	movf	?___ftpack+2,w
  3423  0FFE  00C3               	movwf	?___ftdiv+2
  3424  0FFF  0008               	return
  3425  1000                     __end_of___ftdiv:	
  3426                           
  3427                           	psect	text12
  3428  0D78                     __ptext12:	
  3429 ;; *************** function _ceil *****************
  3430 ;; Defined at:
  3431 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ceil.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  x               3   32[BANK0 ] float 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  i               3   36[BANK0 ] float 
  3436 ;;  expon           2   39[BANK0 ] int 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  3   32[BANK0 ] int 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       3       0       0       0
  3447 ;;      Locals:         0       5       0       0       0
  3448 ;;      Temps:          0       1       0       0       0
  3449 ;;      Totals:         0       9       0       0       0
  3450 ;;Total ram usage:        9 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    2
  3453 ;; This function calls:
  3454 ;;		___altoft
  3455 ;;		___ftadd
  3456 ;;		___ftge
  3457 ;;		___fttol
  3458 ;;		_frexp
  3459 ;; This function is called by:
  3460 ;;		_powerFactor
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _ceil
  3466  0D78                     _ceil:	
  3467                           
  3468                           ;incstack = 0
  3469                           ; Regs used in _ceil: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3470  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0D7A  0840               	movf	ceil@x,w
  3473  0D7B  00F0               	movwf	frexp@value
  3474  0D7C  0841               	movf	ceil@x+1,w
  3475  0D7D  00F1               	movwf	frexp@value+1
  3476  0D7E  0842               	movf	ceil@x+2,w
  3477  0D7F  00F2               	movwf	frexp@value+2
  3478  0D80  3047               	movlw	(low (ceil@expon| 0))& (0+255)
  3479  0D81  00C3               	movwf	??_ceil
  3480  0D82  0843               	movf	??_ceil,w
  3481  0D83  00F3               	movwf	frexp@eptr
  3482  0D84  120A  158A  21BE  120A  158A  	fcall	_frexp
  3483  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0D8B  1FC8               	btfss	ceil@expon+1,7
  3486  0D8C  2DB2               	goto	l1931
  3487  0D8D  3000               	movlw	0
  3488  0D8E  00F0               	movwf	___ftge@ff1
  3489  0D8F  3000               	movlw	0
  3490  0D90  00F1               	movwf	___ftge@ff1+1
  3491  0D91  3000               	movlw	0
  3492  0D92  00F2               	movwf	___ftge@ff1+2
  3493  0D93  0840               	movf	ceil@x,w
  3494  0D94  00F3               	movwf	___ftge@ff2
  3495  0D95  0841               	movf	ceil@x+1,w
  3496  0D96  00F4               	movwf	___ftge@ff2+1
  3497  0D97  0842               	movf	ceil@x+2,w
  3498  0D98  00F5               	movwf	___ftge@ff2+2
  3499  0D99  120A  158A  2339  120A  158A  	fcall	___ftge
  3500  0D9E  1C03               	btfss	3,0
  3501  0D9F  2DA9               	goto	l1927
  3502  0DA0  3000               	movlw	0
  3503  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3505  0DA3  00C0               	movwf	?_ceil
  3506  0DA4  3000               	movlw	0
  3507  0DA5  00C1               	movwf	?_ceil+1
  3508  0DA6  3000               	movlw	0
  3509  0DA7  00C2               	movwf	?_ceil+2
  3510  0DA8  0008               	return
  3511  0DA9                     l1927:	
  3512  0DA9  3000               	movlw	0
  3513  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0DAC  00C0               	movwf	?_ceil
  3516  0DAD  3080               	movlw	128
  3517  0DAE  00C1               	movwf	?_ceil+1
  3518  0DAF  303F               	movlw	63
  3519  0DB0  00C2               	movwf	?_ceil+2
  3520  0DB1  0008               	return
  3521  0DB2                     l1931:	
  3522  0DB2  3000               	movlw	0
  3523  0DB3  0248               	subwf	ceil@expon+1,w
  3524  0DB4  3015               	movlw	21
  3525  0DB5  1903               	skipnz
  3526  0DB6  0247               	subwf	ceil@expon,w
  3527  0DB7  1803               	btfsc	3,0
  3528  0DB8  0008               	return
  3529  0DB9  0840               	movf	ceil@x,w
  3530  0DBA  00AA               	movwf	___fttol@f1
  3531  0DBB  0841               	movf	ceil@x+1,w
  3532  0DBC  00AB               	movwf	___fttol@f1+1
  3533  0DBD  0842               	movf	ceil@x+2,w
  3534  0DBE  00AC               	movwf	___fttol@f1+2
  3535  0DBF  120A  158A  24EA  120A  158A  	fcall	___fttol
  3536  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0DC6  082D               	movf	?___fttol+3,w
  3539  0DC7  00BB               	movwf	___altoft@c+3
  3540  0DC8  082C               	movf	?___fttol+2,w
  3541  0DC9  00BA               	movwf	___altoft@c+2
  3542  0DCA  082B               	movf	?___fttol+1,w
  3543  0DCB  00B9               	movwf	___altoft@c+1
  3544  0DCC  082A               	movf	?___fttol,w
  3545  0DCD  00B8               	movwf	___altoft@c
  3546  0DCE  120A  158A  21F8  120A  158A  	fcall	___altoft
  3547  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0DD5  0838               	movf	?___altoft,w
  3550  0DD6  00C4               	movwf	ceil@i
  3551  0DD7  0839               	movf	?___altoft+1,w
  3552  0DD8  00C5               	movwf	ceil@i+1
  3553  0DD9  083A               	movf	?___altoft+2,w
  3554  0DDA  00C6               	movwf	ceil@i+2
  3555  0DDB  0844               	movf	ceil@i,w
  3556  0DDC  00F0               	movwf	___ftge@ff1
  3557  0DDD  0845               	movf	ceil@i+1,w
  3558  0DDE  00F1               	movwf	___ftge@ff1+1
  3559  0DDF  0846               	movf	ceil@i+2,w
  3560  0DE0  00F2               	movwf	___ftge@ff1+2
  3561  0DE1  0840               	movf	ceil@x,w
  3562  0DE2  00F3               	movwf	___ftge@ff2
  3563  0DE3  0841               	movf	ceil@x+1,w
  3564  0DE4  00F4               	movwf	___ftge@ff2+1
  3565  0DE5  0842               	movf	ceil@x+2,w
  3566  0DE6  00F5               	movwf	___ftge@ff2+2
  3567  0DE7  120A  158A  2339  120A  158A  	fcall	___ftge
  3568  0DEC  1803               	btfsc	3,0
  3569  0DED  2E08               	goto	l1941
  3570  0DEE  3000               	movlw	0
  3571  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  3573  0DF1  00AA               	movwf	___ftadd@f1
  3574  0DF2  3080               	movlw	128
  3575  0DF3  00AB               	movwf	___ftadd@f1+1
  3576  0DF4  303F               	movlw	63
  3577  0DF5  00AC               	movwf	___ftadd@f1+2
  3578  0DF6  0844               	movf	ceil@i,w
  3579  0DF7  00AD               	movwf	___ftadd@f2
  3580  0DF8  0845               	movf	ceil@i+1,w
  3581  0DF9  00AE               	movwf	___ftadd@f2+1
  3582  0DFA  0846               	movf	ceil@i+2,w
  3583  0DFB  00AF               	movwf	___ftadd@f2+2
  3584  0DFC  120A  118A  2251   	fcall	___ftadd
  3585  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0E01  082A               	movf	?___ftadd,w
  3588  0E02  00C0               	movwf	?_ceil
  3589  0E03  082B               	movf	?___ftadd+1,w
  3590  0E04  00C1               	movwf	?_ceil+1
  3591  0E05  082C               	movf	?___ftadd+2,w
  3592  0E06  00C2               	movwf	?_ceil+2
  3593  0E07  0008               	return
  3594  0E08                     l1941:	
  3595  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  3597  0E0A  0844               	movf	ceil@i,w
  3598  0E0B  00C0               	movwf	?_ceil
  3599  0E0C  0845               	movf	ceil@i+1,w
  3600  0E0D  00C1               	movwf	?_ceil+1
  3601  0E0E  0846               	movf	ceil@i+2,w
  3602  0E0F  00C2               	movwf	?_ceil+2
  3603  0E10  0008               	return
  3604  0E11                     __end_of_ceil:	
  3605                           
  3606                           	psect	text13
  3607  09BE                     __ptext13:	
  3608 ;; *************** function _frexp *****************
  3609 ;; Defined at:
  3610 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  value           3    0[COMMON] int 
  3613 ;;  eptr            1    3[COMMON] PTR int 
  3614 ;;		 -> floor@expon(2), ceil@expon(2), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  3    0[COMMON] PTR int 
  3619 ;; Registers used:
  3620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3626 ;;      Params:         4       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0
  3628 ;;      Temps:          2       0       0       0       0
  3629 ;;      Totals:         6       0       0       0       0
  3630 ;;Total ram usage:        6 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_ceil
  3636 ;;		_floor
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _frexp
  3642  09BE                     _frexp:	
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3646  09BE  0872               	movf	frexp@value+2,w
  3647  09BF  0471               	iorwf	frexp@value+1,w
  3648  09C0  0470               	iorwf	frexp@value,w
  3649  09C1  1D03               	skipz
  3650  09C2  29CA               	goto	l1555
  3651  09C3  0873               	movf	frexp@eptr,w
  3652  09C4  0084               	movwf	4
  3653  09C5  1383               	bcf	3,7	;select IRP bank0
  3654  09C6  0180               	clrf	0
  3655  09C7  0A84               	incf	4,f
  3656  09C8  0180               	clrf	0
  3657                           
  3658                           ;	Return value of _frexp is never used
  3659  09C9  0008               	return
  3660  09CA                     l1555:	
  3661  09CA  0872               	movf	frexp@value+2,w
  3662  09CB  397F               	andlw	127
  3663  09CC  00F4               	movwf	??_frexp
  3664  09CD  01F5               	clrf	??_frexp+1
  3665  09CE  1003               	clrc
  3666  09CF  0DF4               	rlf	??_frexp,f
  3667  09D0  0DF5               	rlf	??_frexp+1,f
  3668  09D1  0873               	movf	frexp@eptr,w
  3669  09D2  0084               	movwf	4
  3670  09D3  0874               	movf	??_frexp,w
  3671  09D4  1383               	bcf	3,7	;select IRP bank0
  3672  09D5  0080               	movwf	0
  3673  09D6  0A84               	incf	4,f
  3674  09D7  0875               	movf	??_frexp+1,w
  3675  09D8  0080               	movwf	0
  3676  09D9  0D71               	rlf	frexp@value+1,w
  3677  09DA  0D71               	rlf	frexp@value+1,w
  3678  09DB  3901               	andlw	1
  3679  09DC  00F4               	movwf	??_frexp
  3680  09DD  01F5               	clrf	??_frexp+1
  3681  09DE  0873               	movf	frexp@eptr,w
  3682  09DF  0084               	movwf	4
  3683  09E0  0874               	movf	??_frexp,w
  3684  09E1  0480               	iorwf	0,f
  3685  09E2  0A84               	incf	4,f
  3686  09E3  0875               	movf	??_frexp+1,w
  3687  09E4  0480               	iorwf	0,f
  3688  09E5  0873               	movf	frexp@eptr,w
  3689  09E6  0084               	movwf	4
  3690  09E7  3082               	movlw	130
  3691  09E8  0780               	addwf	0,f
  3692  09E9  0F84               	incfsz	4,f
  3693  09EA  0800               	movf	0,w
  3694  09EB  1803               	skipnc
  3695  09EC  0A00               	incf	0,w
  3696  09ED  00FF               	movwf	127
  3697  09EE  30FF               	movlw	255
  3698  09EF  077F               	addwf	127,w
  3699  09F0  0080               	movwf	0
  3700  09F1  0384               	decf	4,f
  3701  09F2  0872               	movf	frexp@value+2,w
  3702  09F3  3980               	andlw	-128
  3703  09F4  383F               	iorlw	63
  3704  09F5  00F2               	movwf	frexp@value+2
  3705  09F6  13F1               	bcf	frexp@value+1,7
  3706  09F7  0008               	return
  3707  09F8                     __end_of_frexp:	
  3708                           ;	Return value of _frexp is never used
  3709                           
  3710                           
  3711                           	psect	text14
  3712  0CEA                     __ptext14:	
  3713 ;; *************** function ___fttol *****************
  3714 ;; Defined at:
  3715 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  f1              3   10[BANK0 ] float 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  lval            4   19[BANK0 ] unsigned long 
  3720 ;;  exp1            1   23[BANK0 ] unsigned char 
  3721 ;;  sign1           1   18[BANK0 ] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  4   10[BANK0 ] long 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3731 ;;      Params:         0       4       0       0       0
  3732 ;;      Locals:         0       6       0       0       0
  3733 ;;      Temps:          0       4       0       0       0
  3734 ;;      Totals:         0      14       0       0       0
  3735 ;;Total ram usage:       14 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_powerFactor
  3741 ;;		_ceil
  3742 ;;		_floor
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function ___fttol
  3748  0CEA                     ___fttol:	
  3749                           
  3750                           ;incstack = 0
  3751                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3752  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3754  0CEC  082A               	movf	___fttol@f1,w
  3755  0CED  00AE               	movwf	??___fttol
  3756  0CEE  082B               	movf	___fttol@f1+1,w
  3757  0CEF  00AF               	movwf	??___fttol+1
  3758  0CF0  082C               	movf	___fttol@f1+2,w
  3759  0CF1  00B0               	movwf	??___fttol+2
  3760  0CF2  1003               	clrc
  3761  0CF3  0D2F               	rlf	??___fttol+1,w
  3762  0CF4  0D30               	rlf	??___fttol+2,w
  3763  0CF5  00B1               	movwf	??___fttol+3
  3764  0CF6  0831               	movf	??___fttol+3,w
  3765  0CF7  00B7               	movwf	___fttol@exp1
  3766  0CF8  0837               	movf	___fttol@exp1,w
  3767  0CF9  1D03               	btfss	3,2
  3768  0CFA  2D04               	goto	l1711
  3769  0CFB  3000               	movlw	0
  3770  0CFC  00AD               	movwf	?___fttol+3
  3771  0CFD  3000               	movlw	0
  3772  0CFE  00AC               	movwf	?___fttol+2
  3773  0CFF  3000               	movlw	0
  3774  0D00  00AB               	movwf	?___fttol+1
  3775  0D01  3000               	movlw	0
  3776  0D02  00AA               	movwf	?___fttol
  3777  0D03  0008               	return
  3778  0D04                     l1711:	
  3779  0D04  082A               	movf	___fttol@f1,w
  3780  0D05  00AE               	movwf	??___fttol
  3781  0D06  082B               	movf	___fttol@f1+1,w
  3782  0D07  00AF               	movwf	??___fttol+1
  3783  0D08  082C               	movf	___fttol@f1+2,w
  3784  0D09  00B0               	movwf	??___fttol+2
  3785  0D0A  3017               	movlw	23
  3786  0D0B                     u2185:	
  3787  0D0B  1003               	clrc
  3788  0D0C  0CB0               	rrf	??___fttol+2,f
  3789  0D0D  0CAF               	rrf	??___fttol+1,f
  3790  0D0E  0CAE               	rrf	??___fttol,f
  3791  0D0F  3EFF               	addlw	-1
  3792  0D10  1D03               	skipz
  3793  0D11  2D0B               	goto	u2185
  3794  0D12  082E               	movf	??___fttol,w
  3795  0D13  00B1               	movwf	??___fttol+3
  3796  0D14  0831               	movf	??___fttol+3,w
  3797  0D15  00B2               	movwf	___fttol@sign1
  3798  0D16  17AB               	bsf	___fttol@f1+1,7
  3799  0D17  30FF               	movlw	255
  3800  0D18  05AA               	andwf	___fttol@f1,f
  3801  0D19  30FF               	movlw	255
  3802  0D1A  05AB               	andwf	___fttol@f1+1,f
  3803  0D1B  3000               	movlw	0
  3804  0D1C  05AC               	andwf	___fttol@f1+2,f
  3805  0D1D  082A               	movf	___fttol@f1,w
  3806  0D1E  00B3               	movwf	___fttol@lval
  3807  0D1F  082B               	movf	___fttol@f1+1,w
  3808  0D20  00B4               	movwf	___fttol@lval+1
  3809  0D21  082C               	movf	___fttol@f1+2,w
  3810  0D22  00B5               	movwf	___fttol@lval+2
  3811  0D23  01B6               	clrf	___fttol@lval+3
  3812  0D24  308E               	movlw	142
  3813  0D25  02B7               	subwf	___fttol@exp1,f
  3814  0D26  1FB7               	btfss	___fttol@exp1,7
  3815  0D27  2D46               	goto	l1731
  3816  0D28  0837               	movf	___fttol@exp1,w
  3817  0D29  3A80               	xorlw	128
  3818  0D2A  3E8F               	addlw	143
  3819  0D2B  1803               	skipnc
  3820  0D2C  2D36               	goto	l1729
  3821  0D2D  3000               	movlw	0
  3822  0D2E  00AD               	movwf	?___fttol+3
  3823  0D2F  3000               	movlw	0
  3824  0D30  00AC               	movwf	?___fttol+2
  3825  0D31  3000               	movlw	0
  3826  0D32  00AB               	movwf	?___fttol+1
  3827  0D33  3000               	movlw	0
  3828  0D34  00AA               	movwf	?___fttol
  3829  0D35  0008               	return
  3830  0D36                     l1729:	
  3831  0D36  3001               	movlw	1
  3832  0D37                     u2215:	
  3833  0D37  1003               	clrc
  3834  0D38  0CB6               	rrf	___fttol@lval+3,f
  3835  0D39  0CB5               	rrf	___fttol@lval+2,f
  3836  0D3A  0CB4               	rrf	___fttol@lval+1,f
  3837  0D3B  0CB3               	rrf	___fttol@lval,f
  3838  0D3C  3EFF               	addlw	-1
  3839  0D3D  1D03               	skipz
  3840  0D3E  2D37               	goto	u2215
  3841  0D3F  3001               	movlw	1
  3842  0D40  00AE               	movwf	??___fttol
  3843  0D41  082E               	movf	??___fttol,w
  3844  0D42  07B7               	addwf	___fttol@exp1,f
  3845  0D43  1903               	btfsc	3,2
  3846  0D44  2D61               	goto	l1739
  3847  0D45  2D36               	goto	l1729
  3848  0D46                     l1731:	
  3849  0D46  3018               	movlw	24
  3850  0D47  0237               	subwf	___fttol@exp1,w
  3851  0D48  1C03               	skipc
  3852  0D49  2D5E               	goto	l553
  3853  0D4A  3000               	movlw	0
  3854  0D4B  00AD               	movwf	?___fttol+3
  3855  0D4C  3000               	movlw	0
  3856  0D4D  00AC               	movwf	?___fttol+2
  3857  0D4E  3000               	movlw	0
  3858  0D4F  00AB               	movwf	?___fttol+1
  3859  0D50  3000               	movlw	0
  3860  0D51  00AA               	movwf	?___fttol
  3861  0D52  0008               	return
  3862  0D53                     l1737:	
  3863  0D53  3001               	movlw	1
  3864  0D54  00AE               	movwf	??___fttol
  3865  0D55                     u2245:	
  3866  0D55  1003               	clrc
  3867  0D56  0DB3               	rlf	___fttol@lval,f
  3868  0D57  0DB4               	rlf	___fttol@lval+1,f
  3869  0D58  0DB5               	rlf	___fttol@lval+2,f
  3870  0D59  0DB6               	rlf	___fttol@lval+3,f
  3871  0D5A  0BAE               	decfsz	??___fttol,f
  3872  0D5B  2D55               	goto	u2245
  3873  0D5C  3001               	movlw	1
  3874  0D5D  02B7               	subwf	___fttol@exp1,f
  3875  0D5E                     l553:	
  3876  0D5E  0837               	movf	___fttol@exp1,w
  3877  0D5F  1D03               	btfss	3,2
  3878  0D60  2D53               	goto	l1737
  3879  0D61                     l1739:	
  3880  0D61  0832               	movf	___fttol@sign1,w
  3881  0D62  1903               	btfsc	3,2
  3882  0D63  2D6F               	goto	l1743
  3883  0D64  09B3               	comf	___fttol@lval,f
  3884  0D65  09B4               	comf	___fttol@lval+1,f
  3885  0D66  09B5               	comf	___fttol@lval+2,f
  3886  0D67  09B6               	comf	___fttol@lval+3,f
  3887  0D68  0AB3               	incf	___fttol@lval,f
  3888  0D69  1903               	skipnz
  3889  0D6A  0AB4               	incf	___fttol@lval+1,f
  3890  0D6B  1903               	skipnz
  3891  0D6C  0AB5               	incf	___fttol@lval+2,f
  3892  0D6D  1903               	skipnz
  3893  0D6E  0AB6               	incf	___fttol@lval+3,f
  3894  0D6F                     l1743:	
  3895  0D6F  0836               	movf	___fttol@lval+3,w
  3896  0D70  00AD               	movwf	?___fttol+3
  3897  0D71  0835               	movf	___fttol@lval+2,w
  3898  0D72  00AC               	movwf	?___fttol+2
  3899  0D73  0834               	movf	___fttol@lval+1,w
  3900  0D74  00AB               	movwf	?___fttol+1
  3901  0D75  0833               	movf	___fttol@lval,w
  3902  0D76  00AA               	movwf	?___fttol
  3903  0D77  0008               	return
  3904  0D78                     __end_of___fttol:	
  3905                           
  3906                           	psect	text15
  3907  0B39                     __ptext15:	
  3908 ;; *************** function ___ftge *****************
  3909 ;; Defined at:
  3910 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  ff1             3    0[COMMON] float 
  3913 ;;  ff2             3    3[COMMON] float 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;		None               void
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3925 ;;      Params:         6       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0
  3927 ;;      Temps:          6       0       0       0       0
  3928 ;;      Totals:        12       0       0       0       0
  3929 ;;Total ram usage:       12 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_ceil
  3935 ;;		_cos
  3936 ;;		_fabs
  3937 ;;		_sin
  3938 ;;		_floor
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function ___ftge
  3944  0B39                     ___ftge:	
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3948  0B39  1FF2               	btfss	___ftge@ff1+2,7
  3949  0B3A  2B60               	goto	l1639
  3950  0B3B  3000               	movlw	0
  3951  0B3C  00F6               	movwf	??___ftge
  3952  0B3D  3000               	movlw	0
  3953  0B3E  00F7               	movwf	??___ftge+1
  3954  0B3F  3080               	movlw	128
  3955  0B40  00F8               	movwf	??___ftge+2
  3956  0B41  0970               	comf	___ftge@ff1,w
  3957  0B42  00F9               	movwf	??___ftge+3
  3958  0B43  0971               	comf	___ftge@ff1+1,w
  3959  0B44  00FA               	movwf	??___ftge+4
  3960  0B45  0972               	comf	___ftge@ff1+2,w
  3961  0B46  00FB               	movwf	??___ftge+5
  3962  0B47  0AF9               	incf	??___ftge+3,f
  3963  0B48  1903               	skipnz
  3964  0B49  0AFA               	incf	??___ftge+4,f
  3965  0B4A  1903               	skipnz
  3966  0B4B  0AFB               	incf	??___ftge+5,f
  3967  0B4C  0879               	movf	??___ftge+3,w
  3968  0B4D  07F6               	addwf	??___ftge,f
  3969  0B4E  087A               	movf	??___ftge+4,w
  3970  0B4F  1803               	skipnc
  3971  0B50  0F7A               	incfsz	??___ftge+4,w
  3972  0B51  2B53               	goto	u1991
  3973  0B52  2B54               	goto	u1992
  3974  0B53                     u1991:	
  3975  0B53  07F7               	addwf	??___ftge+1,f
  3976  0B54                     u1992:	
  3977  0B54  087B               	movf	??___ftge+5,w
  3978  0B55  1803               	skipnc
  3979  0B56  0F7B               	incfsz	??___ftge+5,w
  3980  0B57  2B59               	goto	u1993
  3981  0B58  2B5A               	goto	u1994
  3982  0B59                     u1993:	
  3983  0B59  07F8               	addwf	??___ftge+2,f
  3984  0B5A                     u1994:	
  3985  0B5A  0876               	movf	??___ftge,w
  3986  0B5B  00F0               	movwf	___ftge@ff1
  3987  0B5C  0877               	movf	??___ftge+1,w
  3988  0B5D  00F1               	movwf	___ftge@ff1+1
  3989  0B5E  0878               	movf	??___ftge+2,w
  3990  0B5F  00F2               	movwf	___ftge@ff1+2
  3991  0B60                     l1639:	
  3992  0B60  1FF5               	btfss	___ftge@ff2+2,7
  3993  0B61  2B87               	goto	l1643
  3994  0B62  3000               	movlw	0
  3995  0B63  00F6               	movwf	??___ftge
  3996  0B64  3000               	movlw	0
  3997  0B65  00F7               	movwf	??___ftge+1
  3998  0B66  3080               	movlw	128
  3999  0B67  00F8               	movwf	??___ftge+2
  4000  0B68  0973               	comf	___ftge@ff2,w
  4001  0B69  00F9               	movwf	??___ftge+3
  4002  0B6A  0974               	comf	___ftge@ff2+1,w
  4003  0B6B  00FA               	movwf	??___ftge+4
  4004  0B6C  0975               	comf	___ftge@ff2+2,w
  4005  0B6D  00FB               	movwf	??___ftge+5
  4006  0B6E  0AF9               	incf	??___ftge+3,f
  4007  0B6F  1903               	skipnz
  4008  0B70  0AFA               	incf	??___ftge+4,f
  4009  0B71  1903               	skipnz
  4010  0B72  0AFB               	incf	??___ftge+5,f
  4011  0B73  0879               	movf	??___ftge+3,w
  4012  0B74  07F6               	addwf	??___ftge,f
  4013  0B75  087A               	movf	??___ftge+4,w
  4014  0B76  1803               	skipnc
  4015  0B77  0F7A               	incfsz	??___ftge+4,w
  4016  0B78  2B7A               	goto	u2011
  4017  0B79  2B7B               	goto	u2012
  4018  0B7A                     u2011:	
  4019  0B7A  07F7               	addwf	??___ftge+1,f
  4020  0B7B                     u2012:	
  4021  0B7B  087B               	movf	??___ftge+5,w
  4022  0B7C  1803               	skipnc
  4023  0B7D  0F7B               	incfsz	??___ftge+5,w
  4024  0B7E  2B80               	goto	u2013
  4025  0B7F  2B81               	goto	u2014
  4026  0B80                     u2013:	
  4027  0B80  07F8               	addwf	??___ftge+2,f
  4028  0B81                     u2014:	
  4029  0B81  0876               	movf	??___ftge,w
  4030  0B82  00F3               	movwf	___ftge@ff2
  4031  0B83  0877               	movf	??___ftge+1,w
  4032  0B84  00F4               	movwf	___ftge@ff2+1
  4033  0B85  0878               	movf	??___ftge+2,w
  4034  0B86  00F5               	movwf	___ftge@ff2+2
  4035  0B87                     l1643:	
  4036  0B87  3080               	movlw	128
  4037  0B88  06F2               	xorwf	___ftge@ff1+2,f
  4038  0B89  3080               	movlw	128
  4039  0B8A  06F5               	xorwf	___ftge@ff2+2,f
  4040  0B8B  0875               	movf	___ftge@ff2+2,w
  4041  0B8C  0272               	subwf	___ftge@ff1+2,w
  4042  0B8D  1D03               	skipz
  4043  0B8E  0008               	return
  4044  0B8F  0874               	movf	___ftge@ff2+1,w
  4045  0B90  0271               	subwf	___ftge@ff1+1,w
  4046  0B91  1D03               	skipz
  4047  0B92  0008               	return
  4048  0B93  0873               	movf	___ftge@ff2,w
  4049  0B94  0270               	subwf	___ftge@ff1,w
  4050  0B95  0008               	return
  4051  0B96                     __end_of___ftge:	
  4052                           
  4053                           	psect	text16
  4054  0251                     __ptext16:	
  4055 ;; *************** function ___ftadd *****************
  4056 ;; Defined at:
  4057 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  f1              3   10[BANK0 ] float 
  4060 ;;  f2              3   13[BANK0 ] float 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  exp1            1   22[BANK0 ] unsigned char 
  4063 ;;  exp2            1   21[BANK0 ] unsigned char 
  4064 ;;  sign            1   20[BANK0 ] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  3   10[BANK0 ] float 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0, pclath, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4074 ;;      Params:         0       6       0       0       0
  4075 ;;      Locals:         0       3       0       0       0
  4076 ;;      Temps:          0       4       0       0       0
  4077 ;;      Totals:         0      13       0       0       0
  4078 ;;Total ram usage:       13 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    1
  4081 ;; This function calls:
  4082 ;;		___ftpack
  4083 ;; This function is called by:
  4084 ;;		_ceil
  4085 ;;		_cos
  4086 ;;		___ftsub
  4087 ;;		_sin
  4088 ;;		_eval_poly
  4089 ;;		_floor
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function ___ftadd
  4095  0251                     ___ftadd:	
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4099  0251  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0252  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0253  082A               	movf	___ftadd@f1,w
  4102  0254  00B0               	movwf	??___ftadd
  4103  0255  082B               	movf	___ftadd@f1+1,w
  4104  0256  00B1               	movwf	??___ftadd+1
  4105  0257  082C               	movf	___ftadd@f1+2,w
  4106  0258  00B2               	movwf	??___ftadd+2
  4107  0259  1003               	clrc
  4108  025A  0D31               	rlf	??___ftadd+1,w
  4109  025B  0D32               	rlf	??___ftadd+2,w
  4110  025C  00B3               	movwf	??___ftadd+3
  4111  025D  0833               	movf	??___ftadd+3,w
  4112  025E  00B6               	movwf	___ftadd@exp1
  4113  025F  082D               	movf	___ftadd@f2,w
  4114  0260  00B0               	movwf	??___ftadd
  4115  0261  082E               	movf	___ftadd@f2+1,w
  4116  0262  00B1               	movwf	??___ftadd+1
  4117  0263  082F               	movf	___ftadd@f2+2,w
  4118  0264  00B2               	movwf	??___ftadd+2
  4119  0265  1003               	clrc
  4120  0266  0D31               	rlf	??___ftadd+1,w
  4121  0267  0D32               	rlf	??___ftadd+2,w
  4122  0268  00B3               	movwf	??___ftadd+3
  4123  0269  0833               	movf	??___ftadd+3,w
  4124  026A  00B5               	movwf	___ftadd@exp2
  4125  026B  0836               	movf	___ftadd@exp1,w
  4126  026C  1903               	btfsc	3,2
  4127  026D  2A7A               	goto	l1571
  4128  026E  0835               	movf	___ftadd@exp2,w
  4129  026F  0236               	subwf	___ftadd@exp1,w
  4130  0270  1803               	skipnc
  4131  0271  2A81               	goto	l1575
  4132  0272  0336               	decf	___ftadd@exp1,w
  4133  0273  3AFF               	xorlw	255
  4134  0274  0735               	addwf	___ftadd@exp2,w
  4135  0275  00B0               	movwf	??___ftadd
  4136  0276  3019               	movlw	25
  4137  0277  0230               	subwf	??___ftadd,w
  4138  0278  1C03               	skipc
  4139  0279  2A81               	goto	l1575
  4140  027A                     l1571:	
  4141  027A  082D               	movf	___ftadd@f2,w
  4142  027B  00AA               	movwf	?___ftadd
  4143  027C  082E               	movf	___ftadd@f2+1,w
  4144  027D  00AB               	movwf	?___ftadd+1
  4145  027E  082F               	movf	___ftadd@f2+2,w
  4146  027F  00AC               	movwf	?___ftadd+2
  4147  0280  0008               	return
  4148  0281                     l1575:	
  4149  0281  0835               	movf	___ftadd@exp2,w
  4150  0282  1903               	btfsc	3,2
  4151  0283  0008               	return
  4152  0284  0836               	movf	___ftadd@exp1,w
  4153  0285  0235               	subwf	___ftadd@exp2,w
  4154  0286  1803               	skipnc
  4155  0287  2A90               	goto	l1581
  4156  0288  0335               	decf	___ftadd@exp2,w
  4157  0289  3AFF               	xorlw	255
  4158  028A  0736               	addwf	___ftadd@exp1,w
  4159  028B  00B0               	movwf	??___ftadd
  4160  028C  3019               	movlw	25
  4161  028D  0230               	subwf	??___ftadd,w
  4162  028E  1803               	btfsc	3,0
  4163  028F  0008               	return
  4164  0290                     l1581:	
  4165  0290  3006               	movlw	6
  4166  0291  00B0               	movwf	??___ftadd
  4167  0292  0830               	movf	??___ftadd,w
  4168  0293  00B4               	movwf	___ftadd@sign
  4169  0294  1BAC               	btfsc	___ftadd@f1+2,7
  4170  0295  17B4               	bsf	___ftadd@sign,7
  4171  0296  1BAF               	btfsc	___ftadd@f2+2,7
  4172  0297  1734               	bsf	___ftadd@sign,6
  4173  0298  17AB               	bsf	___ftadd@f1+1,7
  4174  0299  30FF               	movlw	255
  4175  029A  05AA               	andwf	___ftadd@f1,f
  4176  029B  30FF               	movlw	255
  4177  029C  05AB               	andwf	___ftadd@f1+1,f
  4178  029D  3000               	movlw	0
  4179  029E  05AC               	andwf	___ftadd@f1+2,f
  4180  029F  17AE               	bsf	___ftadd@f2+1,7
  4181  02A0  30FF               	movlw	255
  4182  02A1  05AD               	andwf	___ftadd@f2,f
  4183  02A2  30FF               	movlw	255
  4184  02A3  05AE               	andwf	___ftadd@f2+1,f
  4185  02A4  3000               	movlw	0
  4186  02A5  05AF               	andwf	___ftadd@f2+2,f
  4187  02A6  0835               	movf	___ftadd@exp2,w
  4188  02A7  0236               	subwf	___ftadd@exp1,w
  4189  02A8  1803               	skipnc
  4190  02A9  2AD0               	goto	l1603
  4191  02AA                     l1593:	
  4192  02AA  3001               	movlw	1
  4193  02AB                     u1835:	
  4194  02AB  1003               	clrc
  4195  02AC  0DAD               	rlf	___ftadd@f2,f
  4196  02AD  0DAE               	rlf	___ftadd@f2+1,f
  4197  02AE  0DAF               	rlf	___ftadd@f2+2,f
  4198  02AF  3EFF               	addlw	-1
  4199  02B0  1D03               	skipz
  4200  02B1  2AAB               	goto	u1835
  4201  02B2  3001               	movlw	1
  4202  02B3  02B5               	subwf	___ftadd@exp2,f
  4203  02B4  0835               	movf	___ftadd@exp2,w
  4204  02B5  0636               	xorwf	___ftadd@exp1,w
  4205  02B6  1903               	skipnz
  4206  02B7  2ACB               	goto	l1601
  4207  02B8  3001               	movlw	1
  4208  02B9  02B4               	subwf	___ftadd@sign,f
  4209  02BA  0834               	movf	___ftadd@sign,w
  4210  02BB  3907               	andlw	7
  4211  02BC  1903               	btfsc	3,2
  4212  02BD  2ACB               	goto	l1601
  4213  02BE  2AAA               	goto	l1593
  4214  02BF                     l1599:	
  4215  02BF  3001               	movlw	1
  4216  02C0                     u1865:	
  4217  02C0  1003               	clrc
  4218  02C1  0CAC               	rrf	___ftadd@f1+2,f
  4219  02C2  0CAB               	rrf	___ftadd@f1+1,f
  4220  02C3  0CAA               	rrf	___ftadd@f1,f
  4221  02C4  3EFF               	addlw	-1
  4222  02C5  1D03               	skipz
  4223  02C6  2AC0               	goto	u1865
  4224  02C7  3001               	movlw	1
  4225  02C8  00B0               	movwf	??___ftadd
  4226  02C9  0830               	movf	??___ftadd,w
  4227  02CA  07B6               	addwf	___ftadd@exp1,f
  4228  02CB                     l1601:	
  4229  02CB  0836               	movf	___ftadd@exp1,w
  4230  02CC  0635               	xorwf	___ftadd@exp2,w
  4231  02CD  1903               	btfsc	3,2
  4232  02CE  2AF9               	goto	l493
  4233  02CF  2ABF               	goto	l1599
  4234  02D0                     l1603:	
  4235  02D0  0836               	movf	___ftadd@exp1,w
  4236  02D1  0235               	subwf	___ftadd@exp2,w
  4237  02D2  1803               	skipnc
  4238  02D3  2AF9               	goto	l493
  4239  02D4                     l1605:	
  4240  02D4  3001               	movlw	1
  4241  02D5                     u1895:	
  4242  02D5  1003               	clrc
  4243  02D6  0DAA               	rlf	___ftadd@f1,f
  4244  02D7  0DAB               	rlf	___ftadd@f1+1,f
  4245  02D8  0DAC               	rlf	___ftadd@f1+2,f
  4246  02D9  3EFF               	addlw	-1
  4247  02DA  1D03               	skipz
  4248  02DB  2AD5               	goto	u1895
  4249  02DC  3001               	movlw	1
  4250  02DD  02B6               	subwf	___ftadd@exp1,f
  4251  02DE  0835               	movf	___ftadd@exp2,w
  4252  02DF  0636               	xorwf	___ftadd@exp1,w
  4253  02E0  1903               	skipnz
  4254  02E1  2AF5               	goto	l1613
  4255  02E2  3001               	movlw	1
  4256  02E3  02B4               	subwf	___ftadd@sign,f
  4257  02E4  0834               	movf	___ftadd@sign,w
  4258  02E5  3907               	andlw	7
  4259  02E6  1903               	btfsc	3,2
  4260  02E7  2AF5               	goto	l1613
  4261  02E8  2AD4               	goto	l1605
  4262  02E9                     l1611:	
  4263  02E9  3001               	movlw	1
  4264  02EA                     u1925:	
  4265  02EA  1003               	clrc
  4266  02EB  0CAF               	rrf	___ftadd@f2+2,f
  4267  02EC  0CAE               	rrf	___ftadd@f2+1,f
  4268  02ED  0CAD               	rrf	___ftadd@f2,f
  4269  02EE  3EFF               	addlw	-1
  4270  02EF  1D03               	skipz
  4271  02F0  2AEA               	goto	u1925
  4272  02F1  3001               	movlw	1
  4273  02F2  00B0               	movwf	??___ftadd
  4274  02F3  0830               	movf	??___ftadd,w
  4275  02F4  07B5               	addwf	___ftadd@exp2,f
  4276  02F5                     l1613:	
  4277  02F5  0836               	movf	___ftadd@exp1,w
  4278  02F6  0635               	xorwf	___ftadd@exp2,w
  4279  02F7  1D03               	skipz
  4280  02F8  2AE9               	goto	l1611
  4281  02F9                     l493:	
  4282  02F9  1FB4               	btfss	___ftadd@sign,7
  4283  02FA  2B0B               	goto	l1617
  4284  02FB  30FF               	movlw	255
  4285  02FC  06AA               	xorwf	___ftadd@f1,f
  4286  02FD  30FF               	movlw	255
  4287  02FE  06AB               	xorwf	___ftadd@f1+1,f
  4288  02FF  30FF               	movlw	255
  4289  0300  06AC               	xorwf	___ftadd@f1+2,f
  4290  0301  3001               	movlw	1
  4291  0302  07AA               	addwf	___ftadd@f1,f
  4292  0303  3000               	movlw	0
  4293  0304  1803               	skipnc
  4294  0305  3001               	movlw	1
  4295  0306  07AB               	addwf	___ftadd@f1+1,f
  4296  0307  3000               	movlw	0
  4297  0308  1803               	skipnc
  4298  0309  3001               	movlw	1
  4299  030A  07AC               	addwf	___ftadd@f1+2,f
  4300  030B                     l1617:	
  4301  030B  1F34               	btfss	___ftadd@sign,6
  4302  030C  2B1D               	goto	l1621
  4303  030D  30FF               	movlw	255
  4304  030E  06AD               	xorwf	___ftadd@f2,f
  4305  030F  30FF               	movlw	255
  4306  0310  06AE               	xorwf	___ftadd@f2+1,f
  4307  0311  30FF               	movlw	255
  4308  0312  06AF               	xorwf	___ftadd@f2+2,f
  4309  0313  3001               	movlw	1
  4310  0314  07AD               	addwf	___ftadd@f2,f
  4311  0315  3000               	movlw	0
  4312  0316  1803               	skipnc
  4313  0317  3001               	movlw	1
  4314  0318  07AE               	addwf	___ftadd@f2+1,f
  4315  0319  3000               	movlw	0
  4316  031A  1803               	skipnc
  4317  031B  3001               	movlw	1
  4318  031C  07AF               	addwf	___ftadd@f2+2,f
  4319  031D                     l1621:	
  4320  031D  01B4               	clrf	___ftadd@sign
  4321  031E  082A               	movf	___ftadd@f1,w
  4322  031F  07AD               	addwf	___ftadd@f2,f
  4323  0320  082B               	movf	___ftadd@f1+1,w
  4324  0321  1103               	clrz
  4325  0322  1803               	skipnc
  4326  0323  0A2B               	incf	___ftadd@f1+1,w
  4327  0324  1D03               	btfss	3,2
  4328  0325  07AE               	addwf	___ftadd@f2+1,f
  4329  0326  082C               	movf	___ftadd@f1+2,w
  4330  0327  1103               	clrz
  4331  0328  1803               	skipnc
  4332  0329  0A2C               	incf	___ftadd@f1+2,w
  4333  032A  1D03               	btfss	3,2
  4334  032B  07AF               	addwf	___ftadd@f2+2,f
  4335  032C  1FAF               	btfss	___ftadd@f2+2,7
  4336  032D  2B40               	goto	l1631
  4337  032E  30FF               	movlw	255
  4338  032F  06AD               	xorwf	___ftadd@f2,f
  4339  0330  30FF               	movlw	255
  4340  0331  06AE               	xorwf	___ftadd@f2+1,f
  4341  0332  30FF               	movlw	255
  4342  0333  06AF               	xorwf	___ftadd@f2+2,f
  4343  0334  3001               	movlw	1
  4344  0335  07AD               	addwf	___ftadd@f2,f
  4345  0336  3000               	movlw	0
  4346  0337  1803               	skipnc
  4347  0338  3001               	movlw	1
  4348  0339  07AE               	addwf	___ftadd@f2+1,f
  4349  033A  3000               	movlw	0
  4350  033B  1803               	skipnc
  4351  033C  3001               	movlw	1
  4352  033D  07AF               	addwf	___ftadd@f2+2,f
  4353  033E  01B4               	clrf	___ftadd@sign
  4354  033F  0AB4               	incf	___ftadd@sign,f
  4355  0340                     l1631:	
  4356  0340  082D               	movf	___ftadd@f2,w
  4357  0341  00F0               	movwf	___ftpack@arg
  4358  0342  082E               	movf	___ftadd@f2+1,w
  4359  0343  00F1               	movwf	___ftpack@arg+1
  4360  0344  082F               	movf	___ftadd@f2+2,w
  4361  0345  00F2               	movwf	___ftpack@arg+2
  4362  0346  0836               	movf	___ftadd@exp1,w
  4363  0347  00B0               	movwf	??___ftadd
  4364  0348  0830               	movf	??___ftadd,w
  4365  0349  00F3               	movwf	___ftpack@exp
  4366  034A  0834               	movf	___ftadd@sign,w
  4367  034B  00B1               	movwf	??___ftadd+1
  4368  034C  0831               	movf	??___ftadd+1,w
  4369  034D  00F4               	movwf	___ftpack@sign
  4370  034E  120A  158A  2396   	fcall	___ftpack
  4371  0351  0870               	movf	?___ftpack,w
  4372  0352  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0353  1303               	bcf	3,6	;RP1=0, select bank0
  4374  0354  00AA               	movwf	?___ftadd
  4375  0355  0871               	movf	?___ftpack+1,w
  4376  0356  00AB               	movwf	?___ftadd+1
  4377  0357  0872               	movf	?___ftpack+2,w
  4378  0358  00AC               	movwf	?___ftadd+2
  4379  0359  0008               	return
  4380  035A                     __end_of___ftadd:	
  4381                           
  4382                           	psect	text17
  4383  09F8                     __ptext17:	
  4384 ;; *************** function ___altoft *****************
  4385 ;; Defined at:
  4386 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  c               4   24[BANK0 ] long 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  sign            1   31[BANK0 ] unsigned char 
  4391 ;;  exp             1   30[BANK0 ] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  3   24[BANK0 ] float 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       4       0       0       0
  4402 ;;      Locals:         0       2       0       0       0
  4403 ;;      Temps:          0       2       0       0       0
  4404 ;;      Totals:         0       8       0       0       0
  4405 ;;Total ram usage:        8 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    1
  4408 ;; This function calls:
  4409 ;;		___ftpack
  4410 ;; This function is called by:
  4411 ;;		_ceil
  4412 ;;		_floor
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function ___altoft
  4418  09F8                     ___altoft:	
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4422  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  4423  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  4424  09FA  01BF               	clrf	___altoft@sign
  4425  09FB  308E               	movlw	142
  4426  09FC  00BC               	movwf	??___altoft
  4427  09FD  083C               	movf	??___altoft,w
  4428  09FE  00BE               	movwf	___altoft@exp
  4429  09FF  1FBB               	btfss	___altoft@c+3,7
  4430  0A00  2A0E               	goto	l1543
  4431  0A01  09B8               	comf	___altoft@c,f
  4432  0A02  09B9               	comf	___altoft@c+1,f
  4433  0A03  09BA               	comf	___altoft@c+2,f
  4434  0A04  09BB               	comf	___altoft@c+3,f
  4435  0A05  0AB8               	incf	___altoft@c,f
  4436  0A06  1903               	skipnz
  4437  0A07  0AB9               	incf	___altoft@c+1,f
  4438  0A08  1903               	skipnz
  4439  0A09  0ABA               	incf	___altoft@c+2,f
  4440  0A0A  1903               	skipnz
  4441  0A0B  0ABB               	incf	___altoft@c+3,f
  4442  0A0C  01BF               	clrf	___altoft@sign
  4443  0A0D  0ABF               	incf	___altoft@sign,f
  4444  0A0E                     l1543:	
  4445  0A0E  30FF               	movlw	255
  4446  0A0F  053B               	andwf	___altoft@c+3,w
  4447  0A10  1903               	btfsc	3,2
  4448  0A11  2A20               	goto	l1545
  4449  0A12  3001               	movlw	1
  4450  0A13                     u1715:	
  4451  0A13  1003               	clrc
  4452  0A14  0CBB               	rrf	___altoft@c+3,f
  4453  0A15  0CBA               	rrf	___altoft@c+2,f
  4454  0A16  0CB9               	rrf	___altoft@c+1,f
  4455  0A17  0CB8               	rrf	___altoft@c,f
  4456  0A18  3EFF               	addlw	-1
  4457  0A19  1D03               	skipz
  4458  0A1A  2A13               	goto	u1715
  4459  0A1B  3001               	movlw	1
  4460  0A1C  00BC               	movwf	??___altoft
  4461  0A1D  083C               	movf	??___altoft,w
  4462  0A1E  07BE               	addwf	___altoft@exp,f
  4463  0A1F  2A0E               	goto	l1543
  4464  0A20                     l1545:	
  4465  0A20  0838               	movf	___altoft@c,w
  4466  0A21  00F0               	movwf	___ftpack@arg
  4467  0A22  0839               	movf	___altoft@c+1,w
  4468  0A23  00F1               	movwf	___ftpack@arg+1
  4469  0A24  083A               	movf	___altoft@c+2,w
  4470  0A25  00F2               	movwf	___ftpack@arg+2
  4471  0A26  083E               	movf	___altoft@exp,w
  4472  0A27  00BC               	movwf	??___altoft
  4473  0A28  083C               	movf	??___altoft,w
  4474  0A29  00F3               	movwf	___ftpack@exp
  4475  0A2A  083F               	movf	___altoft@sign,w
  4476  0A2B  00BD               	movwf	??___altoft+1
  4477  0A2C  083D               	movf	??___altoft+1,w
  4478  0A2D  00F4               	movwf	___ftpack@sign
  4479  0A2E  120A  158A  2396   	fcall	___ftpack
  4480  0A31  0870               	movf	?___ftpack,w
  4481  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  4482  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  4483  0A34  00B8               	movwf	?___altoft
  4484  0A35  0871               	movf	?___ftpack+1,w
  4485  0A36  00B9               	movwf	?___altoft+1
  4486  0A37  0872               	movf	?___ftpack+2,w
  4487  0A38  00BA               	movwf	?___altoft+2
  4488  0A39  0008               	return
  4489  0A3A                     __end_of___altoft:	
  4490                           
  4491                           	psect	text18
  4492  0931                     __ptext18:	
  4493 ;; *************** function ___awtoft *****************
  4494 ;; Defined at:
  4495 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  c               2    8[COMMON] int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  sign            1   13[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  3    8[COMMON] float 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         3       0       0       0       0
  4510 ;;      Locals:         1       0       0       0       0
  4511 ;;      Temps:          2       0       0       0       0
  4512 ;;      Totals:         6       0       0       0       0
  4513 ;;Total ram usage:        6 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    1
  4516 ;; This function calls:
  4517 ;;		___ftpack
  4518 ;; This function is called by:
  4519 ;;		_powerFactor
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function ___awtoft
  4525  0931                     ___awtoft:	
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4529  0931  01FD               	clrf	___awtoft@sign
  4530  0932  1FF9               	btfss	___awtoft@c+1,7
  4531  0933  293B               	goto	l1985
  4532  0934  09F8               	comf	___awtoft@c,f
  4533  0935  09F9               	comf	___awtoft@c+1,f
  4534  0936  0AF8               	incf	___awtoft@c,f
  4535  0937  1903               	skipnz
  4536  0938  0AF9               	incf	___awtoft@c+1,f
  4537  0939  01FD               	clrf	___awtoft@sign
  4538  093A  0AFD               	incf	___awtoft@sign,f
  4539  093B                     l1985:	
  4540  093B  0878               	movf	___awtoft@c,w
  4541  093C  00F0               	movwf	___ftpack@arg
  4542  093D  0879               	movf	___awtoft@c+1,w
  4543  093E  00F1               	movwf	___ftpack@arg+1
  4544  093F  01F2               	clrf	___ftpack@arg+2
  4545  0940  308E               	movlw	142
  4546  0941  00FB               	movwf	??___awtoft
  4547  0942  087B               	movf	??___awtoft,w
  4548  0943  00F3               	movwf	___ftpack@exp
  4549  0944  087D               	movf	___awtoft@sign,w
  4550  0945  00FC               	movwf	??___awtoft+1
  4551  0946  087C               	movf	??___awtoft+1,w
  4552  0947  00F4               	movwf	___ftpack@sign
  4553  0948  120A  158A  2396   	fcall	___ftpack
  4554  094B  0870               	movf	?___ftpack,w
  4555  094C  00F8               	movwf	?___awtoft
  4556  094D  0871               	movf	?___ftpack+1,w
  4557  094E  00F9               	movwf	?___awtoft+1
  4558  094F  0872               	movf	?___ftpack+2,w
  4559  0950  00FA               	movwf	?___awtoft+2
  4560  0951  0008               	return
  4561  0952                     __end_of___awtoft:	
  4562                           
  4563                           	psect	text19
  4564  0B96                     __ptext19:	
  4565 ;; *************** function ___ftpack *****************
  4566 ;; Defined at:
  4567 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  arg             3    0[COMMON] unsigned um
  4570 ;;  exp             1    3[COMMON] unsigned char 
  4571 ;;  sign            1    4[COMMON] unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  3    0[COMMON] float 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4583 ;;      Params:         5       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0
  4585 ;;      Temps:          3       0       0       0       0
  4586 ;;      Totals:         8       0       0       0       0
  4587 ;;Total ram usage:        8 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		___altoft
  4593 ;;		___awtoft
  4594 ;;		___ftadd
  4595 ;;		___ftdiv
  4596 ;;		___ftmul
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function ___ftpack
  4602  0B96                     ___ftpack:	
  4603                           
  4604                           ;incstack = 0
  4605                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4606  0B96  0873               	movf	___ftpack@exp,w
  4607  0B97  1903               	btfsc	3,2
  4608  0B98  2B9E               	goto	l1491
  4609  0B99  0872               	movf	___ftpack@arg+2,w
  4610  0B9A  0471               	iorwf	___ftpack@arg+1,w
  4611  0B9B  0470               	iorwf	___ftpack@arg,w
  4612  0B9C  1D03               	skipz
  4613  0B9D  2BB1               	goto	l1497
  4614  0B9E                     l1491:	
  4615  0B9E  3000               	movlw	0
  4616  0B9F  00F0               	movwf	?___ftpack
  4617  0BA0  3000               	movlw	0
  4618  0BA1  00F1               	movwf	?___ftpack+1
  4619  0BA2  3000               	movlw	0
  4620  0BA3  00F2               	movwf	?___ftpack+2
  4621  0BA4  0008               	return
  4622  0BA5                     l1495:	
  4623  0BA5  3001               	movlw	1
  4624  0BA6  00F5               	movwf	??___ftpack
  4625  0BA7  0875               	movf	??___ftpack,w
  4626  0BA8  07F3               	addwf	___ftpack@exp,f
  4627  0BA9  3001               	movlw	1
  4628  0BAA                     u1585:	
  4629  0BAA  1003               	clrc
  4630  0BAB  0CF2               	rrf	___ftpack@arg+2,f
  4631  0BAC  0CF1               	rrf	___ftpack@arg+1,f
  4632  0BAD  0CF0               	rrf	___ftpack@arg,f
  4633  0BAE  3EFF               	addlw	-1
  4634  0BAF  1D03               	skipz
  4635  0BB0  2BAA               	goto	u1585
  4636  0BB1                     l1497:	
  4637  0BB1  30FE               	movlw	254
  4638  0BB2  0572               	andwf	___ftpack@arg+2,w
  4639  0BB3  1903               	btfsc	3,2
  4640  0BB4  2BCC               	goto	l446
  4641  0BB5  2BA5               	goto	l1495
  4642  0BB6                     l1499:	
  4643  0BB6  3001               	movlw	1
  4644  0BB7  00F5               	movwf	??___ftpack
  4645  0BB8  0875               	movf	??___ftpack,w
  4646  0BB9  07F3               	addwf	___ftpack@exp,f
  4647  0BBA  3001               	movlw	1
  4648  0BBB  07F0               	addwf	___ftpack@arg,f
  4649  0BBC  3000               	movlw	0
  4650  0BBD  1803               	skipnc
  4651  0BBE  3001               	movlw	1
  4652  0BBF  07F1               	addwf	___ftpack@arg+1,f
  4653  0BC0  3000               	movlw	0
  4654  0BC1  1803               	skipnc
  4655  0BC2  3001               	movlw	1
  4656  0BC3  07F2               	addwf	___ftpack@arg+2,f
  4657  0BC4  3001               	movlw	1
  4658  0BC5                     u1605:	
  4659  0BC5  1003               	clrc
  4660  0BC6  0CF2               	rrf	___ftpack@arg+2,f
  4661  0BC7  0CF1               	rrf	___ftpack@arg+1,f
  4662  0BC8  0CF0               	rrf	___ftpack@arg,f
  4663  0BC9  3EFF               	addlw	-1
  4664  0BCA  1D03               	skipz
  4665  0BCB  2BC5               	goto	u1605
  4666  0BCC                     l446:	
  4667  0BCC  30FF               	movlw	255
  4668  0BCD  0572               	andwf	___ftpack@arg+2,w
  4669  0BCE  1903               	btfsc	3,2
  4670  0BCF  2BDB               	goto	l1507
  4671  0BD0  2BB6               	goto	l1499
  4672  0BD1                     l1505:	
  4673  0BD1  3001               	movlw	1
  4674  0BD2  02F3               	subwf	___ftpack@exp,f
  4675  0BD3  3001               	movlw	1
  4676  0BD4                     u1625:	
  4677  0BD4  1003               	clrc
  4678  0BD5  0DF0               	rlf	___ftpack@arg,f
  4679  0BD6  0DF1               	rlf	___ftpack@arg+1,f
  4680  0BD7  0DF2               	rlf	___ftpack@arg+2,f
  4681  0BD8  3EFF               	addlw	-1
  4682  0BD9  1D03               	skipz
  4683  0BDA  2BD4               	goto	u1625
  4684  0BDB                     l1507:	
  4685  0BDB  1BF1               	btfsc	___ftpack@arg+1,7
  4686  0BDC  2BE1               	goto	l453
  4687  0BDD  3002               	movlw	2
  4688  0BDE  0273               	subwf	___ftpack@exp,w
  4689  0BDF  1803               	skipnc
  4690  0BE0  2BD1               	goto	l1505
  4691  0BE1                     l453:	
  4692  0BE1  1873               	btfsc	___ftpack@exp,0
  4693  0BE2  2BE9               	goto	l454
  4694  0BE3  30FF               	movlw	255
  4695  0BE4  05F0               	andwf	___ftpack@arg,f
  4696  0BE5  307F               	movlw	127
  4697  0BE6  05F1               	andwf	___ftpack@arg+1,f
  4698  0BE7  30FF               	movlw	255
  4699  0BE8  05F2               	andwf	___ftpack@arg+2,f
  4700  0BE9                     l454:	
  4701  0BE9  1003               	clrc
  4702  0BEA  0CF3               	rrf	___ftpack@exp,f
  4703  0BEB  0873               	movf	___ftpack@exp,w
  4704  0BEC  00F5               	movwf	??___ftpack
  4705  0BED  01F6               	clrf	??___ftpack+1
  4706  0BEE  01F7               	clrf	??___ftpack+2
  4707  0BEF  3010               	movlw	16
  4708  0BF0                     u1665:	
  4709  0BF0  1003               	clrc
  4710  0BF1  0DF5               	rlf	??___ftpack,f
  4711  0BF2  0DF6               	rlf	??___ftpack+1,f
  4712  0BF3  0DF7               	rlf	??___ftpack+2,f
  4713  0BF4  3EFF               	addlw	-1
  4714  0BF5  1D03               	skipz
  4715  0BF6  2BF0               	goto	u1665
  4716  0BF7  0875               	movf	??___ftpack,w
  4717  0BF8  04F0               	iorwf	___ftpack@arg,f
  4718  0BF9  0876               	movf	??___ftpack+1,w
  4719  0BFA  04F1               	iorwf	___ftpack@arg+1,f
  4720  0BFB  0877               	movf	??___ftpack+2,w
  4721  0BFC  04F2               	iorwf	___ftpack@arg+2,f
  4722  0BFD  0874               	movf	___ftpack@sign,w
  4723  0BFE  1903               	btfsc	3,2
  4724  0BFF  0008               	return
  4725  0C00  17F2               	bsf	___ftpack@arg+2,7
  4726  0C01  0008               	return
  4727  0C02                     __end_of___ftpack:	
  4728                           
  4729                           	psect	text20
  4730  0A3A                     __ptext20:	
  4731 ;; *************** function ___awmod *****************
  4732 ;; Defined at:
  4733 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  divisor         2    0[COMMON] int 
  4736 ;;  dividend        2    2[COMMON] int 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  sign            1    6[COMMON] unsigned char 
  4739 ;;  counter         1    5[COMMON] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  2    0[COMMON] int 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4749 ;;      Params:         4       0       0       0       0
  4750 ;;      Locals:         2       0       0       0       0
  4751 ;;      Temps:          1       0       0       0       0
  4752 ;;      Totals:         7       0       0       0       0
  4753 ;;Total ram usage:        7 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function ___awmod
  4764  0A3A                     ___awmod:	
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4768  0A3A  01F6               	clrf	___awmod@sign
  4769  0A3B  1FF3               	btfss	___awmod@dividend+1,7
  4770  0A3C  2A44               	goto	l2141
  4771  0A3D  09F2               	comf	___awmod@dividend,f
  4772  0A3E  09F3               	comf	___awmod@dividend+1,f
  4773  0A3F  0AF2               	incf	___awmod@dividend,f
  4774  0A40  1903               	skipnz
  4775  0A41  0AF3               	incf	___awmod@dividend+1,f
  4776  0A42  01F6               	clrf	___awmod@sign
  4777  0A43  0AF6               	incf	___awmod@sign,f
  4778  0A44                     l2141:	
  4779  0A44  1FF1               	btfss	___awmod@divisor+1,7
  4780  0A45  2A4B               	goto	l2145
  4781  0A46  09F0               	comf	___awmod@divisor,f
  4782  0A47  09F1               	comf	___awmod@divisor+1,f
  4783  0A48  0AF0               	incf	___awmod@divisor,f
  4784  0A49  1903               	skipnz
  4785  0A4A  0AF1               	incf	___awmod@divisor+1,f
  4786  0A4B                     l2145:	
  4787  0A4B  0870               	movf	___awmod@divisor,w
  4788  0A4C  0471               	iorwf	___awmod@divisor+1,w
  4789  0A4D  1903               	btfsc	3,2
  4790  0A4E  2A78               	goto	l2163
  4791  0A4F  01F5               	clrf	___awmod@counter
  4792  0A50  0AF5               	incf	___awmod@counter,f
  4793  0A51                     l2153:	
  4794  0A51  1BF1               	btfsc	___awmod@divisor+1,7
  4795  0A52  2A5F               	goto	l2155
  4796  0A53  3001               	movlw	1
  4797  0A54                     u3015:	
  4798  0A54  1003               	clrc
  4799  0A55  0DF0               	rlf	___awmod@divisor,f
  4800  0A56  0DF1               	rlf	___awmod@divisor+1,f
  4801  0A57  3EFF               	addlw	-1
  4802  0A58  1D03               	skipz
  4803  0A59  2A54               	goto	u3015
  4804  0A5A  3001               	movlw	1
  4805  0A5B  00F4               	movwf	??___awmod
  4806  0A5C  0874               	movf	??___awmod,w
  4807  0A5D  07F5               	addwf	___awmod@counter,f
  4808  0A5E  2A51               	goto	l2153
  4809  0A5F                     l2155:	
  4810  0A5F  0871               	movf	___awmod@divisor+1,w
  4811  0A60  0273               	subwf	___awmod@dividend+1,w
  4812  0A61  1D03               	skipz
  4813  0A62  2A65               	goto	u3035
  4814  0A63  0870               	movf	___awmod@divisor,w
  4815  0A64  0272               	subwf	___awmod@dividend,w
  4816  0A65                     u3035:	
  4817  0A65  1C03               	skipc
  4818  0A66  2A6D               	goto	l2159
  4819  0A67  0870               	movf	___awmod@divisor,w
  4820  0A68  02F2               	subwf	___awmod@dividend,f
  4821  0A69  0871               	movf	___awmod@divisor+1,w
  4822  0A6A  1C03               	skipc
  4823  0A6B  03F3               	decf	___awmod@dividend+1,f
  4824  0A6C  02F3               	subwf	___awmod@dividend+1,f
  4825  0A6D                     l2159:	
  4826  0A6D  3001               	movlw	1
  4827  0A6E                     u3045:	
  4828  0A6E  1003               	clrc
  4829  0A6F  0CF1               	rrf	___awmod@divisor+1,f
  4830  0A70  0CF0               	rrf	___awmod@divisor,f
  4831  0A71  3EFF               	addlw	-1
  4832  0A72  1D03               	skipz
  4833  0A73  2A6E               	goto	u3045
  4834  0A74  3001               	movlw	1
  4835  0A75  02F5               	subwf	___awmod@counter,f
  4836  0A76  1D03               	btfss	3,2
  4837  0A77  2A5F               	goto	l2155
  4838  0A78                     l2163:	
  4839  0A78  0876               	movf	___awmod@sign,w
  4840  0A79  1903               	btfsc	3,2
  4841  0A7A  2A80               	goto	l2167
  4842  0A7B  09F2               	comf	___awmod@dividend,f
  4843  0A7C  09F3               	comf	___awmod@dividend+1,f
  4844  0A7D  0AF2               	incf	___awmod@dividend,f
  4845  0A7E  1903               	skipnz
  4846  0A7F  0AF3               	incf	___awmod@dividend+1,f
  4847  0A80                     l2167:	
  4848  0A80  0873               	movf	___awmod@dividend+1,w
  4849  0A81  00F1               	movwf	?___awmod+1
  4850  0A82  0872               	movf	___awmod@dividend,w
  4851  0A83  00F0               	movwf	?___awmod
  4852  0A84  0008               	return
  4853  0A85                     __end_of___awmod:	
  4854                           
  4855                           	psect	text21
  4856  0A85                     __ptext21:	
  4857 ;; *************** function ___awdiv *****************
  4858 ;; Defined at:
  4859 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  divisor         2    0[COMMON] int 
  4862 ;;  dividend        2    2[COMMON] int 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  quotient        2    7[COMMON] int 
  4865 ;;  sign            1    6[COMMON] unsigned char 
  4866 ;;  counter         1    5[COMMON] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2    0[COMMON] int 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         4       0       0       0       0
  4877 ;;      Locals:         4       0       0       0       0
  4878 ;;      Temps:          1       0       0       0       0
  4879 ;;      Totals:         9       0       0       0       0
  4880 ;;Total ram usage:        9 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function ___awdiv
  4891  0A85                     ___awdiv:	
  4892                           
  4893                           ;incstack = 0
  4894                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4895  0A85  01F6               	clrf	___awdiv@sign
  4896  0A86  1FF1               	btfss	___awdiv@divisor+1,7
  4897  0A87  2A8F               	goto	l2097
  4898  0A88  09F0               	comf	___awdiv@divisor,f
  4899  0A89  09F1               	comf	___awdiv@divisor+1,f
  4900  0A8A  0AF0               	incf	___awdiv@divisor,f
  4901  0A8B  1903               	skipnz
  4902  0A8C  0AF1               	incf	___awdiv@divisor+1,f
  4903  0A8D  01F6               	clrf	___awdiv@sign
  4904  0A8E  0AF6               	incf	___awdiv@sign,f
  4905  0A8F                     l2097:	
  4906  0A8F  1FF3               	btfss	___awdiv@dividend+1,7
  4907  0A90  2A9A               	goto	l2103
  4908  0A91  09F2               	comf	___awdiv@dividend,f
  4909  0A92  09F3               	comf	___awdiv@dividend+1,f
  4910  0A93  0AF2               	incf	___awdiv@dividend,f
  4911  0A94  1903               	skipnz
  4912  0A95  0AF3               	incf	___awdiv@dividend+1,f
  4913  0A96  3001               	movlw	1
  4914  0A97  00F4               	movwf	??___awdiv
  4915  0A98  0874               	movf	??___awdiv,w
  4916  0A99  06F6               	xorwf	___awdiv@sign,f
  4917  0A9A                     l2103:	
  4918  0A9A  01F7               	clrf	___awdiv@quotient
  4919  0A9B  01F8               	clrf	___awdiv@quotient+1
  4920  0A9C  0870               	movf	___awdiv@divisor,w
  4921  0A9D  0471               	iorwf	___awdiv@divisor+1,w
  4922  0A9E  1903               	btfsc	3,2
  4923  0A9F  2AD1               	goto	l2125
  4924  0AA0  01F5               	clrf	___awdiv@counter
  4925  0AA1  0AF5               	incf	___awdiv@counter,f
  4926  0AA2                     l2113:	
  4927  0AA2  1BF1               	btfsc	___awdiv@divisor+1,7
  4928  0AA3  2AB0               	goto	l2115
  4929  0AA4  3001               	movlw	1
  4930  0AA5                     u2915:	
  4931  0AA5  1003               	clrc
  4932  0AA6  0DF0               	rlf	___awdiv@divisor,f
  4933  0AA7  0DF1               	rlf	___awdiv@divisor+1,f
  4934  0AA8  3EFF               	addlw	-1
  4935  0AA9  1D03               	skipz
  4936  0AAA  2AA5               	goto	u2915
  4937  0AAB  3001               	movlw	1
  4938  0AAC  00F4               	movwf	??___awdiv
  4939  0AAD  0874               	movf	??___awdiv,w
  4940  0AAE  07F5               	addwf	___awdiv@counter,f
  4941  0AAF  2AA2               	goto	l2113
  4942  0AB0                     l2115:	
  4943  0AB0  3001               	movlw	1
  4944  0AB1                     u2935:	
  4945  0AB1  1003               	clrc
  4946  0AB2  0DF7               	rlf	___awdiv@quotient,f
  4947  0AB3  0DF8               	rlf	___awdiv@quotient+1,f
  4948  0AB4  3EFF               	addlw	-1
  4949  0AB5  1D03               	skipz
  4950  0AB6  2AB1               	goto	u2935
  4951  0AB7  0871               	movf	___awdiv@divisor+1,w
  4952  0AB8  0273               	subwf	___awdiv@dividend+1,w
  4953  0AB9  1D03               	skipz
  4954  0ABA  2ABD               	goto	u2945
  4955  0ABB  0870               	movf	___awdiv@divisor,w
  4956  0ABC  0272               	subwf	___awdiv@dividend,w
  4957  0ABD                     u2945:	
  4958  0ABD  1C03               	skipc
  4959  0ABE  2AC6               	goto	l2121
  4960  0ABF  0870               	movf	___awdiv@divisor,w
  4961  0AC0  02F2               	subwf	___awdiv@dividend,f
  4962  0AC1  0871               	movf	___awdiv@divisor+1,w
  4963  0AC2  1C03               	skipc
  4964  0AC3  03F3               	decf	___awdiv@dividend+1,f
  4965  0AC4  02F3               	subwf	___awdiv@dividend+1,f
  4966  0AC5  1477               	bsf	___awdiv@quotient,0
  4967  0AC6                     l2121:	
  4968  0AC6  3001               	movlw	1
  4969  0AC7                     u2955:	
  4970  0AC7  1003               	clrc
  4971  0AC8  0CF1               	rrf	___awdiv@divisor+1,f
  4972  0AC9  0CF0               	rrf	___awdiv@divisor,f
  4973  0ACA  3EFF               	addlw	-1
  4974  0ACB  1D03               	skipz
  4975  0ACC  2AC7               	goto	u2955
  4976  0ACD  3001               	movlw	1
  4977  0ACE  02F5               	subwf	___awdiv@counter,f
  4978  0ACF  1D03               	btfss	3,2
  4979  0AD0  2AB0               	goto	l2115
  4980  0AD1                     l2125:	
  4981  0AD1  0876               	movf	___awdiv@sign,w
  4982  0AD2  1903               	btfsc	3,2
  4983  0AD3  2AD9               	goto	l2129
  4984  0AD4  09F7               	comf	___awdiv@quotient,f
  4985  0AD5  09F8               	comf	___awdiv@quotient+1,f
  4986  0AD6  0AF7               	incf	___awdiv@quotient,f
  4987  0AD7  1903               	skipnz
  4988  0AD8  0AF8               	incf	___awdiv@quotient+1,f
  4989  0AD9                     l2129:	
  4990  0AD9  0878               	movf	___awdiv@quotient+1,w
  4991  0ADA  00F1               	movwf	?___awdiv+1
  4992  0ADB  0877               	movf	___awdiv@quotient,w
  4993  0ADC  00F0               	movwf	?___awdiv
  4994  0ADD  0008               	return
  4995  0ADE                     __end_of___awdiv:	
  4996                           
  4997                           	psect	text22
  4998  0973                     __ptext22:	
  4999 ;; *************** function _LCD_putrs *****************
  5000 ;; Defined at:
  5001 ;;		line 144 in file "../lib/lcd.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  a               1    wreg     PTR const unsigned char 
  5004 ;;		 -> STR_1(13), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  a               1   10[COMMON] PTR const unsigned char 
  5007 ;;		 -> STR_1(13), 
  5008 ;;  i               2    8[COMMON] int 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5018 ;;      Params:         0       0       0       0       0
  5019 ;;      Locals:         3       0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0
  5021 ;;      Totals:         3       0       0       0       0
  5022 ;;Total ram usage:        3 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    2
  5025 ;; This function calls:
  5026 ;;		_LCD_putc
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function _LCD_putrs
  5034  0973                     _LCD_putrs:	
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5038                           ;LCD_putrs@a stored from wreg
  5039  0973  00FA               	movwf	LCD_putrs@a
  5040                           
  5041                           ;lcd.c: 146: for ( int i = 0; a[i] != '\0'; ++i ) {
  5042  0974  01F8               	clrf	LCD_putrs@i
  5043  0975  01F9               	clrf	LCD_putrs@i+1
  5044  0976                     l2087:	
  5045  0976  0878               	movf	LCD_putrs@i,w
  5046  0977  077A               	addwf	LCD_putrs@a,w
  5047  0978  0084               	movwf	4
  5048  0979  120A  158A  2000  120A  158A  	fcall	stringdir
  5049  097E  3A00               	xorlw	0
  5050  097F  1903               	btfsc	3,2
  5051  0980  0008               	return
  5052                           
  5053                           ;lcd.c: 147: LCD_putc(a[i]);
  5054  0981  0878               	movf	LCD_putrs@i,w
  5055  0982  077A               	addwf	LCD_putrs@a,w
  5056  0983  0084               	movwf	4
  5057  0984  120A  158A  2000  120A  158A  	fcall	stringdir
  5058  0989  120A  158A  26AA  120A  158A  	fcall	_LCD_putc
  5059  098E  3001               	movlw	1
  5060  098F  07F8               	addwf	LCD_putrs@i,f
  5061  0990  1803               	skipnc
  5062  0991  0AF9               	incf	LCD_putrs@i+1,f
  5063  0992  3000               	movlw	0
  5064  0993  07F9               	addwf	LCD_putrs@i+1,f
  5065  0994  2976               	goto	l2087
  5066  0995                     __end_of_LCD_putrs:	
  5067                           
  5068                           	psect	text23
  5069  0EAA                     __ptext23:	
  5070 ;; *************** function _LCD_putc *****************
  5071 ;; Defined at:
  5072 ;;		line 119 in file "../lib/lcd.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  c               1    wreg     unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  c               1    7[COMMON] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       0       0       0       0
  5087 ;;      Locals:         1       0       0       0       0
  5088 ;;      Temps:          3       0       0       0       0
  5089 ;;      Totals:         4       0       0       0       0
  5090 ;;Total ram usage:        4 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    1
  5093 ;; This function calls:
  5094 ;;		_LCD_Out
  5095 ;; This function is called by:
  5096 ;;		_main
  5097 ;;		_LCD_putrs
  5098 ;;		_LCD_puts
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _LCD_putc
  5104  0EAA                     _LCD_putc:	
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5108                           ;LCD_putc@c stored from wreg
  5109  0EAA  00F7               	movwf	LCD_putc@c
  5110                           
  5111                           ;lcd.c: 121: *(lcd.PORT) |= 1 << lcd.RS;
  5112  0EAB  3001               	movlw	1
  5113  0EAC  00F4               	movwf	??_LCD_putc
  5114  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  5115  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  5116  0EAF  0863               	movf	(_lcd^(0+128)+2),w
  5117  0EB0  3907               	andlw	7
  5118  0EB1  3E01               	addlw	1
  5119  0EB2  2EB5               	goto	u2694
  5120  0EB3                     u2695:	
  5121  0EB3  1003               	clrc
  5122  0EB4  0DF4               	rlf	??_LCD_putc,f
  5123  0EB5                     u2694:	
  5124  0EB5  3EFF               	addlw	-1
  5125  0EB6  1D03               	skipz
  5126  0EB7  2EB3               	goto	u2695
  5127  0EB8  0874               	movf	??_LCD_putc,w
  5128  0EB9  00F5               	movwf	??_LCD_putc+1
  5129  0EBA  0861               	movf	_lcd^(0+128),w
  5130  0EBB  0084               	movwf	4
  5131  0EBC  1783               	bsf	3,7
  5132  0EBD  1C62               	btfss	(_lcd+1)^(0+128),0
  5133  0EBE  1383               	bcf	3,7
  5134  0EBF  0875               	movf	??_LCD_putc+1,w
  5135  0EC0  0480               	iorwf	0,f
  5136                           
  5137                           ;lcd.c: 122: LCD_Out((c & 0xF0) >> 4);
  5138  0EC1  0877               	movf	LCD_putc@c,w
  5139  0EC2  00F4               	movwf	??_LCD_putc
  5140  0EC3  3004               	movlw	4
  5141  0EC4                     u2705:	
  5142  0EC4  1003               	clrc
  5143  0EC5  0CF4               	rrf	??_LCD_putc,f
  5144  0EC6  3EFF               	addlw	-1
  5145  0EC7  1D03               	skipz
  5146  0EC8  2EC4               	goto	u2705
  5147  0EC9  0874               	movf	??_LCD_putc,w
  5148  0ECA  390F               	andlw	15
  5149  0ECB  120A  118A  20BE  120A  158A  	fcall	_LCD_Out
  5150                           
  5151                           ;lcd.c: 124: *(lcd.PORT) |= 1 << lcd.EN;
  5152  0ED0  3001               	movlw	1
  5153  0ED1  00F4               	movwf	??_LCD_putc
  5154  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  5155  0ED3  1303               	bcf	3,6	;RP1=0, select bank1
  5156  0ED4  0C63               	rrf	(_lcd^(0+128)+2),w
  5157  0ED5  00F5               	movwf	??_LCD_putc+1
  5158  0ED6  0CF5               	rrf	??_LCD_putc+1,f
  5159  0ED7  0C75               	rrf	??_LCD_putc+1,w
  5160  0ED8  3907               	andlw	7
  5161  0ED9  3E01               	addlw	1
  5162  0EDA  2EDD               	goto	u2714
  5163  0EDB                     u2715:	
  5164  0EDB  1003               	clrc
  5165  0EDC  0DF4               	rlf	??_LCD_putc,f
  5166  0EDD                     u2714:	
  5167  0EDD  3EFF               	addlw	-1
  5168  0EDE  1D03               	skipz
  5169  0EDF  2EDB               	goto	u2715
  5170  0EE0  0874               	movf	??_LCD_putc,w
  5171  0EE1  00F6               	movwf	??_LCD_putc+2
  5172  0EE2  0861               	movf	_lcd^(0+128),w
  5173  0EE3  0084               	movwf	4
  5174  0EE4  1783               	bsf	3,7
  5175  0EE5  1C62               	btfss	(_lcd+1)^(0+128),0
  5176  0EE6  1383               	bcf	3,7
  5177  0EE7  0876               	movf	??_LCD_putc+2,w
  5178  0EE8  0480               	iorwf	0,f
  5179                           
  5180                           ;lcd.c: 125: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5181  0EE9  301A               	movlw	26
  5182  0EEA  00F4               	movwf	??_LCD_putc
  5183  0EEB                     u3167:	
  5184  0EEB  0BF4               	decfsz	??_LCD_putc,f
  5185  0EEC  2EEB               	goto	u3167
  5186  0EED  0000               	nop
  5187                           
  5188                           ;lcd.c: 126: *(lcd.PORT) &= ~(1 << lcd.EN);
  5189  0EEE  3001               	movlw	1
  5190  0EEF  00F4               	movwf	??_LCD_putc
  5191  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  5192  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  5193  0EF2  0C63               	rrf	(_lcd^(0+128)+2),w
  5194  0EF3  00F5               	movwf	??_LCD_putc+1
  5195  0EF4  0CF5               	rrf	??_LCD_putc+1,f
  5196  0EF5  0C75               	rrf	??_LCD_putc+1,w
  5197  0EF6  3907               	andlw	7
  5198  0EF7  3E01               	addlw	1
  5199  0EF8  2EFB               	goto	u2724
  5200  0EF9                     u2725:	
  5201  0EF9  1003               	clrc
  5202  0EFA  0DF4               	rlf	??_LCD_putc,f
  5203  0EFB                     u2724:	
  5204  0EFB  3EFF               	addlw	-1
  5205  0EFC  1D03               	skipz
  5206  0EFD  2EF9               	goto	u2725
  5207  0EFE  0874               	movf	??_LCD_putc,w
  5208  0EFF  3AFF               	xorlw	255
  5209  0F00  00F6               	movwf	??_LCD_putc+2
  5210  0F01  0861               	movf	_lcd^(0+128),w
  5211  0F02  0084               	movwf	4
  5212  0F03  1783               	bsf	3,7
  5213  0F04  1C62               	btfss	(_lcd+1)^(0+128),0
  5214  0F05  1383               	bcf	3,7
  5215  0F06  0876               	movf	??_LCD_putc+2,w
  5216  0F07  0580               	andwf	0,f
  5217                           
  5218                           ;lcd.c: 128: LCD_Out(c & 0x0F);
  5219  0F08  0877               	movf	LCD_putc@c,w
  5220  0F09  390F               	andlw	15
  5221  0F0A  120A  118A  20BE  120A  158A  	fcall	_LCD_Out
  5222                           
  5223                           ;lcd.c: 130: *(lcd.PORT) |= 1 << lcd.EN;
  5224  0F0F  3001               	movlw	1
  5225  0F10  00F4               	movwf	??_LCD_putc
  5226  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  5227  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  5228  0F13  0C63               	rrf	(_lcd^(0+128)+2),w
  5229  0F14  00F5               	movwf	??_LCD_putc+1
  5230  0F15  0CF5               	rrf	??_LCD_putc+1,f
  5231  0F16  0C75               	rrf	??_LCD_putc+1,w
  5232  0F17  3907               	andlw	7
  5233  0F18  3E01               	addlw	1
  5234  0F19  2F1C               	goto	u2734
  5235  0F1A                     u2735:	
  5236  0F1A  1003               	clrc
  5237  0F1B  0DF4               	rlf	??_LCD_putc,f
  5238  0F1C                     u2734:	
  5239  0F1C  3EFF               	addlw	-1
  5240  0F1D  1D03               	skipz
  5241  0F1E  2F1A               	goto	u2735
  5242  0F1F  0874               	movf	??_LCD_putc,w
  5243  0F20  00F6               	movwf	??_LCD_putc+2
  5244  0F21  0861               	movf	_lcd^(0+128),w
  5245  0F22  0084               	movwf	4
  5246  0F23  1783               	bsf	3,7
  5247  0F24  1C62               	btfss	(_lcd+1)^(0+128),0
  5248  0F25  1383               	bcf	3,7
  5249  0F26  0876               	movf	??_LCD_putc+2,w
  5250  0F27  0480               	iorwf	0,f
  5251                           
  5252                           ;lcd.c: 131: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5253  0F28  301A               	movlw	26
  5254  0F29  00F4               	movwf	??_LCD_putc
  5255  0F2A                     u3177:	
  5256  0F2A  0BF4               	decfsz	??_LCD_putc,f
  5257  0F2B  2F2A               	goto	u3177
  5258  0F2C  0000               	nop
  5259                           
  5260                           ;lcd.c: 132: *(lcd.PORT) &= ~(1 << lcd.EN);
  5261  0F2D  3001               	movlw	1
  5262  0F2E  00F4               	movwf	??_LCD_putc
  5263  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  5264  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  5265  0F31  0C63               	rrf	(_lcd^(0+128)+2),w
  5266  0F32  00F5               	movwf	??_LCD_putc+1
  5267  0F33  0CF5               	rrf	??_LCD_putc+1,f
  5268  0F34  0C75               	rrf	??_LCD_putc+1,w
  5269  0F35  3907               	andlw	7
  5270  0F36  3E01               	addlw	1
  5271  0F37  2F3A               	goto	u2744
  5272  0F38                     u2745:	
  5273  0F38  1003               	clrc
  5274  0F39  0DF4               	rlf	??_LCD_putc,f
  5275  0F3A                     u2744:	
  5276  0F3A  3EFF               	addlw	-1
  5277  0F3B  1D03               	skipz
  5278  0F3C  2F38               	goto	u2745
  5279  0F3D  0874               	movf	??_LCD_putc,w
  5280  0F3E  3AFF               	xorlw	255
  5281  0F3F  00F6               	movwf	??_LCD_putc+2
  5282  0F40  0861               	movf	_lcd^(0+128),w
  5283  0F41  0084               	movwf	4
  5284  0F42  1783               	bsf	3,7
  5285  0F43  1C62               	btfss	(_lcd+1)^(0+128),0
  5286  0F44  1383               	bcf	3,7
  5287  0F45  0876               	movf	??_LCD_putc+2,w
  5288  0F46  0580               	andwf	0,f
  5289  0F47  0008               	return
  5290  0F48                     __end_of_LCD_putc:	
  5291                           
  5292                           	psect	text24
  5293  0004                     __ptext24:	
  5294 ;; *************** function _LCD_Init *****************
  5295 ;; Defined at:
  5296 ;;		line 61 in file "../lib/lcd.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  display         5    8[COMMON] struct .
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  cmd             1   13[COMMON] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      unsigned char 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         5       0       0       0       0
  5311 ;;      Locals:         1       0       0       0       0
  5312 ;;      Temps:          0       2       0       0       0
  5313 ;;      Totals:         6       2       0       0       0
  5314 ;;Total ram usage:        8 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    2
  5317 ;; This function calls:
  5318 ;;		_LCD_Write
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _LCD_Init
  5326  0004                     _LCD_Init:	
  5327                           
  5328                           ;lcd.c: 63: lcd = display;
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5332  0004  30E1               	movlw	_lcd& (0+255)
  5333  0005  0084               	movwf	4
  5334  0006  0878               	movf	LCD_Init@display,w
  5335  0007  1383               	bcf	3,7	;select IRP bank1
  5336  0008  0080               	movwf	0
  5337  0009  0A84               	incf	4,f
  5338  000A  0879               	movf	LCD_Init@display+1,w
  5339  000B  0080               	movwf	0
  5340  000C  0A84               	incf	4,f
  5341  000D  087A               	movf	LCD_Init@display+2,w
  5342  000E  0080               	movwf	0
  5343  000F  0A84               	incf	4,f
  5344  0010  087B               	movf	LCD_Init@display+3,w
  5345  0011  0080               	movwf	0
  5346  0012  0A84               	incf	4,f
  5347  0013  087C               	movf	LCD_Init@display+4,w
  5348  0014  0080               	movwf	0
  5349                           
  5350                           ;lcd.c: 72: if ( lcd.PORT == &PORTA ) {
  5351  0015  3000               	movlw	0
  5352  0016  1683               	bsf	3,5	;RP0=1, select bank1
  5353  0017  1303               	bcf	3,6	;RP1=0, select bank1
  5354  0018  0662               	xorwf	(_lcd+1)^(0+128),w
  5355  0019  1D03               	skipz
  5356  001A  281D               	goto	u2815
  5357  001B  3005               	movlw	5
  5358  001C  0661               	xorwf	_lcd^(0+128),w
  5359  001D                     u2815:	
  5360  001D  1D03               	skipz
  5361  001E  2821               	goto	l2033
  5362                           
  5363                           ;lcd.c: 73: TRISA = 0x00;
  5364  001F  0185               	clrf	5	;volatile
  5365                           
  5366                           ;lcd.c: 74: }
  5367  0020  2848               	goto	l2049
  5368  0021                     l2033:	
  5369                           
  5370                           ;lcd.c: 75: else if ( lcd.PORT == &PORTB ) {
  5371  0021  3000               	movlw	0
  5372  0022  0662               	xorwf	(_lcd+1)^(0+128),w
  5373  0023  1D03               	skipz
  5374  0024  2827               	goto	u2825
  5375  0025  3006               	movlw	6
  5376  0026  0661               	xorwf	_lcd^(0+128),w
  5377  0027                     u2825:	
  5378  0027  1D03               	skipz
  5379  0028  282B               	goto	l2037
  5380                           
  5381                           ;lcd.c: 76: TRISB = 0x00;
  5382  0029  0186               	clrf	6	;volatile
  5383                           
  5384                           ;lcd.c: 77: }
  5385  002A  2848               	goto	l2049
  5386  002B                     l2037:	
  5387                           
  5388                           ;lcd.c: 78: else if ( lcd.PORT == &PORTC ) {
  5389  002B  3000               	movlw	0
  5390  002C  0662               	xorwf	(_lcd+1)^(0+128),w
  5391  002D  1D03               	skipz
  5392  002E  2831               	goto	u2835
  5393  002F  3007               	movlw	7
  5394  0030  0661               	xorwf	_lcd^(0+128),w
  5395  0031                     u2835:	
  5396  0031  1D03               	skipz
  5397  0032  2835               	goto	l2041
  5398                           
  5399                           ;lcd.c: 79: TRISC = 0x00;
  5400  0033  0187               	clrf	7	;volatile
  5401                           
  5402                           ;lcd.c: 80: }
  5403  0034  2848               	goto	l2049
  5404  0035                     l2041:	
  5405                           
  5406                           ;lcd.c: 82: else if ( lcd.PORT == &PORTD ) {
  5407  0035  3000               	movlw	0
  5408  0036  0662               	xorwf	(_lcd+1)^(0+128),w
  5409  0037  1D03               	skipz
  5410  0038  283B               	goto	u2845
  5411  0039  3008               	movlw	8
  5412  003A  0661               	xorwf	_lcd^(0+128),w
  5413  003B                     u2845:	
  5414  003B  1D03               	skipz
  5415  003C  283F               	goto	l2045
  5416                           
  5417                           ;lcd.c: 83: TRISD = 0x00;
  5418  003D  0188               	clrf	8	;volatile
  5419                           
  5420                           ;lcd.c: 84: }
  5421  003E  2848               	goto	l2049
  5422  003F                     l2045:	
  5423                           
  5424                           ;lcd.c: 85: else if ( lcd.PORT == &PORTE ) {
  5425  003F  3000               	movlw	0
  5426  0040  0662               	xorwf	(_lcd+1)^(0+128),w
  5427  0041  1D03               	skipz
  5428  0042  2845               	goto	u2855
  5429  0043  3009               	movlw	9
  5430  0044  0661               	xorwf	_lcd^(0+128),w
  5431  0045                     u2855:	
  5432  0045  1D03               	skipz
  5433  0046  0008               	return
  5434                           
  5435                           ;lcd.c: 86: TRISE = 0x00;
  5436  0047  0189               	clrf	9	;volatile
  5437  0048                     l2049:	
  5438                           ;lcd.c: 89: else {
  5439                           ;lcd.c: 90: return 0;
  5440                           ;	Return value of _LCD_Init is never used
  5441                           
  5442                           ;lcd.c: 87: }
  5443                           
  5444                           
  5445                           ;lcd.c: 91: }
  5446                           ;lcd.c: 94: _delay((unsigned long)((20)*(8000000/4000.0)));
  5447  0048  3034               	movlw	52
  5448  0049  1283               	bcf	3,5	;RP0=0, select bank0
  5449  004A  1303               	bcf	3,6	;RP1=0, select bank0
  5450  004B  00A1               	movwf	??_LCD_Init+1
  5451  004C  30F1               	movlw	241
  5452  004D  00A0               	movwf	??_LCD_Init
  5453  004E                     u3187:	
  5454  004E  0BA0               	decfsz	??_LCD_Init,f
  5455  004F  284E               	goto	u3187
  5456  0050  0BA1               	decfsz	??_LCD_Init+1,f
  5457  0051  284E               	goto	u3187
  5458                           
  5459                           ;lcd.c: 97: LCD_Write(0x03);
  5460  0052  3003               	movlw	3
  5461  0053  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5462                           
  5463                           ;lcd.c: 98: _delay((unsigned long)((5)*(8000000/4000.0)));
  5464  0058  300D               	movlw	13
  5465  0059  1283               	bcf	3,5	;RP0=0, select bank0
  5466  005A  1303               	bcf	3,6	;RP1=0, select bank0
  5467  005B  00A1               	movwf	??_LCD_Init+1
  5468  005C  30FB               	movlw	251
  5469  005D  00A0               	movwf	??_LCD_Init
  5470  005E                     u3197:	
  5471  005E  0BA0               	decfsz	??_LCD_Init,f
  5472  005F  285E               	goto	u3197
  5473  0060  0BA1               	decfsz	??_LCD_Init+1,f
  5474  0061  285E               	goto	u3197
  5475                           
  5476                           ;lcd.c: 99: LCD_Write(0x03);
  5477  0062  3003               	movlw	3
  5478  0063  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5479                           
  5480                           ;lcd.c: 100: _delay((unsigned long)((16)*(8000000/4000.0)));
  5481  0068  302A               	movlw	42
  5482  0069  1283               	bcf	3,5	;RP0=0, select bank0
  5483  006A  1303               	bcf	3,6	;RP1=0, select bank0
  5484  006B  00A1               	movwf	??_LCD_Init+1
  5485  006C  308D               	movlw	141
  5486  006D  00A0               	movwf	??_LCD_Init
  5487  006E                     u3207:	
  5488  006E  0BA0               	decfsz	??_LCD_Init,f
  5489  006F  286E               	goto	u3207
  5490  0070  0BA1               	decfsz	??_LCD_Init+1,f
  5491  0071  286E               	goto	u3207
  5492                           
  5493                           ;lcd.c: 101: LCD_Write(0x03);
  5494  0072  3003               	movlw	3
  5495  0073  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5496                           
  5497                           ;lcd.c: 104: LCD_Write(0x02);
  5498  0078  3002               	movlw	2
  5499  0079  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5500                           
  5501                           ;lcd.c: 107: do { LCD_Write( (0x28 & 0xF0) >> 4 ); LCD_Write( 0x28 & 0x0F); } while ( 0 
      +                          );
  5502  007E  3002               	movlw	2
  5503  007F  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5504  0084  3008               	movlw	8
  5505  0085  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5506                           
  5507                           ;lcd.c: 110: do { LCD_Write( (0x06 & 0xF0) >> 4 ); LCD_Write( 0x06 & 0x0F); } while ( 0 
      +                          );
  5508  008A  3000               	movlw	0
  5509  008B  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5510  0090  3006               	movlw	6
  5511  0091  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5512                           
  5513                           ;lcd.c: 112: do { unsigned char cmd = 0x08; if ( 1 == 1 ) { cmd |= 1 << 2; } if ( 0 == 1
      +                           ) { cmd |= 1 << 1; } if ( 0 == 1 ) { cmd |= 1; } do { LCD_Write( (cmd & 0xF0) >> 4 ); L
      +                          CD_Write( cmd & 0x0F); } while ( 0 ); } while ( 0 );
  5514  0096  3008               	movlw	8
  5515  0097  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0098  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0099  00A0               	movwf	??_LCD_Init
  5518  009A  0820               	movf	??_LCD_Init,w
  5519  009B  00FD               	movwf	LCD_Init@cmd
  5520  009C  157D               	bsf	LCD_Init@cmd,2
  5521  009D  087D               	movf	LCD_Init@cmd,w
  5522  009E  00A0               	movwf	??_LCD_Init
  5523  009F  3004               	movlw	4
  5524  00A0                     u2865:	
  5525  00A0  1003               	clrc
  5526  00A1  0CA0               	rrf	??_LCD_Init,f
  5527  00A2  3EFF               	addlw	-1
  5528  00A3  1D03               	skipz
  5529  00A4  28A0               	goto	u2865
  5530  00A5  0820               	movf	??_LCD_Init,w
  5531  00A6  390F               	andlw	15
  5532  00A7  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5533  00AC  087D               	movf	LCD_Init@cmd,w
  5534  00AD  390F               	andlw	15
  5535  00AE  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5536                           
  5537                           ;lcd.c: 114: do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while ( 0 
      +                          );
  5538  00B3  3000               	movlw	0
  5539  00B4  120A  158A  22DE  120A  118A  	fcall	_LCD_Write
  5540  00B9  3001               	movlw	1
  5541  00BA  120A  158A  22DE   	fcall	_LCD_Write
  5542  00BD  0008               	return
  5543  00BE                     __end_of_LCD_Init:	
  5544                           ;lcd.c: 116: return 1;
  5545                           ;	Return value of _LCD_Init is never used
  5546                           
  5547                           
  5548                           	psect	text25
  5549  0ADE                     __ptext25:	
  5550 ;; *************** function _LCD_Write *****************
  5551 ;; Defined at:
  5552 ;;		line 50 in file "../lib/lcd.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  c               1    wreg     unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  c               1    7[COMMON] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5566 ;;      Params:         0       0       0       0       0
  5567 ;;      Locals:         1       0       0       0       0
  5568 ;;      Temps:          3       0       0       0       0
  5569 ;;      Totals:         4       0       0       0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    1
  5573 ;; This function calls:
  5574 ;;		_LCD_Out
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;;		_LCD_Init
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _LCD_Write
  5583  0ADE                     _LCD_Write:	
  5584                           
  5585                           ;incstack = 0
  5586                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5587                           ;LCD_Write@c stored from wreg
  5588  0ADE  00F7               	movwf	LCD_Write@c
  5589                           
  5590                           ;lcd.c: 52: *(lcd.PORT) &= ~(1 << lcd.RS);
  5591  0ADF  3001               	movlw	1
  5592  0AE0  00F4               	movwf	??_LCD_Write
  5593  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  5595  0AE3  0863               	movf	(_lcd^(0+128)+2),w
  5596  0AE4  3907               	andlw	7
  5597  0AE5  3E01               	addlw	1
  5598  0AE6  2AE9               	goto	u2664
  5599  0AE7                     u2665:	
  5600  0AE7  1003               	clrc
  5601  0AE8  0DF4               	rlf	??_LCD_Write,f
  5602  0AE9                     u2664:	
  5603  0AE9  3EFF               	addlw	-1
  5604  0AEA  1D03               	skipz
  5605  0AEB  2AE7               	goto	u2665
  5606  0AEC  0874               	movf	??_LCD_Write,w
  5607  0AED  3AFF               	xorlw	255
  5608  0AEE  00F5               	movwf	??_LCD_Write+1
  5609  0AEF  0861               	movf	_lcd^(0+128),w
  5610  0AF0  0084               	movwf	4
  5611  0AF1  1783               	bsf	3,7
  5612  0AF2  1C62               	btfss	(_lcd+1)^(0+128),0
  5613  0AF3  1383               	bcf	3,7
  5614  0AF4  0875               	movf	??_LCD_Write+1,w
  5615  0AF5  0580               	andwf	0,f
  5616                           
  5617                           ;lcd.c: 53: LCD_Out(c);
  5618  0AF6  0877               	movf	LCD_Write@c,w
  5619  0AF7  120A  118A  20BE  120A  158A  	fcall	_LCD_Out
  5620                           
  5621                           ;lcd.c: 55: *(lcd.PORT) |= 1 << lcd.EN;
  5622  0AFC  3001               	movlw	1
  5623  0AFD  00F4               	movwf	??_LCD_Write
  5624  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  5625  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  5626  0B00  0C63               	rrf	(_lcd^(0+128)+2),w
  5627  0B01  00F5               	movwf	??_LCD_Write+1
  5628  0B02  0CF5               	rrf	??_LCD_Write+1,f
  5629  0B03  0C75               	rrf	??_LCD_Write+1,w
  5630  0B04  3907               	andlw	7
  5631  0B05  3E01               	addlw	1
  5632  0B06  2B09               	goto	u2674
  5633  0B07                     u2675:	
  5634  0B07  1003               	clrc
  5635  0B08  0DF4               	rlf	??_LCD_Write,f
  5636  0B09                     u2674:	
  5637  0B09  3EFF               	addlw	-1
  5638  0B0A  1D03               	skipz
  5639  0B0B  2B07               	goto	u2675
  5640  0B0C  0874               	movf	??_LCD_Write,w
  5641  0B0D  00F6               	movwf	??_LCD_Write+2
  5642  0B0E  0861               	movf	_lcd^(0+128),w
  5643  0B0F  0084               	movwf	4
  5644  0B10  1783               	bsf	3,7
  5645  0B11  1C62               	btfss	(_lcd+1)^(0+128),0
  5646  0B12  1383               	bcf	3,7
  5647  0B13  0876               	movf	??_LCD_Write+2,w
  5648  0B14  0480               	iorwf	0,f
  5649                           
  5650                           ;lcd.c: 56: _delay((unsigned long)((4)*(8000000/4000.0)));
  5651  0B15  300B               	movlw	11
  5652  0B16  00F5               	movwf	??_LCD_Write+1
  5653  0B17  3062               	movlw	98
  5654  0B18  00F4               	movwf	??_LCD_Write
  5655  0B19                     u3217:	
  5656  0B19  0BF4               	decfsz	??_LCD_Write,f
  5657  0B1A  2B19               	goto	u3217
  5658  0B1B  0BF5               	decfsz	??_LCD_Write+1,f
  5659  0B1C  2B19               	goto	u3217
  5660  0B1D  0000               	nop
  5661                           
  5662                           ;lcd.c: 57: *(lcd.PORT) &= ~(1 << lcd.EN);
  5663  0B1E  3001               	movlw	1
  5664  0B1F  00F4               	movwf	??_LCD_Write
  5665  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  5666  0B21  1303               	bcf	3,6	;RP1=0, select bank1
  5667  0B22  0C63               	rrf	(_lcd^(0+128)+2),w
  5668  0B23  00F5               	movwf	??_LCD_Write+1
  5669  0B24  0CF5               	rrf	??_LCD_Write+1,f
  5670  0B25  0C75               	rrf	??_LCD_Write+1,w
  5671  0B26  3907               	andlw	7
  5672  0B27  3E01               	addlw	1
  5673  0B28  2B2B               	goto	u2684
  5674  0B29                     u2685:	
  5675  0B29  1003               	clrc
  5676  0B2A  0DF4               	rlf	??_LCD_Write,f
  5677  0B2B                     u2684:	
  5678  0B2B  3EFF               	addlw	-1
  5679  0B2C  1D03               	skipz
  5680  0B2D  2B29               	goto	u2685
  5681  0B2E  0874               	movf	??_LCD_Write,w
  5682  0B2F  3AFF               	xorlw	255
  5683  0B30  00F6               	movwf	??_LCD_Write+2
  5684  0B31  0861               	movf	_lcd^(0+128),w
  5685  0B32  0084               	movwf	4
  5686  0B33  1783               	bsf	3,7
  5687  0B34  1C62               	btfss	(_lcd+1)^(0+128),0
  5688  0B35  1383               	bcf	3,7
  5689  0B36  0876               	movf	??_LCD_Write+2,w
  5690  0B37  0580               	andwf	0,f
  5691  0B38  0008               	return
  5692  0B39                     __end_of_LCD_Write:	
  5693                           
  5694                           	psect	text26
  5695  00BE                     __ptext26:	
  5696 ;; *************** function _LCD_Out *****************
  5697 ;; Defined at:
  5698 ;;		line 18 in file "../lib/lcd.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  c               1    wreg     unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  c               1    3[COMMON] unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5712 ;;      Params:         0       0       0       0       0
  5713 ;;      Locals:         1       0       0       0       0
  5714 ;;      Temps:          3       0       0       0       0
  5715 ;;      Totals:         4       0       0       0       0
  5716 ;;Total ram usage:        4 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_LCD_Write
  5722 ;;		_LCD_putc
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           
  5727                           ;psect for function _LCD_Out
  5728  00BE                     _LCD_Out:	
  5729                           
  5730                           ;incstack = 0
  5731                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  5732                           ;LCD_Out@c stored from wreg
  5733  00BE  00F3               	movwf	LCD_Out@c
  5734                           
  5735                           ;lcd.c: 20: if ( c & 1 ){
  5736  00BF  1C73               	btfss	LCD_Out@c,0
  5737  00C0  28D8               	goto	l1847
  5738                           
  5739                           ;lcd.c: 21: *(lcd.PORT) |= 1 << lcd.D4;
  5740  00C1  3001               	movlw	1
  5741  00C2  00F0               	movwf	??_LCD_Out
  5742  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  5743  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  5744  00C5  0864               	movf	(_lcd^(0+128)+3),w
  5745  00C6  3907               	andlw	7
  5746  00C7  3E01               	addlw	1
  5747  00C8  28CB               	goto	u2434
  5748  00C9                     u2435:	
  5749  00C9  1003               	clrc
  5750  00CA  0DF0               	rlf	??_LCD_Out,f
  5751  00CB                     u2434:	
  5752  00CB  3EFF               	addlw	-1
  5753  00CC  1D03               	skipz
  5754  00CD  28C9               	goto	u2435
  5755  00CE  0870               	movf	??_LCD_Out,w
  5756  00CF  00F1               	movwf	??_LCD_Out+1
  5757  00D0  0861               	movf	_lcd^(0+128),w
  5758  00D1  0084               	movwf	4
  5759  00D2  1783               	bsf	3,7
  5760  00D3  1C62               	btfss	(_lcd+1)^(0+128),0
  5761  00D4  1383               	bcf	3,7
  5762  00D5  0871               	movf	??_LCD_Out+1,w
  5763  00D6  0480               	iorwf	0,f
  5764                           
  5765                           ;lcd.c: 22: }
  5766  00D7  28EF               	goto	l1849
  5767  00D8                     l1847:	
  5768                           
  5769                           ;lcd.c: 23: else {
  5770                           ;lcd.c: 24: *(lcd.PORT) &= ~(1 << lcd.D4);
  5771  00D8  3001               	movlw	1
  5772  00D9  00F0               	movwf	??_LCD_Out
  5773  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  5774  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  5775  00DC  0864               	movf	(_lcd^(0+128)+3),w
  5776  00DD  3907               	andlw	7
  5777  00DE  3E01               	addlw	1
  5778  00DF  28E2               	goto	u2444
  5779  00E0                     u2445:	
  5780  00E0  1003               	clrc
  5781  00E1  0DF0               	rlf	??_LCD_Out,f
  5782  00E2                     u2444:	
  5783  00E2  3EFF               	addlw	-1
  5784  00E3  1D03               	skipz
  5785  00E4  28E0               	goto	u2445
  5786  00E5  0870               	movf	??_LCD_Out,w
  5787  00E6  3AFF               	xorlw	255
  5788  00E7  00F1               	movwf	??_LCD_Out+1
  5789  00E8  0861               	movf	_lcd^(0+128),w
  5790  00E9  0084               	movwf	4
  5791  00EA  1783               	bsf	3,7
  5792  00EB  1C62               	btfss	(_lcd+1)^(0+128),0
  5793  00EC  1383               	bcf	3,7
  5794  00ED  0871               	movf	??_LCD_Out+1,w
  5795  00EE  0580               	andwf	0,f
  5796  00EF                     l1849:	
  5797                           
  5798                           ;lcd.c: 25: }
  5799                           ;lcd.c: 27: if ( c & 2 ) {
  5800  00EF  1CF3               	btfss	LCD_Out@c,1
  5801  00F0  2909               	goto	l1853
  5802                           
  5803                           ;lcd.c: 28: *(lcd.PORT) |= 1 << lcd.D5;
  5804  00F1  3001               	movlw	1
  5805  00F2  00F0               	movwf	??_LCD_Out
  5806  00F3  0C64               	rrf	(_lcd^(0+128)+3),w
  5807  00F4  00F1               	movwf	??_LCD_Out+1
  5808  00F5  0CF1               	rrf	??_LCD_Out+1,f
  5809  00F6  0C71               	rrf	??_LCD_Out+1,w
  5810  00F7  3907               	andlw	7
  5811  00F8  3E01               	addlw	1
  5812  00F9  28FC               	goto	u2464
  5813  00FA                     u2465:	
  5814  00FA  1003               	clrc
  5815  00FB  0DF0               	rlf	??_LCD_Out,f
  5816  00FC                     u2464:	
  5817  00FC  3EFF               	addlw	-1
  5818  00FD  1D03               	skipz
  5819  00FE  28FA               	goto	u2465
  5820  00FF  0870               	movf	??_LCD_Out,w
  5821  0100  00F2               	movwf	??_LCD_Out+2
  5822  0101  0861               	movf	_lcd^(0+128),w
  5823  0102  0084               	movwf	4
  5824  0103  1783               	bsf	3,7
  5825  0104  1C62               	btfss	(_lcd+1)^(0+128),0
  5826  0105  1383               	bcf	3,7
  5827  0106  0872               	movf	??_LCD_Out+2,w
  5828  0107  0480               	iorwf	0,f
  5829                           
  5830                           ;lcd.c: 29: }
  5831  0108  2921               	goto	l1855
  5832  0109                     l1853:	
  5833                           
  5834                           ;lcd.c: 30: else {
  5835                           ;lcd.c: 31: *(lcd.PORT) &= ~(1 << lcd.D5);
  5836  0109  3001               	movlw	1
  5837  010A  00F0               	movwf	??_LCD_Out
  5838  010B  0C64               	rrf	(_lcd^(0+128)+3),w
  5839  010C  00F1               	movwf	??_LCD_Out+1
  5840  010D  0CF1               	rrf	??_LCD_Out+1,f
  5841  010E  0C71               	rrf	??_LCD_Out+1,w
  5842  010F  3907               	andlw	7
  5843  0110  3E01               	addlw	1
  5844  0111  2914               	goto	u2474
  5845  0112                     u2475:	
  5846  0112  1003               	clrc
  5847  0113  0DF0               	rlf	??_LCD_Out,f
  5848  0114                     u2474:	
  5849  0114  3EFF               	addlw	-1
  5850  0115  1D03               	skipz
  5851  0116  2912               	goto	u2475
  5852  0117  0870               	movf	??_LCD_Out,w
  5853  0118  3AFF               	xorlw	255
  5854  0119  00F2               	movwf	??_LCD_Out+2
  5855  011A  0861               	movf	_lcd^(0+128),w
  5856  011B  0084               	movwf	4
  5857  011C  1783               	bsf	3,7
  5858  011D  1C62               	btfss	(_lcd+1)^(0+128),0
  5859  011E  1383               	bcf	3,7
  5860  011F  0872               	movf	??_LCD_Out+2,w
  5861  0120  0580               	andwf	0,f
  5862  0121                     l1855:	
  5863                           
  5864                           ;lcd.c: 32: }
  5865                           ;lcd.c: 34: if ( c & 4 ) {
  5866  0121  1D73               	btfss	LCD_Out@c,2
  5867  0122  2938               	goto	l1859
  5868                           
  5869                           ;lcd.c: 35: *(lcd.PORT) |= 1 << lcd.D6;
  5870  0123  3001               	movlw	1
  5871  0124  00F0               	movwf	??_LCD_Out
  5872  0125  0865               	movf	(_lcd^(0+128)+4),w
  5873  0126  3907               	andlw	7
  5874  0127  3E01               	addlw	1
  5875  0128  292B               	goto	u2494
  5876  0129                     u2495:	
  5877  0129  1003               	clrc
  5878  012A  0DF0               	rlf	??_LCD_Out,f
  5879  012B                     u2494:	
  5880  012B  3EFF               	addlw	-1
  5881  012C  1D03               	skipz
  5882  012D  2929               	goto	u2495
  5883  012E  0870               	movf	??_LCD_Out,w
  5884  012F  00F1               	movwf	??_LCD_Out+1
  5885  0130  0861               	movf	_lcd^(0+128),w
  5886  0131  0084               	movwf	4
  5887  0132  1783               	bsf	3,7
  5888  0133  1C62               	btfss	(_lcd+1)^(0+128),0
  5889  0134  1383               	bcf	3,7
  5890  0135  0871               	movf	??_LCD_Out+1,w
  5891  0136  0480               	iorwf	0,f
  5892                           
  5893                           ;lcd.c: 36: }
  5894  0137  294D               	goto	l1861
  5895  0138                     l1859:	
  5896                           
  5897                           ;lcd.c: 37: else {
  5898                           ;lcd.c: 38: *(lcd.PORT) &= ~(1 << lcd.D6);
  5899  0138  3001               	movlw	1
  5900  0139  00F0               	movwf	??_LCD_Out
  5901  013A  0865               	movf	(_lcd^(0+128)+4),w
  5902  013B  3907               	andlw	7
  5903  013C  3E01               	addlw	1
  5904  013D  2940               	goto	u2504
  5905  013E                     u2505:	
  5906  013E  1003               	clrc
  5907  013F  0DF0               	rlf	??_LCD_Out,f
  5908  0140                     u2504:	
  5909  0140  3EFF               	addlw	-1
  5910  0141  1D03               	skipz
  5911  0142  293E               	goto	u2505
  5912  0143  0870               	movf	??_LCD_Out,w
  5913  0144  3AFF               	xorlw	255
  5914  0145  00F1               	movwf	??_LCD_Out+1
  5915  0146  0861               	movf	_lcd^(0+128),w
  5916  0147  0084               	movwf	4
  5917  0148  1783               	bsf	3,7
  5918  0149  1C62               	btfss	(_lcd+1)^(0+128),0
  5919  014A  1383               	bcf	3,7
  5920  014B  0871               	movf	??_LCD_Out+1,w
  5921  014C  0580               	andwf	0,f
  5922  014D                     l1861:	
  5923                           
  5924                           ;lcd.c: 39: }
  5925                           ;lcd.c: 41: if ( c & 8 ) {
  5926  014D  1DF3               	btfss	LCD_Out@c,3
  5927  014E  2967               	goto	l1865
  5928                           
  5929                           ;lcd.c: 42: *(lcd.PORT) |= 1 << lcd.D7;
  5930  014F  3001               	movlw	1
  5931  0150  00F0               	movwf	??_LCD_Out
  5932  0151  0C65               	rrf	(_lcd^(0+128)+4),w
  5933  0152  00F1               	movwf	??_LCD_Out+1
  5934  0153  0CF1               	rrf	??_LCD_Out+1,f
  5935  0154  0C71               	rrf	??_LCD_Out+1,w
  5936  0155  3907               	andlw	7
  5937  0156  3E01               	addlw	1
  5938  0157  295A               	goto	u2524
  5939  0158                     u2525:	
  5940  0158  1003               	clrc
  5941  0159  0DF0               	rlf	??_LCD_Out,f
  5942  015A                     u2524:	
  5943  015A  3EFF               	addlw	-1
  5944  015B  1D03               	skipz
  5945  015C  2958               	goto	u2525
  5946  015D  0870               	movf	??_LCD_Out,w
  5947  015E  00F2               	movwf	??_LCD_Out+2
  5948  015F  0861               	movf	_lcd^(0+128),w
  5949  0160  0084               	movwf	4
  5950  0161  1783               	bsf	3,7
  5951  0162  1C62               	btfss	(_lcd+1)^(0+128),0
  5952  0163  1383               	bcf	3,7
  5953  0164  0872               	movf	??_LCD_Out+2,w
  5954  0165  0480               	iorwf	0,f
  5955                           
  5956                           ;lcd.c: 43: }
  5957  0166  0008               	return
  5958  0167                     l1865:	
  5959                           
  5960                           ;lcd.c: 44: else {
  5961                           ;lcd.c: 45: *(lcd.PORT) &= ~(1 << lcd.D7);
  5962  0167  3001               	movlw	1
  5963  0168  00F0               	movwf	??_LCD_Out
  5964  0169  0C65               	rrf	(_lcd^(0+128)+4),w
  5965  016A  00F1               	movwf	??_LCD_Out+1
  5966  016B  0CF1               	rrf	??_LCD_Out+1,f
  5967  016C  0C71               	rrf	??_LCD_Out+1,w
  5968  016D  3907               	andlw	7
  5969  016E  3E01               	addlw	1
  5970  016F  2972               	goto	u2534
  5971  0170                     u2535:	
  5972  0170  1003               	clrc
  5973  0171  0DF0               	rlf	??_LCD_Out,f
  5974  0172                     u2534:	
  5975  0172  3EFF               	addlw	-1
  5976  0173  1D03               	skipz
  5977  0174  2970               	goto	u2535
  5978  0175  0870               	movf	??_LCD_Out,w
  5979  0176  3AFF               	xorlw	255
  5980  0177  00F2               	movwf	??_LCD_Out+2
  5981  0178  0861               	movf	_lcd^(0+128),w
  5982  0179  0084               	movwf	4
  5983  017A  1783               	bsf	3,7
  5984  017B  1C62               	btfss	(_lcd+1)^(0+128),0
  5985  017C  1383               	bcf	3,7
  5986  017D  0872               	movf	??_LCD_Out+2,w
  5987  017E  0580               	andwf	0,f
  5988  017F  0008               	return
  5989  0180                     __end_of_LCD_Out:	
  5990  007E                     btemp	set	126	;btemp
  5991  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    27
    Data        23
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     55      72
    BANK3            96      0      13
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), ceil@expon(BANK0[2]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    F1471.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S39$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _powerFactor->___awtoft
    _powerFactor->___ftmul
    _fabs->___ftmul
    _sin->___ftmul
    _eval_poly->___ftmul
    ___ftmul->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___awtoft
    ___ftdiv->___ftmul
    _ceil->___ftmul
    ___fttol->___ftmul
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_powerFactor
    _powerFactor->_cos
    _fabs->_ceil
    _cos->_sin
    _sin->___ftdiv
    _floor->___altoft
    _eval_poly->___ftadd
    ___ftsub->_floor
    ___ftdiv->_eval_poly
    _ceil->___altoft
    ___fttol->___ftmul
    ___ftadd->___ftmul
    ___altoft->___fttol

Critical Paths under _main in BANK1

    _main->_powerFactor

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   52121
                                             73 BANK0      6     6      0
                                             20 BANK1     35    35      0
                           _LCD_Init
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
                            ___awdiv
                            ___awmod
                        _powerFactor
 ---------------------------------------------------------------------------------
 (1) _powerFactor                                         24    22      2   49819
                                             69 BANK0      4     2      2
                                              0 BANK1     20    20      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _ceil
                                _cos
                               _fabs
 ---------------------------------------------------------------------------------
 (2) _fabs                                                 3     0      3    1546
                                             41 BANK0      3     0      3
                             ___ftge
                            ___ftmul (ARG)
                            ___ftneg
                            ___fttol (ARG)
                               _ceil (ARG)
 ---------------------------------------------------------------------------------
 (2) _cos                                                  6     3      3   33079
                                             63 BANK0      6     3      3
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (3) _sin                                                 14    11      3   28416
                                             49 BANK0     14    11      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (4) _floor                                                9     6      3    7623
                                             32 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     4      6    6798
                                             23 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2814
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     160
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    3607
                                             41 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     257
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2238
                                             33 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (2) _ceil                                                 9     6      3    7623
                                             32 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___ftmul (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                6     2      4     420
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     411
                                             10 BANK0     14    10      4
                             ___ftge (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1170
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3328
                                             10 BANK0     13     7      6
                             ___bmul (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___altoft                                             8     4      4    1990
                                             24 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1943
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     614
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     618
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     3      0     249
                                              8 COMMON     3     3      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             4     4      0     132
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     233
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            4     4      0     110
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              4     4      0      88
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
     _LCD_Out
   _LCD_putc
     _LCD_Out
   _LCD_putrs
     _LCD_putc
       _LCD_Out
   ___awdiv
   ___awmod
   _powerFactor
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       _eval_poly (ARG)
         ___bmul
         ___ftadd
           ___bmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
     ___ftmul
       ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftge (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
     _ceil
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
       ___ftadd
         ___bmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___fttol (ARG)
         ___ftge (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
       _frexp (ARG)
     _cos
       ___ftadd
         ___bmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       _sin
         ___ftadd
           ___bmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           _eval_poly (ARG)
             ___bmul
             ___ftadd
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___bmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftge (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
             ___ftadd
               ___bmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftge
             ___fttol
               ___ftge (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
             _frexp
         _eval_poly
           ___bmul
           ___ftadd
             ___bmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___ftpack
             ___ftpack (ARG)
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftge (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
           ___ftadd
             ___bmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftge
           ___fttol
             ___ftge (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
           _frexp
     _fabs
       ___ftge
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___fttol (ARG)
         ___ftge (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
       _ceil (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftge (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
         ___ftadd
           ___bmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
         _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       D       9       13.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     37      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B2      12        0.0%
ABS                  0      0      B2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 18 02:41:14 2018

           ___altoft@exp 003E                        pc 0002           ___bmul@product 0072  
            __CFG_CP$OFF 0000            ___altoft@sign 003F                       l98 07C6  
           ___awdiv@sign 0076                       fsr 0004             ___ftadd@exp1 0036  
           ___ftadd@exp2 0035              __CFG_LVP$ON 0000             ___ftadd@sign 0034  
                    l453 0BE1                      l454 0BE9                      l446 0BCC  
                    l553 0D5E                      l493 02F9                      l668 0572  
                    _RA0 0028                      _RA1 0029                      _RD0 0040  
           __CFG_CPD$OFF 0000          LCD_Init@display 0078                      _lcd 00E1  
                    _cos 0C02                      _sin 0477                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076          __end_of_LCD_Out 0180  
           ___ftdiv@cntr 004B             ___ftdiv@sign 0050                     l2005 0385  
                   l2103 0A9A                     l2041 0035                     l2033 0021  
                   l2121 0AC6                     l2113 0AA2                     l2115 0AB0  
                   l2045 003F                     l2037 002B                     l2125 0AD1  
                   l2141 0A44                     l2049 0048                     l2129 0AD9  
                   l2153 0A51                     l2145 0A4B                     l1505 0BD1  
                   l1601 02CB                     l1521 0911                     l2241 07CA  
                   l2155 0A5F                     l2163 0A78                     l1507 0BDB  
                   l1611 02E9                     l1603 02D0                     l1621 031D  
                   l1613 02F5                     l1605 02D4                     l1525 0917  
                   l2087 0976                     l2167 0A80                     l2159 0A6D  
                   l1543 0A0E                     l1631 0340                     l1711 0D04  
                   l2097 0A8F                     l1545 0A20                     l1617 030B  
                   l1801 095B                     l1491 0B9E                     l1571 027A  
                   l1643 0B87                     l1731 0D46                     l1555 09CA  
                   l1581 0290                     l1661 0198                     l2189 065B  
                   l1495 0BA5                     l1575 0281                     l1639 0B60  
                   l1743 0D6F                     l1815 0E42                     l1497 0BB1  
                   l1593 02AA                     l1737 0D53                     l1729 0D36  
                   l1753 0F60                     l1499 0BB6                     l1739 0D61  
                   l1931 0DB2                     l1691 0215                     l1683 01FD  
                   l1667 01AE                     l1819 0E4B                     l1861 014D  
                   l1853 0109                     l1941 0E08                     l1781 0FDA  
                   l1773 0FBB                     l1829 0EA1                     l1909 0C44  
                   ?_cos 005F                     l1855 0121                     l1847 00D8  
                   l1599 02BF                     l1927 0DA9                     l1759 0F76  
                   l1695 0225                     l1679 01ED                     l1839 0CE3  
                   l1865 0167                     l1849 00EF                     l1859 0138  
                   l1875 04A4                     l1887 0535                     l1991 036A  
                   l1985 093B                     l1993 0369                     ?_sin 0051  
                   STR_1 0821             __CFG_WDTE$ON 0000                     u2011 0B7A  
                   u2012 0B7B                     u2013 0B80                     u2014 0B81  
                   u2105 0206                     u3015 0A54                     u2215 0D37  
                   u2055 01BA                     u2305 0F9A                     u2145 0226  
                   u2065 01CC                     u3035 0A65                     u2315 0FBC  
                   u2155 022E                     u3107 0670                     u3045 0A6E  
                   u1605 0BC5                     u2245 0D55                     u2325 0FCD  
                   u3117 0688                     u3070 060E                     u3207 006E  
                   u2335 0FDB                     u2095 01FE                     u3127 06A0  
                   u2504 0140                     u2505 013E                     u3217 0B19  
                   u1625 0BD4                     u2185 0D0B                     u3137 06B8  
                   u2434 00CB                     u2435 00C9                     u1715 0A13  
                   u3147 07BE                     u2524 015A                     u2444 00E2  
                   u2525 0158                     u2445 00E0                     u3157 07D2  
                   u3085 07B0                     u2534 0172                     u2535 0170  
                   u3167 0EEB                     u2295 0F88                     u2464 00FC  
                   u2560 0531                     u2465 00FA                     u3177 0F2A  
                   u2705 0EC4                     u1665 0BF0                     u1585 0BAA  
                   u2474 0114                     u2714 0EDD                     u2570 0532  
                   u2475 0112                     u3187 004E                     u2715 0EDB  
                   u1835 02AB                     u2724 0EFB                     u3197 005E  
                   u2725 0EF9                     u1925 02EA                     u2494 012B  
                   u2734 0F1C                     u2495 0129                     u2815 001D  
                   u2735 0F1A                     u2664 0AE9                     u2744 0F3A  
                   u2665 0AE7                     u2825 0027                     u2745 0F38  
                   u1865 02C0                     u2674 0B09                     u2675 0B07  
                   u2835 0031                     u2915 0AA5                     u2684 0B2B  
                   u2685 0B29                     u2845 003B                     u2694 0EB5  
                   u2855 0045                     u2695 0EB3                     u2935 0AB1  
                   u1895 02D5                     u1991 0B53                     u1992 0B54  
                   u2865 00A0                     u2945 0ABD                     u1993 0B59  
                   u1994 0B5A                     u2955 0AC7             __CFG_WRT$OFF 0000  
            main@payload 00B4                     _ceil 0D78                     _fabs 0995  
                   _main 0604             ___ftpack@arg 0070                     cos@f 005F  
           ___ftpack@exp 0073             powerFactor@a 00AE             powerFactor@b 00B0  
           powerFactor@t 00A0             powerFactor@x 00B2                     btemp 007E  
          __CFG_BOREN$ON 0000                     sin@f 0051                     sin@y 0055  
                   start 0000       __size_of_LCD_Write 005B              LCD_Init@cmd 007D  
      ___bmul@multiplier 0073             ___ftmul@cntr 0028             ___ftmul@sign 0029  
     __size_of_LCD_putrs 0022             ___fttol@exp1 0037                    ??_cos 007E  
           ___fttol@lval 0033                    ??_sin 0054         __end_of_LCD_Init 00BE  
       __end_of_LCD_putc 0F48                    ?_ceil 0040                    ?_fabs 0049  
                  ?_main 0070          __end_of___awdiv 0ADE          __end_of___ftadd 035A  
        __end_of___awmod 0A85          __end_of___ftdiv 1000          __end_of___ftneg 08F8  
        __end_of___ftmul 0251          ___awdiv@divisor 0070          __end_of___ftsub 0973  
        __end_of___fttol 0D78          ___awdiv@counter 0075                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089       __end_ofsin@coeff_a 0815  
     __end_ofsin@coeff_b 0821            ___awtoft@sign 007D                    fabs@d 0049  
                  ceil@i 0044                    ceil@x 0040                    _floor 0E11  
                  _frexp 09BE                    _errno 00E6            ___ftpack@sign 0074  
          powerFactor@pf 00A5            powerFactor@tm 00A2                    main@a 00CB  
                  main@b 00CD                    main@c 00C1                    main@d 00CF  
                  main@e 00D3                    main@f 00D1                    main@x 00D5  
                  pclath 000A                    sin@x2 005B                    status 0003  
                  wtemp0 007E          __initialization 07D9             __end_of_ceil 0E11  
           __end_of_fabs 09BE             __end_of_main 07D9                   ??_ceil 0043  
                 ??_fabs 007E                   ??_main 0069            ___fttol@sign1 0032  
              ??_LCD_Out 0070        __end_of_LCD_Write 0B39        __end_of_LCD_putrs 0995  
                 _ADCON1 009F                   ?_floor 0040                   ?_frexp 0070  
       __end_of___altoft 0A3A         ___awdiv@dividend 0072         __end_of___awtoft 0952  
       __end_of___ftpack 0C02                   _TMR1ON 0080                   _TRISA0 0428  
                 _TRISA1 0429                   _TRISD0 0440                   _TRISD1 0441  
         __CFG_PWRTE$OFF 0000                   ___bmul 090F                   ___ftge 0B39  
              ??___awdiv 0074                ??___ftadd 0030                ??___awmod 0074  
              ??___ftdiv 0047                ??___ftneg 0073                ??___ftmul 0020  
              ??___ftsub 007E                ??___fttol 002E         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                   floor@i 0044  
                 floor@x 0040    ___ftmul@f3_as_product 0025                   sin@sgn 005E  
           ?_powerFactor 0065          __CFG_FOSC$EXTRC 0000  __end_of__initialization 07FC  
             ___altoft@c 0038                ?_LCD_Init 0078               ___ftadd@f1 002A  
             ___ftadd@f2 002D               ___ftge@ff1 0070               ___ftge@ff2 0073  
              ?_LCD_putc 0070             eval_poly@res 003E               ___ftdiv@f1 0044  
             ___ftdiv@f2 0041               ___ftdiv@f3 004C               ___ftneg@f1 0070  
             ___awtoft@c 0078      ___bmul@multiplicand 0070               ___ftmul@f1 0078  
             ___ftmul@f2 007B               ___ftsub@f1 004C               ___ftsub@f2 0049  
             ___fttol@f1 002A           __pcstackCOMMON 0070             __pidataBANK1 08F8  
           __pidataBANK3 0902            __end_of_floor 0EAA            __end_of_frexp 09F8  
              LCD_putc@c 0077                  ??_floor 0043                  ??_frexp 0074  
             __pbssBANK1 00E1       __size_of_eval_poly 0079               ??_LCD_Init 0020  
             ??_LCD_putc 0074               __pmaintext 0604                  ?___bmul 0070  
                ?___ftge 0070                ?___altoft 0038                ?___awtoft 0078  
              ?___ftpack 0070                  _LCD_Out 00BE               __stringtab 0800  
        __size_of___bmul 0011          __size_of___ftge 005D                  ___awdiv 0A85  
                ___ftadd 0251                  ___awmod 0A3A                  _cos$640 0062  
                ___ftdiv 0F48                  ___ftneg 08F0                  ___ftmul 0180  
                ___ftsub 0952                  ___fttol 0CEA               ??___altoft 003C  
             ??___awtoft 007B               ??___ftpack 0075        __end_of_eval_poly 0CEA  
                __ptext1 035A                  __ptext2 0995                  __ptext3 0C02  
                __ptext4 0477                  __ptext5 0E11                  __ptext6 0C71  
                __ptext7 0180                  __ptext8 090F                  __ptext9 0952  
                _sin$641 0058             __size_of_cos 006F             __size_of_sin 018D  
       ___awmod@dividend 0072                  main@lcd 00C6                _LCD_Write 0ADE  
   end_of_initialization 07FC                _LCD_putrs 0973     __size_of_powerFactor 011D  
             ?_LCD_Write 0070               ?_LCD_putrs 0070              ___ftdiv@exp 004F  
      __size_of_LCD_Init 00BA        __size_of_LCD_putc 009E              ___ftmul@exp 0024  
         __end_of___bmul 0920           __end_of___ftge 0B96               LCD_Write@c 0077  
             floor@expon 0047      start_initialization 07D9               eval_poly@d 003A  
             eval_poly@n 003B               eval_poly@x 0037              __end_of_cos 0C71  
            __end_of_sin 0604               LCD_putrs@a 007A               LCD_putrs@i 0078  
             frexp@value 0070                 ??___bmul 0071                 ??___ftge 0076  
             init_fetch0 0920              __pdataBANK1 00D7              __pdataBANK3 0190  
      __size_of___altoft 0042        __size_of___awtoft 0021        __size_of___ftpack 006C  
               ?_LCD_Out 0070                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                 LCD_Out@c 0073              ??_LCD_Write 0074  
            ??_LCD_putrs 0078               sin@coeff_a 0806               sin@coeff_b 0815  
        _powerFactor$638 00A8          _powerFactor$639 00AB                 ?___awdiv 0070  
               ?___ftadd 002A                 ?___awmod 0070                 ?___ftdiv 0041  
               ?___ftneg 0070                 ?___ftmul 0078                 ?___ftsub 0049  
               ?___fttol 002A                __pstrings 0800                ceil@expon 0047  
              _eval_poly 0C71           __size_of_floor 0099           __size_of_frexp 003A  
               _LCD_Init 0004                 _LCD_putc 0EAA                main@F1461 00DC  
              main@F1471 00D7                main@F1459 0190              __stringbase 0805  
             ?_eval_poly 0037         __size_of_LCD_Out 00C2            ??_powerFactor 0067  
              frexp@eptr 0073         __size_of___awdiv 0059         __size_of___ftadd 0109  
       __size_of___awmod 004B         __size_of___ftdiv 00B8         __size_of___ftneg 0008  
               ___altoft 09F8         __size_of___ftmul 00D1         __size_of___ftsub 0021  
       __size_of___fttol 008E                 ___awtoft 0931                 ___ftpack 0B96  
     __end_of__stringtab 0806                 __ptext10 08F0                 __ptext11 0F48  
               __ptext20 0A3A                 __ptext12 0D78                 __ptext21 0A85  
               __ptext13 09BE                 __ptext22 0973                 __ptext14 0CEA  
               __ptext23 0EAA                 __ptext15 0B39                 __ptext24 0004  
               __ptext16 0251                 __ptext25 0ADE                 __ptext17 09F8  
               __ptext26 00BE                 __ptext18 0931                 __ptext19 0B96  
          __size_of_ceil 0099            __size_of_fabs 0029            __size_of_main 01D5  
    __end_of_powerFactor 0477              ??_eval_poly 003D                 init_ram0 0924  
              stringcode 0800                 stringdir 0800                 stringtab 0800  
            _powerFactor 035A  
